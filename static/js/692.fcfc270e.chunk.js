"use strict";(self.webpackChunkreact_admin_web=self.webpackChunkreact_admin_web||[]).push([[692],{23692:function(n,r,o){o.r(r),r.default='# 按钮权限控制 ✨\r\n按钮权限和菜单类似，我们需要在菜单目录下添加按钮标识，获取菜单时按钮和菜单一起返回，在编码时只需要判断是否显示就行，详情参考代码：`@/compenents/PermissionControl.jsx`，以下是代码的具体使用方式。\r\n\r\n## useButtonAuthorization\r\n最简单的方式就是通过 `useButtonAuthorization` 获得一个函数，然后使用该函数判断当前用户在当前也是否拥有某个按钮的访问权限。\r\n```jsx\r\nimport { Button } from "antd";\r\nimport { useButtonAuthorization } from "@/components/PermissionControl";\r\n\r\nexport default function Page() {\r\n  const hasButtonPermission = useButtonAuthorization();\r\n\r\n  return hasButtonPermission("add") ? <Button>新增</Button> : undefined;\r\n}\r\n```\r\n\r\n## PermissionControl\r\n或者使用 `PermissionControl` 组件进行包裹\r\n```jsx\r\nimport { Button } from "antd";\r\nimport PermissionControl from "@/components/PermissionControl";\r\n\r\nexport default function PermissionButton() {\r\n  return (\r\n    <PermissionControl permission="add">\r\n      <Button>新增</Button>\r\n    </PermissionControl>\r\n  );\r\n}\r\n```\r\n\r\n## useAnyButtonPermission\r\n在按钮组中我们可能需要知道用户是否至少拥有其中一个的按钮的权限，以控制父级是否显示，这时就需要使用 `useAnyButtonPermission`。\r\n```jsx\r\nimport { Button, Space } from "antd";\r\nimport PermissionControl, {\r\n  useAnyButtonPermission,\r\n} from "@/components/PermissionControl";\r\n\r\nexport default function PermissionButton() {\r\n  const isShowButtonGroup = useAnyButtonPermission("add", "edit", "del");\r\n\r\n  return isShowButtonGroup ? (\r\n    <Space>\r\n      <PermissionControl permission="add">\r\n        <Button>新增</Button>\r\n      </PermissionControl>\r\n      <PermissionControl permission="edit">\r\n        <Button>编辑</Button>\r\n      </PermissionControl>\r\n      <PermissionControl permission="del">\r\n        <Button>删除</Button>\r\n      </PermissionControl>\r\n    </Space>\r\n  ) : undefined;\r\n}\r\n```\r\n\r\n## useFilterElementPermission\r\n在上面的代码中，我们每个按钮标识都需要写两次，一次是在判断按钮组是否显示，一次是在判断按钮是否显示，这在后期增加或者删减按钮时很容易出错，所以我们还可以使用 `useFilterElementPermission`\r\n```jsx\r\nimport { Button, Space } from "antd";\r\nimport { useFilterElementPermission } from "@/components/PermissionControl";\r\n\r\nexport default function PermissionButton() {\r\n  const [buttonGroupRender, showButtonGroup] = useFilterElementPermission(\r\n    {\r\n      render: () => <Button>新增</Button>,\r\n      permission: "add",\r\n    },\r\n    {\r\n      render: () => <Button>编辑</Button>,\r\n      permission: "edit",\r\n    },\r\n    {\r\n      render: () => <Button>删除</Button>,\r\n      permission: "del",\r\n    }\r\n  );\r\n\r\n  return showButtonGroup ? <Space>{buttonGroupRender()}</Space> : undefined;\r\n}\r\n\r\n```\r\n> 注意：当向 `buttonGroupRender` 渲染函数传递参数时，参数会直接传递给 `render`，这在类似表格列中使用时非常有用。'}}]);
//# sourceMappingURL=692.fcfc270e.chunk.js.map