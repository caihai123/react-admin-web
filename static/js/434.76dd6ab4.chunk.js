"use strict";(self.webpackChunkreact_admin_web=self.webpackChunkreact_admin_web||[]).push([[434],{20434:function(r,e,n){n.r(e),e.default='# useDomSize ✨\r\n\r\n节点尺寸变化时执行回调\r\n\r\n> `ahook` 中的 [useSize](https://ahooks.js.org/zh-CN/hooks/use-size) 和此类似，但它是直接返回 size\r\n\r\n## 代码演示\r\n\r\nuseDomSize 可以接收 ref 参数\r\n\r\n```jsx\r\nimport React, { useRef } from "react";\r\nimport useDomSize from "@/hooks/useDomSize";\r\n\r\nexport default () => {\r\n  const ref = useRef(null);\r\n  useDomSize(ref, ({ width, height }) => {\r\n    // div 尺寸发生改变时执行\r\n  });\r\n  return <div ref={ref}></div>;\r\n};\r\n```\r\n\r\nuseDomSize 可以接收 dom\r\n\r\n```jsx\r\nimport React, { useRef } from "react";\r\nimport useDomSize from "@/hooks/useDomSize";\r\n\r\nexport default () => {\r\n  useDomSize(document.querySelector("body"), ({ width, height }) => {\r\n    // body 尺寸发生改变时执行\r\n  });\r\n  return <div></div>;\r\n};\r\n```'}}]);
//# sourceMappingURL=434.76dd6ab4.chunk.js.map