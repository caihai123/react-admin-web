{"version":3,"file":"static/js/671.a0d3d903.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/components/Markdown/index.tsx","webpack://react-admin-web/./src/components/VideoModal.tsx","webpack://react-admin-web/./src/components/utils/createCompoundedComponent.ts","webpack://react-admin-web/./src/pages/components/video-modal/doc.md","webpack://react-admin-web/./src/pages/components/video-modal/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useBoolean } from \"ahooks\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport { selectTheme } from \"@/store/system\";\r\nimport { useSelector } from \"react-redux\";\r\nimport copy from \"clipboard-copy\";\r\nimport rehypeHighlight from \"rehype-highlight\"; // 代码块高亮插件\r\nimport \"./github-markdown.css\"; // GitHub Markdown 样式\r\nimport \"./github-highlight.css\"; // github hightlight 样式\r\n\r\nconst CopyCodeContainer = function () {\r\n  const [copied, { setTrue, setFalse }] = useBoolean(false);\r\n  return (\r\n    <div className=\"zeroclipboard-container\">\r\n      <div\r\n        className={`copy-code-btn ${copied && \"copied\"}`}\r\n        onClick={(event) => {\r\n          const codeContainerNode =\r\n            event.currentTarget.closest(\".code-container\");\r\n          const text =\r\n            codeContainerNode?.getElementsByTagName(\"pre\")[0].innerText;\r\n          copy(text || \"\").then(() => {\r\n            setTrue();\r\n            setTimeout(setFalse, 1500);\r\n          });\r\n        }}\r\n      >\r\n        {!copied ? (\r\n          <svg\r\n            aria-hidden=\"true\"\r\n            height=\"16\"\r\n            viewBox=\"0 0 16 16\"\r\n            version=\"1.1\"\r\n            width=\"16\"\r\n            data-view-component=\"true\"\r\n            className=\"octicon\"\r\n          >\r\n            <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path>\r\n            <path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            aria-hidden=\"true\"\r\n            height=\"16\"\r\n            viewBox=\"0 0 16 16\"\r\n            version=\"1.1\"\r\n            width=\"16\"\r\n            data-view-component=\"true\"\r\n            className=\"octicon color-fg-success\"\r\n          >\r\n            <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\r\n          </svg>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Markdown: React.FC<{ markdown: string }> = ({ markdown }) => {\r\n  const themeName = useSelector(selectTheme);\r\n\r\n  return (\r\n    <div\r\n      className=\"markdown-body\"\r\n      data-theme={themeName}\r\n      style={{ padding: 24 }}\r\n    >\r\n      <ReactMarkdown\r\n        remarkPlugins={[remarkGfm]}\r\n        rehypePlugins={[rehypeHighlight]}\r\n        skipHtml={true} // 禁止 react-markdown 将 HTML 标签包裹在 <p> 元素内部\r\n        components={{\r\n          pre: ({ children }) => (\r\n            <div className=\"highlight code-container\">\r\n              <pre>{children}</pre>\r\n              <CopyCodeContainer />\r\n            </div>\r\n          ),\r\n        }}\r\n      >\r\n        {markdown}\r\n      </ReactMarkdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Markdown;\r\n","import { useState } from \"react\";\r\nimport { Image, Result, theme } from \"antd\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport createCompoundedComponent from \"@/components/utils/createCompoundedComponent\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  src: string;\r\n  onClose?: () => void;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  autoPlay?: boolean;\r\n  afterClose?: () => void;\r\n};\r\n\r\nconst VideoModal = function (props: Props) {\r\n  const { width = 800, height, autoPlay = true } = props;\r\n\r\n  const [error, setError] = useState<boolean>(false);\r\n\r\n  const {\r\n    token: { colorBgLayout },\r\n  } = theme.useToken();\r\n\r\n  return (\r\n    <Image\r\n      style={{ display: \"none\" }}\r\n      preview={{\r\n        visible: props.visible,\r\n        destroyOnClose: true,\r\n        imageRender: () => {\r\n          if (error) {\r\n            return (\r\n              <Result\r\n                status=\"error\"\r\n                title=\"视频不能正常播放！\"\r\n                subTitle=\"The video doesn't play properly!\"\r\n                style={{ width, background: colorBgLayout }}\r\n              ></Result>\r\n            );\r\n          } else {\r\n            return (\r\n              <video\r\n                width={width}\r\n                height={height}\r\n                autoPlay={autoPlay}\r\n                controls\r\n                src={props.src}\r\n                onError={() => setError(true)}\r\n                onPlay={() => setError(false)}\r\n              ></video>\r\n            );\r\n          }\r\n        },\r\n        toolbarRender: () => null,\r\n        onVisibleChange: () => {\r\n          props.onClose?.();\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nlet root: ReactDOM.Root | null;\r\nlet uuid: number = 1;\r\n\r\n/** 函数式调用 会挂载到body下 重复调用时只会保留最后一个*/\r\nconst showModal = function (src: Props[\"src\"]) {\r\n  uuid++;\r\n  if (!root) {\r\n    const container = document.createDocumentFragment();\r\n    document.body.appendChild(container);\r\n    root = ReactDOM.createRoot(container);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    root?.render(<VideoModal key={uuid} src={src} visible={false} />);\r\n  };\r\n\r\n  root.render(\r\n    <VideoModal\r\n      src={src}\r\n      key={uuid}\r\n      visible={true}\r\n      onClose={() => handleClose()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default createCompoundedComponent(VideoModal, { showModal });\r\n","import React from \"react\";\r\n\r\n// 定义子组件的类型\r\ninterface SubComponents {\r\n  [key: string]: any;\r\n}\r\n\r\n// 主组件和子组件的组合类型\r\ntype CompoundedComponent<F, T> = F & T;\r\n\r\n/**\r\n * 创建组合组件\r\n */\r\nexport default function createCompoundedComponent<\r\n  F extends React.FC<any>,\r\n  T extends SubComponents\r\n>(mainComponent: F, subComponents: T): CompoundedComponent<F, T> {\r\n  // 将主组件转换为复合组件类型\r\n  const Component = mainComponent as CompoundedComponent<F, T>;\r\n\r\n  // 使用 Object.defineProperty 添加子组件到主组件上\r\n  Object.keys(subComponents).forEach((key) => {\r\n    Object.defineProperty(Component, key, {\r\n      value: subComponents[key],\r\n      writable: false, // 确保子组件不可变\r\n      enumerable: true,\r\n    });\r\n  });\r\n\r\n  return Component;\r\n}\r\n","export default \"# VideoModal\\r\\n视频播放器组件\\r\\n\\r\\n## 代码演示\\r\\n```tsx\\r\\nimport { useState } from \\\"react\\\";\\r\\nimport { Button } from \\\"antd\\\";\\r\\nimport VideoModal from \\\"@/components/VideoModal\\\";\\r\\n\\r\\nexport default function AudioPage() {\\r\\n  const [visible, setVisible] = useState(false);\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button type=\\\"primary\\\" onClick={() => setVisible(true)}>\\r\\n        点击播放视频\\r\\n      </Button>\\r\\n\\r\\n      <VideoModal\\r\\n        visible={visible}\\r\\n        src=\\\"https://media.w3.org/2010/05/sintel/trailer.mp4\\\"\\r\\n        onClose={() => setVisible(false)}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n```\\r\\n\\r\\n## 推荐使用 `showModal` \\r\\n就像普通 `Modal` 一样，`VideoModal` 总是会在 `body` 下创建节点，并且它不应该同时存在多个实例，所以我认为使用 `showModal` 调用才是合理的编码方式。\\r\\n```tsx\\r\\nimport { Button } from \\\"antd\\\";\\r\\nimport VideoModal from \\\"@/components/VideoModal\\\";\\r\\n\\r\\nexport default function PlayAudio() {\\r\\n  return (\\r\\n    <Button\\r\\n      onClick={() =>\\r\\n        VideoModal.showModal(\\\"https://media.w3.org/2010/05/sintel/trailer.mp4\\\")\\r\\n      }\\r\\n    >\\r\\n      点击播放视频\\r\\n    </Button>\\r\\n  );\\r\\n}\\r\\n\\r\\n```\";","import { useState } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport VideoModal from \"@/components/VideoModal\";\r\nimport Markdown from \"@/components/Markdown\";\r\nimport doc from \"./doc.md\";\r\n\r\nexport default function AudioPage() {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Button type=\"primary\" onClick={() => setVisible(true)}>\r\n          点击播放视频\r\n        </Button>\r\n\r\n        <VideoModal\r\n          visible={visible}\r\n          src=\"https://media.w3.org/2010/05/sintel/trailer.mp4\"\r\n          onClose={() => setVisible(false)}\r\n        />\r\n      </Card>\r\n      <Markdown markdown={doc} />\r\n    </>\r\n  );\r\n}\r\n"],"names":["CopyCodeContainer","copied","setTrue","setFalse","useBoolean","_jsx","className","children","onClick","event","codeContainerNode","currentTarget","closest","text","getElementsByTagName","innerText","copy","then","setTimeout","height","viewBox","version","width","d","_jsxs","Markdown","markdown","themeName","useSelector","selectTheme","style","padding","ReactMarkdown","remarkPlugins","remarkGfm","rehypePlugins","rehypeHighlight","skipHtml","components","pre","VideoModal","props","autoPlay","error","setError","useState","token","colorBgLayout","theme","Image","display","preview","visible","destroyOnClose","imageRender","Result","status","title","subTitle","background","controls","src","onError","onPlay","toolbarRender","onVisibleChange","onClose","root","uuid","createCompoundedComponent","showModal","container","document","createDocumentFragment","body","appendChild","ReactDOM","render","mainComponent","subComponents","Component","Object","keys","forEach","key","defineProperty","value","writable","enumerable","AudioPage","setVisible","_Fragment","Card","Button","type","doc"],"sourceRoot":""}