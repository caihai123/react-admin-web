{"version":3,"file":"static/js/964.19af115d.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/components/CollapseTransition.tsx","webpack://react-admin-web/./src/pages/Transition.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  children: React.ReactElement;\r\n  appear?: boolean;\r\n  type?: \"vertical\" | \"horizontal\";\r\n};\r\n\r\nconst CollapseContainer = styled.div`\r\n  transition: 0.3s height ease-in-out, 0.3s width ease-in-out;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport default function CollapseTransition(props: Props) {\r\n  const nodeRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const [oldSize, setOldSize] = React.useState({ width: \"\", height: \"\" });\r\n\r\n  React.useLayoutEffect(() => {\r\n    const dom = nodeRef.current;\r\n    if (dom) {\r\n      setOldSize({\r\n        width: `${dom.scrollWidth}px`,\r\n        height: `${dom.scrollHeight}px`,\r\n      });\r\n    }\r\n  }, [nodeRef]);\r\n\r\n  if (!props.children) return props.children;\r\n\r\n  const showIn = () => {\r\n    const dom = nodeRef.current;\r\n    if (dom) {\r\n      if (props.type === \"horizontal\") {\r\n        dom.style.width = oldSize.width;\r\n      } else {\r\n        dom.style.height = oldSize.height;\r\n      }\r\n    }\r\n  };\r\n\r\n  const showOut = () => {\r\n    const dom = nodeRef.current;\r\n    if (dom) {\r\n      if (props.type === \"horizontal\") {\r\n        dom.style.width = \"0\";\r\n      } else {\r\n        dom.style.height = \"0\";\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={props.show}\r\n      nodeRef={nodeRef}\r\n      timeout={300}\r\n      unmountOnExit\r\n      appear={props.appear}\r\n      onEnter={showOut}\r\n      onEntering={showIn}\r\n      onExit={showIn}\r\n      onExiting={showOut}\r\n    >\r\n      <CollapseContainer ref={nodeRef}>{props.children}</CollapseContainer>\r\n    </CSSTransition>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Card, theme } from \"antd\";\r\nimport { useBoolean } from \"ahooks\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport CollapseTransition from \"@/components/CollapseTransition\";\r\nimport \"@/styles/transition.css\";\r\n\r\nexport default function AnimateDemo() {\r\n  const {\r\n    token: { colorPrimary, colorWhite },\r\n  } = theme.useToken();\r\n\r\n  const [show1, { toggle: toggle1 }] = useBoolean(true);\r\n  const [show2, { toggle: toggle2 }] = useBoolean(true);\r\n  const [show3, { toggle: toggle3 }] = useBoolean(true);\r\n\r\n  const nodeRef1 = React.useRef(null);\r\n  const nodeRef2 = React.useRef(null);\r\n  const nodeRef3 = React.useRef(null);\r\n  const nodeRef4 = React.useRef(null);\r\n  const nodeRef5 = React.useRef(null);\r\n  const nodeRef6 = React.useRef(null);\r\n  const nodeRef7 = React.useRef(null);\r\n\r\n  const transitionBoxStyle: React.CSSProperties = {\r\n    width: 200,\r\n    height: 100,\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    marginRight: 20,\r\n    marginBottom: 10,\r\n    padding: 20,\r\n    textAlign: \"center\",\r\n    borderRadius: 4,\r\n    boxSizing: \"border-box\",\r\n    color: colorWhite,\r\n    fontSize: 16,\r\n    background: colorPrimary,\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>fade 淡入淡出</h2>\r\n        <Card>\r\n          <Button onClick={() => toggle1()}>点我</Button>\r\n          <div style={{ display: \"flex\", marginTop: 20, height: 100 }}>\r\n            <CSSTransition\r\n              in={show1}\r\n              nodeRef={nodeRef1}\r\n              timeout={300}\r\n              unmountOnExit\r\n              classNames=\"fade-in-linear\"\r\n              appear\r\n            >\r\n              <div ref={nodeRef1} style={transitionBoxStyle}>\r\n                fade-in-linear\r\n              </div>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={show1}\r\n              nodeRef={nodeRef2}\r\n              timeout={300}\r\n              unmountOnExit\r\n              classNames=\"fade-in\"\r\n              appear\r\n            >\r\n              <div ref={nodeRef2} style={transitionBoxStyle}>\r\n                fade-in\r\n              </div>\r\n            </CSSTransition>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 20 }}>\r\n        <h2>zoom 缩放</h2>\r\n        <Card>\r\n          <Button onClick={() => toggle2()}>点我</Button>\r\n          <div style={{ display: \"flex\", marginTop: 20, height: 100 }}>\r\n            <CSSTransition\r\n              in={show2}\r\n              nodeRef={nodeRef3}\r\n              timeout={300}\r\n              unmountOnExit\r\n              classNames=\"zoom-in-center\"\r\n              appear\r\n            >\r\n              <div ref={nodeRef3} style={transitionBoxStyle}>\r\n                zoom-in-center\r\n              </div>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={show2}\r\n              nodeRef={nodeRef4}\r\n              timeout={300}\r\n              unmountOnExit\r\n              classNames=\"zoom-in-top\"\r\n              appear\r\n            >\r\n              <div ref={nodeRef4} style={transitionBoxStyle}>\r\n                zoom-in-top\r\n              </div>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={show2}\r\n              nodeRef={nodeRef5}\r\n              timeout={300}\r\n              unmountOnExit\r\n              classNames=\"zoom-in-bottom\"\r\n              appear\r\n            >\r\n              <div ref={nodeRef5} style={transitionBoxStyle}>\r\n                zoom-in-bottom\r\n              </div>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={show2}\r\n              nodeRef={nodeRef6}\r\n              timeout={300}\r\n              unmountOnExit\r\n              classNames=\"zoom-in-left\"\r\n              appear\r\n            >\r\n              <div ref={nodeRef6} style={transitionBoxStyle}>\r\n                zoom-in-left\r\n              </div>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={show2}\r\n              nodeRef={nodeRef7}\r\n              timeout={300}\r\n              unmountOnExit\r\n              classNames=\"zoom-in-right\"\r\n              appear\r\n            >\r\n              <div ref={nodeRef7} style={transitionBoxStyle}>\r\n                zoom-in-left\r\n              </div>\r\n            </CSSTransition>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 20 }}>\r\n        <h2>collapse 展开折叠</h2>\r\n        <Card>\r\n          <Button onClick={() => toggle3()}>点我</Button>\r\n          <div style={{ display: \"flex\", marginTop: 20, height: 100 }}>\r\n            <CollapseTransition show={show3} appear>\r\n              <div style={transitionBoxStyle}>collapse-transition</div>\r\n            </CollapseTransition>\r\n            <CollapseTransition show={show3} appear type=\"horizontal\">\r\n              <div style={transitionBoxStyle}>\r\n                collapse-transition-horizontal\r\n              </div>\r\n            </CollapseTransition>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["CollapseContainer","styled","CollapseTransition","props","nodeRef","React","oldSize","setOldSize","width","height","dom","current","scrollWidth","scrollHeight","children","showIn","type","style","showOut","_jsx","CSSTransition","in","show","timeout","unmountOnExit","appear","onEnter","onEntering","onExit","onExiting","ref","AnimateDemo","token","colorPrimary","colorWhite","theme","show1","toggle","toggle1","useBoolean","show2","toggle2","show3","toggle3","nodeRef1","nodeRef2","nodeRef3","nodeRef4","nodeRef5","nodeRef6","nodeRef7","transitionBoxStyle","display","justifyContent","alignItems","marginRight","marginBottom","padding","textAlign","borderRadius","boxSizing","color","fontSize","background","_jsxs","_Fragment","Card","Button","onClick","marginTop","classNames"],"sourceRoot":""}