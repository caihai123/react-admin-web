{"version":3,"file":"static/js/342.e995dfee.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/pages/system/dept/AddEditModal.tsx","webpack://react-admin-web/./src/pages/system/dept/index.tsx","webpack://react-admin-web/./src/store/api-slice/dept.ts","webpack://react-admin-web/./node_modules/antd/es/col/index.js","webpack://react-admin-web/./node_modules/antd/es/row/index.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  App,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  TreeSelect,\r\n  Space,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  type FormProps,\r\n} from \"antd\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\nimport {\r\n  useGetDeptSelectQuery,\r\n  useAddDeptItemMutation,\r\n  useUpdateDeptItemMutation,\r\n} from \"@/store/api-slice/dept\";\r\nimport createCompoundedComponent from \"@/components/utils/createCompoundedComponent\";\r\nimport { useBoolean } from \"ahooks\";\r\n\r\ntype FieldType = {\r\n  id?: string;\r\n  parentId?: string;\r\n  deptName: string;\r\n  description?: string;\r\n};\r\n\r\nexport type Props = {\r\n  visible: boolean;\r\n  initialValues?: FormProps<FieldType>[\"initialValues\"];\r\n  onClose?: () => void;\r\n};\r\n\r\nconst defaultValues = {\r\n  id: \"\",\r\n  parentId: undefined,\r\n  deptName: \"\",\r\n  description: \"\",\r\n};\r\n\r\n/** 新增或者编辑的弹窗组件 */\r\nconst AddEditModal = function (props: Props) {\r\n  const { message } = App.useApp();\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const id = Form.useWatch<FieldType[\"id\"]>(\"id\", form);\r\n\r\n  const { data: deptSelectOptions } = useGetDeptSelectQuery();\r\n  const [addDeptItem] = useAddDeptItemMutation();\r\n  const [updateDeptItem] = useUpdateDeptItemMutation();\r\n\r\n  const resetFields = React.useCallback(\r\n    // props.initialValues 很有可能是一个空对象或者undefined，这时有的组件不会重置为空，所以需要与defaultValues合并后传入\r\n    () => form.setFieldsValue({ ...defaultValues, ...props.initialValues }),\r\n    [form, props.initialValues]\r\n  );\r\n\r\n  React.useEffect(() => resetFields(), [resetFields]);\r\n\r\n  const [loading, setLoading] = useLoadingDelayAndKeep(false);\r\n\r\n  return (\r\n    <Modal\r\n      title={id ? \"编辑\" : \"新增\"}\r\n      width={800}\r\n      open={props.visible}\r\n      centered={true}\r\n      wrapClassName=\"custom-modal-style\"\r\n      maskClosable={false}\r\n      footer={\r\n        <Space>\r\n          <Button\r\n            onClick={() => {\r\n              props.onClose?.();\r\n              // 点击取消时重置表单\r\n              resetFields();\r\n            }}\r\n          >\r\n            取消\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            loading={loading}\r\n            onClick={() => form.submit()}\r\n          >\r\n            确定\r\n          </Button>\r\n        </Space>\r\n      }\r\n      onCancel={() => props.onClose?.()}\r\n    >\r\n      <Form<FieldType>\r\n        form={form}\r\n        layout=\"vertical\"\r\n        autoComplete=\"off\"\r\n        onFinish={(values) => {\r\n          const submitFn = id ? updateDeptItem : addDeptItem;\r\n          const successMsg = id ? \"更新成功！\" : \"新增成功！\";\r\n          setLoading.setTrue();\r\n          // @ts-ignore\r\n          submitFn(values)\r\n            .unwrap()\r\n            .then(() => {\r\n              message.success(successMsg);\r\n              props.onClose?.();\r\n            })\r\n            .finally(() => {\r\n              setLoading.setFalse();\r\n            });\r\n        }}\r\n        initialValues={defaultValues}\r\n      >\r\n        <Form.Item name=\"id\" hidden>\r\n          <Input />\r\n        </Form.Item>\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item label=\"父节点\" name=\"parentId\" required>\r\n              <TreeSelect\r\n                treeData={deptSelectOptions}\r\n                placeholder=\"根节点\"\r\n                disabled\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              name=\"deptName\"\r\n              label=\"部门名称\"\r\n              rules={[{ required: true, message: \"请填写部门名称\" }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item name=\"description\" label=\"备注\">\r\n              <Input.TextArea placeholder=\"请输入\" />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n/** 控制 AddEditModal 的显示 */\r\nconst ManagedModal = function (props: {\r\n  initialValues?: Props[\"initialValues\"];\r\n  content: (set: (v: boolean) => void) => React.ReactNode;\r\n}) {\r\n  const [visible, { set }] = useBoolean(false);\r\n  return (\r\n    <>\r\n      {props.content(set)}\r\n      <AddEditModal\r\n        visible={visible}\r\n        initialValues={props.initialValues}\r\n        onClose={() => set(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default createCompoundedComponent(AddEditModal, { ManagedModal });\r\n","import { Button, Space, App, Alert } from \"antd\";\r\nimport ProTable from \"@/components/ProTable\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  useGetDeptAllQuery,\r\n  useDeleteDeptItemMutation,\r\n} from \"@/store/api-slice/dept\";\r\nimport { useFilterElementPermission } from \"@/components/PermissionControl\";\r\nimport AddEditModal from \"./AddEditModal\";\r\n\r\nimport type { ProTableProps } from \"@/components/ProTable\";\r\nimport type { Dept } from \"@/api/system/dept\";\r\n\r\nexport default function Page() {\r\n  const { modal, message } = App.useApp();\r\n\r\n  const { data: tableData, isFetching, refetch } = useGetDeptAllQuery();\r\n\r\n  const [deleteDeptItem] = useDeleteDeptItemMutation();\r\n  const deleteItem = function (id: Dept[\"id\"]) {\r\n    deleteDeptItem({ id })\r\n      .unwrap()\r\n      .then(() => {\r\n        message.success(\"删除成功！\");\r\n      });\r\n  };\r\n\r\n  // 表格操作栏\r\n  const [actionRender, isShowAction] = useFilterElementPermission(\r\n    {\r\n      render: (row) => (\r\n        <AddEditModal.ManagedModal\r\n          content={(set) => (\r\n            <Button type=\"primary\" ghost size=\"small\" onClick={() => set(true)}>\r\n              编辑\r\n            </Button>\r\n          )}\r\n          key={row.id}\r\n          initialValues={{\r\n            id: row.id,\r\n            parentId: row.parentId,\r\n            deptName: row.deptName,\r\n            description: row.description,\r\n          }}\r\n        ></AddEditModal.ManagedModal>\r\n      ),\r\n      permission: \"edit\",\r\n    },\r\n    {\r\n      render: (row) => (\r\n        <AddEditModal.ManagedModal\r\n          content={(set) => (\r\n            <Button type=\"primary\" size=\"small\" onClick={() => set(true)}>\r\n              新增下级\r\n            </Button>\r\n          )}\r\n          initialValues={{\r\n            parentId: row.id,\r\n          }}\r\n        ></AddEditModal.ManagedModal>\r\n      ),\r\n      permission: \"add\",\r\n    },\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          danger\r\n          size=\"small\"\r\n          onClick={() =>\r\n            modal.confirm({\r\n              title: \"提示\",\r\n              content: \"您确定要删除此部门及其子部门吗？\",\r\n              okType: \"danger\",\r\n              onOk: () => deleteItem(row.id),\r\n              centered: true,\r\n            })\r\n          }\r\n        >\r\n          删除\r\n        </Button>\r\n      ),\r\n      permission: \"del\",\r\n    }\r\n  );\r\n\r\n  const columns: ProTableProps[\"columns\"] = [\r\n    {\r\n      title: \"部门名称\",\r\n      dataIndex: \"deptName\",\r\n    },\r\n    {\r\n      title: \"备注\",\r\n      dataIndex: \"description\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (row) => <Space>{actionRender(row)}</Space>,\r\n      width: 100,\r\n      fixed: \"right\",\r\n      hideInTable: !isShowAction,\r\n    },\r\n  ];\r\n\r\n  // 表格工具栏\r\n  const [toolRender] = useFilterElementPermission(\r\n    {\r\n      render: () => (\r\n        <AddEditModal.ManagedModal\r\n          content={(set) => (\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusOutlined />}\r\n              onClick={() => set(true)}\r\n            >\r\n              新增\r\n            </Button>\r\n          )}\r\n          key=\"add\"\r\n        ></AddEditModal.ManagedModal>\r\n      ),\r\n      permission: \"add\",\r\n    },\r\n    {\r\n      render: () => (\r\n        <Button onClick={() => message.warning(\"演示功能\")}>导出</Button>\r\n      ),\r\n      permission: \"export\",\r\n    }\r\n  );\r\n\r\n  // 表格的批量操作栏\r\n  const [batchRender, isShowBatch] = useFilterElementPermission(\r\n    {\r\n      render: () => (\r\n        <Button\r\n          type=\"primary\"\r\n          danger\r\n          onClick={() => message.warning(\"演示功能\")}\r\n        >\r\n          批量删除\r\n        </Button>\r\n      ),\r\n      permission: \"del\",\r\n    },\r\n    {\r\n      render: () => (\r\n        <Button key=\"export\" onClick={() => message.warning(\"演示功能\")}>\r\n          导出数据\r\n        </Button>\r\n      ),\r\n      permission: \"export\",\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        message=\"此页面用redux管理数据，主要用来演示和体验RTK查询的功能\"\r\n        type=\"info\"\r\n        showIcon\r\n        closable\r\n      />\r\n      <ProTable\r\n        rowKey=\"id\"\r\n        columns={columns}\r\n        dataSource={tableData}\r\n        headerTitle=\"部门列表\"\r\n        loading={isFetching}\r\n        search={false}\r\n        onRefresh={refetch}\r\n        toolBarRender={toolRender()}\r\n        batchBarRender={isShowBatch ? batchRender() : undefined}\r\n      ></ProTable>\r\n    </>\r\n  );\r\n}\r\n","import apiSlice from \"./index\";\r\nimport type { Dept, DeptSelectItem } from \"@/api/system/dept\";\r\n\r\nconst apiWithTag = apiSlice.enhanceEndpoints({\r\n  addTagTypes: [\"deptList\", \"deptSelect\"],\r\n});\r\n\r\nconst deleteDeptByid = (deptTreeList: Dept[] = [], id: string): Dept[] => {\r\n  return deptTreeList\r\n    .filter((dept) => dept.id !== id)\r\n    .map(({ children = [], ...rest }) => ({\r\n      ...rest,\r\n      children: children.length ? deleteDeptByid(children, id) : undefined,\r\n    }));\r\n};\r\n\r\nexport const deptSlice = apiWithTag.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // 获取所有部门\r\n    getDeptAll: builder.query<Dept[], void>({\r\n      query: () => \"/api/dept/all\",\r\n      providesTags: [\"deptList\"],\r\n    }),\r\n    // 获取部门选择器\r\n    getDeptSelect: builder.query<DeptSelectItem[], void>({\r\n      query: () => \"/api/dept/select\",\r\n      providesTags: [\"deptSelect\"],\r\n    }),\r\n    // 新增单个部门\r\n    addDeptItem: builder.mutation<any, Omit<Dept, \"id\">>({\r\n      query: (body) => ({\r\n        url: \"/api/dept/add\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"deptList\", \"deptSelect\"],\r\n    }),\r\n    // 更新单个部门\r\n    updateDeptItem: builder.mutation<any, Dept>({\r\n      query: (body) => ({\r\n        url: \"/api/dept/update\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"deptList\", \"deptSelect\"],\r\n    }),\r\n    // 删除单个部门\r\n    deleteDeptItem: builder.mutation<any, Pick<Dept, \"id\">>({\r\n      query: (body) => ({\r\n        url: \"/api/dept/delete\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"deptList\", \"deptSelect\"],\r\n      async onQueryStarted({ id }, { dispatch, queryFulfilled }) {\r\n        // 乐观更新\r\n        const patchResult = dispatch(\r\n          deptSlice.util.updateQueryData(\r\n            \"getDeptAll\",\r\n            undefined,\r\n            (deptTreeData) => deleteDeptByid(deptTreeData, id)\r\n          )\r\n        );\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n        }\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetDeptAllQuery,\r\n  useGetDeptSelectQuery,\r\n  useAddDeptItemMutation,\r\n  useUpdateDeptItemMutation,\r\n  useDeleteDeptItemMutation,\r\n} = deptSlice;\r\n","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["defaultValues","id","parentId","undefined","deptName","description","AddEditModal","props","message","App","form","Form","data","deptSelectOptions","useGetDeptSelectQuery","addDeptItem","useAddDeptItemMutation","updateDeptItem","useUpdateDeptItemMutation","resetFields","React","setFieldsValue","initialValues","loading","setLoading","useLoadingDelayAndKeep","_jsx","Modal","title","width","open","visible","centered","wrapClassName","maskClosable","footer","_jsxs","Space","children","Button","onClick","onClose","type","submit","onCancel","layout","autoComplete","onFinish","values","submitFn","successMsg","setTrue","unwrap","then","success","finally","setFalse","name","hidden","Input","Row","gutter","Col","span","label","required","TreeSelect","treeData","placeholder","disabled","rules","createCompoundedComponent","ManagedModal","set","useBoolean","_Fragment","content","Page","modal","tableData","isFetching","refetch","useGetDeptAllQuery","deleteDeptItem","useDeleteDeptItemMutation","actionRender","isShowAction","useFilterElementPermission","render","row","ghost","size","permission","danger","confirm","okType","onOk","deleteItem","columns","dataIndex","key","fixed","hideInTable","toolRender","icon","PlusOutlined","warning","batchRender","isShowBatch","Alert","showIcon","closable","ProTable","rowKey","dataSource","headerTitle","search","onRefresh","toolBarRender","batchBarRender","apiWithTag","apiSlice","addTagTypes","deleteDeptByid","deptTreeList","filter","dept","map","rest","length","deptSlice","injectEndpoints","endpoints","builder","getDeptAll","query","providesTags","getDeptSelect","mutation","body","url","method","invalidatesTags","async","dispatch","queryFulfilled","patchResult","util","updateQueryData","deptTreeData","undo"],"sourceRoot":""}