{"version":3,"file":"static/js/352.b9b7fbe4.chunk.js","mappings":"+HAAA,4iD","sources":["webpack://react-admin-web/./src/pages/hooks/use-content-overflow.md"],"sourcesContent":["export default \"# useContentOverflow ✨\\r\\n\\r\\n检测内容是否溢出\\r\\n\\r\\n## 代码演示\\r\\n\\r\\n检测向右溢出\\r\\n\\r\\n```jsx\\r\\nimport { useRef } from \\\"react\\\";\\r\\nimport useContentOverflow from \\\"@/hooks/useContentOverflow\\\";\\r\\n\\r\\nexport default function ContentOverflowDetector() {\\r\\n  const containerRef = useRef(null);\\r\\n\\r\\n  const { isOverflowX } = useContentOverflow(containerRef);\\r\\n\\r\\n  return (\\r\\n    <div\\r\\n      ref={containerRef}\\r\\n      className=\\\"ellipsis\\\"\\r\\n      style={{ width: 100, height: 100 }}\\r\\n      title={isOverflowX ? \\\"内容溢出了\\\" : \\\"内容没有溢出\\\"}\\r\\n    >\\r\\n      这里有很多很多很多很多很多很多很多很多很多很多很多很多内容\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n```\\r\\n\\r\\n检测向下溢出\\r\\n\\r\\n```jsx\\r\\nimport { useRef } from \\\"react\\\";\\r\\nimport useContentOverflow from \\\"@/hooks/useContentOverflow\\\";\\r\\n\\r\\nexport default function ContentOverflowDetector() {\\r\\n  const containerRef = useRef(null);\\r\\n\\r\\n  const { isOverflowY } = useContentOverflow(containerRef);\\r\\n\\r\\n  return (\\r\\n    <div\\r\\n      ref={containerRef}\\r\\n      style={{ width: 100, height: 100 }}\\r\\n      title={isOverflowY ? \\\"内容向下溢出了\\\" : \\\"内容没有溢出\\\"}\\r\\n    >\\r\\n      <p>内容</p>\\r\\n      <p>内容</p>\\r\\n      <p>内容</p>\\r\\n      <p>内容</p>\\r\\n      <p>内容</p>\\r\\n      <p>内容</p>\\r\\n      <p>内容</p>\\r\\n      <p>内容</p>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n```\\r\\n\\r\\n## Params\\r\\n\\r\\n| 参数   | 说明             | 默认值 |\\r\\n| ------ | ---------------- | ------ |\\r\\n| target | DOM 节点或者 ref | -      |\\r\\n\\r\\n## Result\\r\\n\\r\\n| 参数        | 说明         | 默认值 |\\r\\n| ----------- | ------------ | ------ |\\r\\n| isOverflowX | 是否向右溢出 | -      |\\r\\n| isOverflowY | 是否向下溢出 | -      |\\r\\n\";"],"names":[],"sourceRoot":""}