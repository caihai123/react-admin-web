{"version":3,"file":"static/js/295.679da6f4.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/components/ProTable/style.module.css?1592","webpack://react-admin-web/./src/components/ProTable/FormItem/Input.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Select.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Checkbox.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Radio.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Date.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/DateRange.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/TreeSelect.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/index.tsx","webpack://react-admin-web/./src/components/DropdownFrom/index.tsx","webpack://react-admin-web/./src/components/ProTable/ColumnSetting.tsx","webpack://react-admin-web/./src/components/ProTable/index.tsx","webpack://react-admin-web/./src/components/OptimisticSwitch.tsx","webpack://react-admin-web/./node_modules/antd/es/modal/PurePanel.js","webpack://react-admin-web/./node_modules/antd/es/modal/index.js","webpack://react-admin-web/./src/components/ModalForm.tsx","webpack://react-admin-web/./src/pages/system/role/AddOrEdit.tsx","webpack://react-admin-web/./src/api/role.ts","webpack://react-admin-web/./src/pages/system/role/index.tsx","webpack://react-admin-web/./node_modules/antd/es/divider/style/index.js","webpack://react-admin-web/./node_modules/antd/es/divider/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tools-bar\":\"ghwuoi3NE3Ry7s7fNzAi\",\"header-title\":\"mtRVkLbROTli4p1ohQ5i\",\"tool-right\":\"gpJXWmO55r2tH9Z_hXa6\",\"toolbar-setting\":\"whG6r6ufswl2doZWNUEI\",\"toolbar-setting-item\":\"te8gfQS8fuVGrAEe5Wko\",\"batch-bar\":\"dDNrcy2mCFFeBtzOHKWq\"};","import { Input as AInput, Form } from \"antd\";\r\n\r\nimport type { GetProps } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: GetProps<typeof AInput>;\r\n};\r\n\r\nexport default function Input({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <AInput placeholder={`请输入${item.title}`} {...item.fieldProps} />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { Select as ASelect, Form, Badge } from \"antd\";\r\n\r\nimport type { GetProps, GetProp } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  options: GetProp<typeof ASelect, \"options\">;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: Omit<GetProps<typeof ASelect>, \"options\">;\r\n};\r\n\r\nexport default function Select({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ASelect\r\n        placeholder={`请选择${item.title}`}\r\n        style={{ width: 183 }}\r\n        allowClear\r\n        {...item.fieldProps}\r\n      >\r\n        {item.options.map((item) => (\r\n          <ASelect.Option key={item.value} value={item.value}>\r\n            {item.color ? (\r\n              <Badge color={item.color} text={item.label} />\r\n            ) : (\r\n              item.label\r\n            )}\r\n          </ASelect.Option>\r\n        ))}\r\n      </ASelect>\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { Checkbox as ACheckbox, Form } from \"antd\";\r\n\r\nimport type { GetProp, GetProps } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  options: GetProp<typeof ACheckbox.Group, \"options\">;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: Omit<GetProps<typeof ACheckbox.Group>, \"options\">;\r\n};\r\n\r\nexport default function Checkbox({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ACheckbox.Group\r\n        options={item.options}\r\n        {...item.fieldProps}\r\n      ></ACheckbox.Group>\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { Radio as ARadio, Form } from \"antd\";\r\n\r\nimport type { GetProps, GetProp } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  options: GetProp<typeof ARadio.Group, \"options\">;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: Omit<GetProps<typeof ARadio.Group>, \"options\">;\r\n};\r\n\r\nexport default function Radio({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ARadio.Group options={item.options} {...item.fieldProps}></ARadio.Group>\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { DatePicker, Form } from \"antd\";\r\n\r\nimport type { GetProps } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: GetProps<typeof DatePicker>;\r\n};\r\n\r\nexport default function Date({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <DatePicker {...item.fieldProps} />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { DatePicker, Form } from \"antd\";\r\n\r\nimport type { GetProps } from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: GetProps<typeof RangePicker>;\r\n};\r\n\r\nexport default function Date({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <RangePicker style={{ width: 250 }} {...item.fieldProps} />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { TreeSelect as ATreeSelect, Form } from \"antd\";\r\n\r\nimport type { GetProps, GetProp } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  options: GetProp<typeof ATreeSelect, \"treeData\">;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: Omit<GetProps<typeof ATreeSelect>, \"options\">;\r\n};\r\n\r\nexport default function TreeSelect({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ATreeSelect\r\n        placeholder={`请选择${item.title}`}\r\n        treeData={item.options}\r\n        style={{ width: 183 }}\r\n        allowClear\r\n        {...item.fieldProps}\r\n      />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { ReactNode } from \"react\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport Radio from \"./Radio\";\r\nimport Date from \"./Date\";\r\nimport DateRange from \"./DateRange\";\r\nimport TreeSelect from \"./TreeSelect\";\r\n\r\nimport type { GetProp } from \"antd\";\r\n\r\nexport type BaseItem = {\r\n  type?:\r\n    | \"input\"\r\n    | \"select\"\r\n    | \"checkbox\"\r\n    | \"radio\"\r\n    | \"date\"\r\n    | \"dateRange\"\r\n    | \"treeSelect\";\r\n  renderFormItem?: ReactNode | (() => ReactNode);\r\n};\r\n\r\ntype SelectItem = BaseItem & GetProp<typeof Select, \"item\">;\r\ntype CheckboxItem = BaseItem & GetProp<typeof Checkbox, \"item\">;\r\ntype RadioItem = BaseItem & GetProp<typeof Radio, \"item\">;\r\ntype DateItem = BaseItem & GetProp<typeof Date, \"item\">;\r\ntype DateRangeItem = BaseItem & GetProp<typeof DateRange, \"item\">;\r\ntype TreeSelectItem = BaseItem & GetProp<typeof TreeSelect, \"item\">;\r\ntype InputItem = BaseItem & GetProp<typeof Input, \"item\">;\r\n\r\nexport type Item =\r\n  | (BaseItem & SelectItem)\r\n  | (BaseItem & CheckboxItem)\r\n  | (BaseItem & RadioItem)\r\n  | (BaseItem & DateItem)\r\n  | (BaseItem & DateRangeItem)\r\n  | (BaseItem & TreeSelectItem)\r\n  | (BaseItem & InputItem);\r\n\r\nexport default function FormItem({ item }: { item: Item }) {\r\n  const { type = \"input\", renderFormItem, ...rest } = item;\r\n  if (renderFormItem) {\r\n    return typeof renderFormItem === \"function\"\r\n      ? renderFormItem()\r\n      : renderFormItem;\r\n  } else {\r\n    switch (type) {\r\n      case \"select\":\r\n        return <Select item={rest as SelectItem} />;\r\n      case \"checkbox\":\r\n        return <Checkbox item={rest as CheckboxItem} />;\r\n      case \"radio\":\r\n        return <Radio item={rest as RadioItem} />;\r\n      case \"date\":\r\n        return <Date item={rest as DateItem} />;\r\n      case \"dateRange\":\r\n        return <DateRange item={rest as DateRangeItem} />;\r\n      case \"treeSelect\":\r\n        return <TreeSelect item={rest as TreeSelectItem} />;\r\n      case \"input\":\r\n        return <Input item={rest as InputItem} />;\r\n      default:\r\n        return <Input item={rest as InputItem} />;\r\n    }\r\n  }\r\n}\r\n","import { ReactNode, forwardRef, useImperativeHandle } from \"react\";\r\nimport { Card, Form, Button, Space } from \"antd\";\r\nimport { CaretUpOutlined, CaretDownOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport { useBoolean } from \"ahooks\";\r\n\r\nimport type { FormProps } from \"antd\";\r\n\r\nconst toolsWidth = \"188px\";\r\n\r\nconst DropdownBox = styled(Form)`\r\n  position: relative;\r\n  overflow-y: hidden;\r\n  padding-top: 16px;\r\n  &:after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    width: ${toolsWidth};\r\n    height: 32px;\r\n    vertical-align: top;\r\n    margin-bottom: 16px;\r\n  }\r\n  & .ant-form-item {\r\n    margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst Tools = styled(Form.Item)`\r\n  position: absolute;\r\n  right: -16px;\r\n  bottom: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nexport type Props = FormProps & { children: ReactNode };\r\nexport type Ref = { submit: () => void; reset: () => void };\r\n\r\nconst DropdownForm = forwardRef<Ref, Props>(function (props, ref) {\r\n  const [form] = Form.useForm();\r\n  const [visible, { setTrue, setFalse }] = useBoolean(false);\r\n\r\n  const { children, style, className, ...rest } = props;\r\n\r\n  const reset = function () {\r\n    form.resetFields();\r\n    form.submit();\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    submit: form.submit,\r\n    reset,\r\n  }));\r\n\r\n  return (\r\n    <Card\r\n      styles={{ body: { paddingTop: 0, paddingBottom: 0 } }}\r\n      style={style}\r\n      className={className}\r\n    >\r\n      <DropdownBox\r\n        layout=\"inline\"\r\n        style={{\r\n          height: visible ? \"auto\" : \"64px\",\r\n          paddingRight: visible ? \"0\" : toolsWidth,\r\n        }}\r\n        form={form}\r\n        autoComplete=\"off\"\r\n        {...rest}\r\n      >\r\n        {children}\r\n        <Tools>\r\n          <Space>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              查询\r\n            </Button>\r\n            <Button onClick={() => reset()}>重置</Button>\r\n            {visible ? (\r\n              <Button\r\n                type=\"link\"\r\n                style={{ padding: 0 }}\r\n                onClick={() => setFalse()}\r\n              >\r\n                收起\r\n                <CaretUpOutlined style={{ marginInlineStart: 0 }} />\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                type=\"link\"\r\n                style={{ padding: 0 }}\r\n                onClick={() => setTrue()}\r\n              >\r\n                展开\r\n                <CaretDownOutlined style={{ marginInlineStart: 0 }} />\r\n              </Button>\r\n            )}\r\n          </Space>\r\n        </Tools>\r\n      </DropdownBox>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DropdownForm;\r\n","import { useState, ReactNode } from \"react\";\r\nimport { Popover, Checkbox, Divider, Button } from \"antd\";\r\n\r\nimport type { GetProp } from \"antd\";\r\n\r\ntype Keys = Array<any>;\r\n\r\ntype Props = {\r\n  /** 指定选中的选项 */\r\n  value: Keys;\r\n  /** 指定可选项 */\r\n  options: Array<{ label: string; value: any }>;\r\n  /** 显示的内容 */\r\n  children: ReactNode;\r\n  /** 变化时的回调函数 */\r\n  onChange: (keys: Keys) => void;\r\n};\r\n\r\nconst ColumnSetting = function (props: Props) {\r\n  const { children, value, onChange, options } = props;\r\n\r\n  const plainOptions = options.map((item) => item.value);\r\n\r\n  const [indeterminate, setIndeterminate] = useState(false);\r\n  const [checkAll, setCheckAll] = useState(true);\r\n\r\n  const onCheckAllChange: GetProp<typeof Checkbox, \"onChange\"> = (e) => {\r\n    onChange(e.target.checked ? plainOptions : []);\r\n    setIndeterminate(false);\r\n    setCheckAll(e.target.checked);\r\n  };\r\n\r\n  const onCheckChange = (list: Keys) => {\r\n    onChange(list);\r\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\r\n    setCheckAll(list.length === plainOptions.length);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      arrow={false}\r\n      content={\r\n        <div style={{ minWidth: 176 }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Checkbox\r\n              indeterminate={indeterminate}\r\n              onChange={onCheckAllChange}\r\n              checked={checkAll}\r\n            >\r\n              列展示\r\n            </Checkbox>\r\n            <Button\r\n              type=\"link\"\r\n              style={{ height: 22, lineHeight: 1, padding: 0 }}\r\n              onClick={() => onCheckChange(plainOptions)}\r\n            >\r\n              重置\r\n            </Button>\r\n          </div>\r\n          <Divider style={{ margin: \"4px 0\" }} />\r\n          <Checkbox.Group\r\n            value={value}\r\n            onChange={(keys) => onCheckChange(keys)}\r\n            style={{ display: \"block\" }}\r\n          >\r\n            {options.map((item) => (\r\n              <Checkbox\r\n                style={{ display: \"flex\", margin: 0 }}\r\n                value={item.value}\r\n                key={item.value}\r\n              >\r\n                {item.label}\r\n              </Checkbox>\r\n            ))}\r\n          </Checkbox.Group>\r\n        </div>\r\n      }\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n    >\r\n      {children}\r\n    </Popover>\r\n  );\r\n};\r\nexport default ColumnSetting;\r\n","import {\r\n  forwardRef,\r\n  useState,\r\n  useMemo,\r\n  useRef,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  ReactNode,\r\n  Key as ReactKey,\r\n} from \"react\";\r\nimport { Card, Table, theme, Space, Tooltip, Dropdown, Button } from \"antd\";\r\nimport { usePagination } from \"ahooks\";\r\nimport styles from \"./style.module.css\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\nimport FormItem from \"./FormItem\";\r\nimport DropdownFrom from \"@/components/DropdownFrom\";\r\nimport ColumnSetting from \"./ColumnSetting\";\r\nimport {\r\n  ReloadOutlined,\r\n  ColumnHeightOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport type { TableProps, TableColumnType } from \"antd\";\r\nimport type { Item as FormItemType } from \"./FormItem/index\";\r\nimport type { Ref as DropdownFromRefType } from \"@/components/DropdownFrom\";\r\n\r\nexport type Ref = {\r\n  /** 手动触发刷新，可传入页码刷新到指定页 */\r\n  refresh: (pageIndex?: number) => void;\r\n  /** 手动触发查询操作 */\r\n  search: () => void;\r\n  /** 手动触发重置操作 */\r\n  reset: () => void;\r\n  /** 手动清空多选 */\r\n  clearSelected: () => void;\r\n};\r\n\r\nexport type ProTableColumnType<RecordType = any> =\r\n  TableColumnType<RecordType> & {\r\n    /** 查询表单初始值 */\r\n    initialValue?: any;\r\n    /** 是否在筛选表单中隐藏该项 默认：false */\r\n    hideInSearch?: boolean;\r\n    /** 是否在表格中隐藏该项 默认：false */\r\n    hideInTable?: boolean;\r\n  } & FormItemType;\r\n\r\nexport type ProTableProps<RecordType = any> = {\r\n  /** 表格行 key 的取值，可以是字符串或一个函数 */\r\n  rowKey: TableProps<RecordType>[\"rowKey\"];\r\n  /** Table 的数据，protable 推荐使用 request 来加载 */\r\n  dataSource?: TableProps<RecordType>[\"dataSource\"];\r\n  /** 获取 dataSource 的方法 */\r\n  request?: (\r\n    /** 查询表单的 params */\r\n    params: any,\r\n    /** 分页参数 */\r\n    pagination: { current: number; pageSize: number }\r\n  ) => Promise<{ list: any[]; total?: number }>;\r\n  /** 表格列及查询表单的配置描述 */\r\n  columns: ProTableColumnType<RecordType>[];\r\n  /** 表格分页配置项 为 false 时不显示*/\r\n  pagination?: TableProps<RecordType>[\"pagination\"];\r\n  /** 自定义表格 loading 默认：不显示 */\r\n  loading?: TableProps<RecordType>[\"loading\"];\r\n  /** 是否显示搜索表单 默认：true */\r\n  search?: boolean;\r\n  /** 批量操作节点 */\r\n  batchBarRender?: ReactNode | ((keys: any[]) => ReactNode);\r\n  /** 工具栏节点 */\r\n  toolBarRender?: ReactNode | ((params: any) => ReactNode);\r\n  /** table 标题 */\r\n  headerTitle?: ReactNode | (() => ReactNode);\r\n  /** Table rowSelection 配置 */\r\n  tableRowSelection?: TableProps<RecordType>[\"rowSelection\"];\r\n  /** 刷新页面时触发 */\r\n  onRefresh?: (params: any) => void;\r\n  /** 提交表单时触发 */\r\n  onSubmit?: (params: any) => void;\r\n  /** 重置表单时触发 */\r\n  onReset?: (params: any) => void;\r\n};\r\n\r\nexport type TableSize = TableProps[\"size\"];\r\n\r\nconst initialTableSize = \"large\"; // 表格尺寸默认值\r\n\r\nconst getRowkey = function (row: ProTableColumnType) {\r\n  return row.key || row.dataIndex;\r\n};\r\n\r\nconst ProTable = forwardRef<Ref, ProTableProps>(function (props, ref) {\r\n  const {\r\n    loading,\r\n    columns,\r\n    dataSource,\r\n    pagination: propPagination = true,\r\n    onRefresh,\r\n    search: showSearch = true,\r\n    batchBarRender,\r\n    toolBarRender,\r\n    headerTitle,\r\n    tableRowSelection,\r\n  } = props;\r\n\r\n  // 搜索表单项\r\n  const formItems = useMemo(() => {\r\n    return columns\r\n      .filter((item) => item.hideInSearch !== true)\r\n      .map((item) => <FormItem item={item} key={getRowkey(item)} />);\r\n  }, [columns]);\r\n\r\n  // 表单的默认值\r\n  const initialValues = useMemo(\r\n    () =>\r\n      Object.fromEntries(\r\n        columns\r\n          .filter((item) => typeof item.initialValue !== \"undefined\")\r\n          .map(({ dataIndex, initialValue }) => [dataIndex, initialValue])\r\n      ),\r\n    [columns]\r\n  );\r\n\r\n  // 查询表单参数缓存\r\n  const [params, setParams] = useState(initialValues);\r\n\r\n  // 查询表单实例\r\n  const searchFrom = useRef<DropdownFromRefType>(null);\r\n\r\n  // 表格上使用的columns\r\n  const tableColumns = useMemo(\r\n    () => columns.filter((item) => item.hideInTable !== true),\r\n    [columns]\r\n  );\r\n\r\n  // request加载数据对象\r\n  const requestData = usePagination(\r\n    ({ current, pageSize }) =>\r\n      // @ts-ignore\r\n      !Array.isArray(dataSource) &&\r\n      props.request?.(params, { current, pageSize }),\r\n    {\r\n      refreshDeps: [params],\r\n      // @ts-ignore\r\n      defaultCurrent: propPagination?.current || 1,\r\n      // @ts-ignore\r\n      defaultPageSize: propPagination?.pageSize || 10,\r\n      loadingDelay: 0,\r\n    }\r\n  );\r\n\r\n  // 表格的可变配置项\r\n  const tableConfig = useMemo(() => {\r\n    const isDataSource = Array.isArray(dataSource);\r\n    const { data, pagination, refresh } = requestData;\r\n    const paginationConfig: TableProps[\"pagination\"] = {\r\n      // table pagination 的默认配置，允许props.pagination 覆盖它\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: (total, range) => `第 ${range.join(\"-\")} 条/共 ${total} 条`,\r\n      style: { marginBottom: -8 },\r\n      // @ts-ignore 我知道它可能为 boolean ,就算放进去也不会出现错误\r\n      ...propPagination,\r\n    };\r\n    return {\r\n      list: isDataSource ? dataSource : data?.list,\r\n      // eslint-disable-next-line no-nested-ternary\r\n      pagination: propPagination\r\n        ? isDataSource\r\n          ? paginationConfig\r\n          : {\r\n              current: pagination.current,\r\n              pageSize: pagination.pageSize,\r\n              total: pagination.total,\r\n              onChange: pagination.onChange,\r\n              ...paginationConfig,\r\n            }\r\n        : false,\r\n      refresh(pageIndex?: number) {\r\n        if (!isDataSource) {\r\n          pageIndex && pageIndex !== pagination.current\r\n            ? pagination.changeCurrent(pageIndex)\r\n            : refresh();\r\n        }\r\n        onRefresh?.(params);\r\n      },\r\n    };\r\n  }, [dataSource, requestData, propPagination, params, onRefresh]);\r\n\r\n  // 表格设置栏\r\n  const [configkeys, setConfigkeys] = useState(\r\n    tableColumns.map((item) => getRowkey(item))\r\n  );\r\n\r\n  // loadingDelay 和 loadingKeep，具体可参考：useLoadingDelayAndKeep\r\n  const [tableLoading, { setTrue, setFalse }] = useLoadingDelayAndKeep(\r\n    typeof loading === \"boolean\" ? loading : false\r\n  );\r\n  useEffect(() => {\r\n    const tableLoading =\r\n      typeof loading === \"boolean\" ? loading : requestData.loading;\r\n    tableLoading ? setTrue() : setFalse();\r\n  }, [loading, requestData.loading, setTrue, setFalse]);\r\n\r\n  // 表格size\r\n  const [tableSize, setTableSize] = useState<TableSize>(initialTableSize);\r\n\r\n  // 当前选中的keys\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState<ReactKey[]>([]);\r\n\r\n  const {\r\n    token: { borderRadius, controlItemBgActive, colorText },\r\n  } = theme.useToken();\r\n\r\n  // 暴露出去的函数\r\n  useImperativeHandle(ref, () => ({\r\n    refresh: tableConfig.refresh,\r\n\r\n    // 触发搜索表单的搜索事件\r\n    search: () => {\r\n      const submit = searchFrom.current?.submit;\r\n      submit ? submit() : setParams(null);\r\n      props.onSubmit?.(params);\r\n    },\r\n\r\n    // 触发搜索表单的重置事件\r\n    reset: () => {\r\n      const reset = searchFrom.current?.reset;\r\n      reset ? reset() : setParams(null);\r\n      props.onReset?.(params);\r\n    },\r\n\r\n    // 清空选中项\r\n    clearSelected: () => setSelectedRowKeys([]),\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      {showSearch && (\r\n        <DropdownFrom\r\n          ref={searchFrom}\r\n          onFinish={(values) => setParams(values)}\r\n          initialValues={initialValues}\r\n        >\r\n          {formItems}\r\n        </DropdownFrom>\r\n      )}\r\n\r\n      <Card\r\n        style={{ marginTop: showSearch ? 16 : 0 }}\r\n        styles={{\r\n          body: { paddingTop: 16, paddingBottom: 24 },\r\n        }}\r\n      >\r\n        {\r\n          <div\r\n            className={styles[\"tools-bar\"]}\r\n            style={{\r\n              display: selectedRowKeys.length > 0 ? \"none\" : \"\",\r\n              color: colorText,\r\n            }}\r\n          >\r\n            <div className={styles[\"header-title\"]}>\r\n              {typeof headerTitle === \"function\" ? headerTitle() : headerTitle}\r\n            </div>\r\n            <div className={styles[\"tool-right\"]}>\r\n              {toolBarRender && (\r\n                <Space>\r\n                  {typeof toolBarRender === \"function\"\r\n                    ? toolBarRender(params)\r\n                    : toolBarRender}\r\n                </Space>\r\n              )}\r\n              <div className={styles[\"toolbar-setting\"]}>\r\n                <div\r\n                  className={styles[\"toolbar-setting-item\"]}\r\n                  onClick={() => tableConfig.refresh()}\r\n                >\r\n                  <Tooltip title=\"刷新\">\r\n                    <ReloadOutlined />\r\n                  </Tooltip>\r\n                </div>\r\n                <Dropdown\r\n                  overlayStyle={{ width: 80 }}\r\n                  menu={{\r\n                    items: [\r\n                      { key: \"large\", label: \"默认\" },\r\n                      { key: \"middle\", label: \"中等\" },\r\n                      { key: \"small\", label: \"紧凑\" },\r\n                    ],\r\n                    selectable: true,\r\n                    defaultSelectedKeys: [initialTableSize],\r\n                    onClick: ({ key }) => setTableSize(key as TableSize),\r\n                  }}\r\n                  trigger={[\"click\"]}\r\n                >\r\n                  <div className={styles[\"toolbar-setting-item\"]}>\r\n                    <Tooltip title=\"密度\">\r\n                      <ColumnHeightOutlined />\r\n                    </Tooltip>\r\n                  </div>\r\n                </Dropdown>\r\n\r\n                <ColumnSetting\r\n                  value={configkeys}\r\n                  options={tableColumns.map((item) => ({\r\n                    label: item.title,\r\n                    value: getRowkey(item),\r\n                  }))}\r\n                  onChange={(keys) => setConfigkeys(keys)}\r\n                >\r\n                  <div className={styles[\"toolbar-setting-item\"]}>\r\n                    <Tooltip title=\"列设置\">\r\n                      <SettingOutlined />\r\n                    </Tooltip>\r\n                  </div>\r\n                </ColumnSetting>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {batchBarRender && (\r\n          <div\r\n            className={styles[\"batch-bar\"]}\r\n            style={{\r\n              display: selectedRowKeys.length > 0 ? \"\" : \"none\",\r\n              color: colorText,\r\n              backgroundColor: controlItemBgActive,\r\n              borderRadius,\r\n            }}\r\n          >\r\n            <div>\r\n              <span>已选 {selectedRowKeys.length} 项</span>\r\n              <Button type=\"link\" onClick={() => setSelectedRowKeys([])}>\r\n                取消选择\r\n              </Button>\r\n            </div>\r\n            <Space>\r\n              {typeof batchBarRender === \"function\"\r\n                ? batchBarRender(selectedRowKeys)\r\n                : batchBarRender}\r\n            </Space>\r\n          </div>\r\n        )}\r\n        <div className={styles[\"main\"]}>\r\n          <Table\r\n            rowKey={props.rowKey}\r\n            dataSource={tableConfig.list}\r\n            columns={tableColumns.filter((item) => {\r\n              const key = getRowkey(item);\r\n              return configkeys.includes(key);\r\n            })}\r\n            loading={tableLoading}\r\n            pagination={tableConfig.pagination}\r\n            rowSelection={\r\n              batchBarRender\r\n                ? {\r\n                    type: \"checkbox\",\r\n                    selectedRowKeys,\r\n                    onChange: (keys) => setSelectedRowKeys(keys),\r\n                    preserveSelectedRowKeys: true,\r\n                    ...tableRowSelection,\r\n                  }\r\n                : undefined\r\n            }\r\n            size={tableSize}\r\n            bordered\r\n            scroll={{ x: \"max-content\" }}\r\n          ></Table>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ProTable;\r\n","import { useBoolean } from \"ahooks\";\r\nimport { Switch } from \"antd\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\n\r\n// 切换失败时自动撤销的 Optimistic Updates 开关\r\n// 注意：暂时还没完全想清楚此组件要不要作为公共基础组件存在\r\n\r\ntype Props = {\r\n  defaultChecked: boolean;\r\n  onChange: (val: boolean) => Promise<any> | null | undefined;\r\n};\r\n\r\nexport default function OptimisticSwitch({\r\n  defaultChecked = false,\r\n  onChange = () => null,\r\n}: Props) {\r\n  const [checked, { set }] = useBoolean(defaultChecked);\r\n  const [loading, { setTrue, setFalse }] = useLoadingDelayAndKeep(false);\r\n\r\n  return (\r\n    <Switch\r\n      checked={checked}\r\n      loading={loading}\r\n      onChange={(val) => {\r\n        set(val);\r\n        setTrue();\r\n        onChange(val)\r\n          ?.catch(() => {\r\n            set(!val);\r\n          })\r\n          .finally(() => setFalse());\r\n      }}\r\n    ></Switch>\r\n  );\r\n}\r\n","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable react/jsx-no-useless-fragment */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Panel } from 'rc-dialog';\nimport { withPureRenderTheme } from '../_util/PurePanel';\nimport { ConfigContext } from '../config-provider';\nimport { ConfirmContent } from './ConfirmDialog';\nimport { Footer, renderCloseIcon } from './shared';\nimport useStyle from './style';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nconst PurePanel = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      closeIcon,\n      closable,\n      type,\n      title,\n      children,\n      footer\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"closeIcon\", \"closable\", \"type\", \"title\", \"children\", \"footer\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const rootPrefixCls = getPrefixCls();\n  const prefixCls = customizePrefixCls || getPrefixCls('modal');\n  const rootCls = useCSSVarCls(rootPrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const confirmPrefixCls = `${prefixCls}-confirm`;\n  // Choose target props by confirm mark\n  let additionalProps = {};\n  if (type) {\n    additionalProps = {\n      closable: closable !== null && closable !== void 0 ? closable : false,\n      title: '',\n      footer: '',\n      children: ( /*#__PURE__*/React.createElement(ConfirmContent, Object.assign({}, props, {\n        prefixCls: prefixCls,\n        confirmPrefixCls: confirmPrefixCls,\n        rootPrefixCls: rootPrefixCls,\n        content: children\n      })))\n    };\n  } else {\n    additionalProps = {\n      closable: closable !== null && closable !== void 0 ? closable : true,\n      title,\n      footer: footer !== null && /*#__PURE__*/React.createElement(Footer, Object.assign({}, props)),\n      children\n    };\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(Panel, Object.assign({\n    prefixCls: prefixCls,\n    className: classNames(hashId, `${prefixCls}-pure-panel`, type && confirmPrefixCls, type && `${confirmPrefixCls}-${type}`, className, cssVarCls, rootCls)\n  }, restProps, {\n    closeIcon: renderCloseIcon(prefixCls, closeIcon),\n    closable: closable\n  }, additionalProps)));\n};\nexport default withPureRenderTheme(PurePanel);","\"use client\";\n\nimport confirm, { modalGlobalConfig, withConfirm, withError, withInfo, withSuccess, withWarn } from './confirm';\nimport destroyFns from './destroyFns';\nimport OriginModal from './Modal';\nimport PurePanel from './PurePanel';\nimport useModal from './useModal';\nfunction modalWarn(props) {\n  return confirm(withWarn(props));\n}\nconst Modal = OriginModal;\nModal.useModal = useModal;\nModal.info = function infoFn(props) {\n  return confirm(withInfo(props));\n};\nModal.success = function successFn(props) {\n  return confirm(withSuccess(props));\n};\nModal.error = function errorFn(props) {\n  return confirm(withError(props));\n};\nModal.warning = modalWarn;\nModal.warn = modalWarn;\nModal.confirm = function confirmFn(props) {\n  return confirm(withConfirm(props));\n};\nModal.destroyAll = function destroyAllFn() {\n  while (destroyFns.length) {\n    const close = destroyFns.pop();\n    if (close) {\n      close();\n    }\n  }\n};\nModal.config = modalGlobalConfig;\nModal._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  Modal.displayName = 'Modal';\n}\nexport default Modal;","import { forwardRef, useImperativeHandle, type ReactNode } from \"react\";\r\nimport { useBoolean } from \"ahooks\";\r\nimport { Modal, Form, Space, Button } from \"antd\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\n\r\nimport type { ModalProps, FormProps, FormInstance } from \"antd\";\r\n\r\nexport type Ref = {\r\n  /** 打开 Modal */\r\n  open: () => void;\r\n  /** 关闭 Modal */\r\n  close: () => void;\r\n  /** 重置表单 */\r\n  reset: () => void;\r\n  /** 提交表单 */\r\n  submit: () => void;\r\n  /** FormInstance */\r\n  formInstance: FormInstance<any>;\r\n};\r\n\r\nexport type Props = {\r\n  /** 表单内容 */\r\n  children?: ReactNode;\r\n  /** Drawer title */\r\n  title?: ModalProps[\"title\"];\r\n  /** Drawer width */\r\n  width?: ModalProps[\"width\"];\r\n  /** 确认按钮文字 默认：确定 */\r\n  submitText?: ReactNode;\r\n  /** 取消按钮文字 默认：取消 */\r\n  cancelText?: ReactNode;\r\n  /** 提交表单后触发的事件 */\r\n  onFinish?: ((values: any) => void | Promise<any>) | undefined;\r\n  /** Drawer 底部内容，当不需要默认底部按钮时，可以设为 footer={null} 默认：确定取消按钮 */\r\n  footer?: ModalProps[\"footer\"];\r\n  /** 表单默认值 */\r\n  initialValues?: FormProps[\"initialValues\"];\r\n  // Modal 完全关闭后的回调\r\n  afterClose?: ModalProps[\"afterClose\"];\r\n  /** Modal 其他属性 优先级较高，可能会覆盖title，width等属性 */\r\n  modalProps?: ModalProps;\r\n  /** Form 其他属性 优先级较高，可能会覆盖onFinish，initialValues等属性 */\r\n  formProps?: FormProps;\r\n};\r\n\r\n/**\r\n * Modal 和 Form 的组合，方便在 Modal 中快速创建表单\r\n */\r\nconst ModalForm = forwardRef<Ref, Props>(function (props, ref) {\r\n  const {\r\n    title,\r\n    width,\r\n    submitText = \"确定\",\r\n    cancelText = \"取消\",\r\n    children,\r\n    modalProps,\r\n    formProps,\r\n    onFinish,\r\n    footer,\r\n    initialValues,\r\n    afterClose,\r\n  } = props;\r\n\r\n  const [form] = Form.useForm();\r\n  const [open, { set: setOpen }] = useBoolean(false);\r\n\r\n  const [loading, setLoading] = useLoadingDelayAndKeep(false);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    open: () => setOpen(true),\r\n    close: () => setOpen(false),\r\n    reset: form.resetFields,\r\n    submit: form.submit,\r\n    formInstance: form,\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      open={open}\r\n      onCancel={() => setOpen(false)}\r\n      width={width}\r\n      footer={\r\n        footer ? (\r\n          footer\r\n        ) : (\r\n          <Space>\r\n            <Button onClick={() => setOpen(false)}>{cancelText}</Button>\r\n            <Button\r\n              type=\"primary\"\r\n              loading={loading}\r\n              onClick={() => form.submit()}\r\n            >\r\n              {submitText}\r\n            </Button>\r\n          </Space>\r\n        )\r\n      }\r\n      centered={true}\r\n      wrapClassName=\"custom-modal-style\"\r\n      maskClosable={false}\r\n      style={{ marginTop: \"-20vh\" }}\r\n      afterClose={afterClose}\r\n      {...modalProps}\r\n    >\r\n      <Form\r\n        form={form}\r\n        autoComplete=\"off\"\r\n        onFinish={(values) => {\r\n          const fnResult = onFinish?.(values);\r\n          if (fnResult instanceof Promise) {\r\n            setLoading.setTrue();\r\n            fnResult.then(() => setOpen(false));\r\n            fnResult.finally(() => setLoading.setFalse());\r\n          }\r\n        }}\r\n        layout=\"vertical\"\r\n        initialValues={initialValues}\r\n        {...formProps}\r\n      >\r\n        {children}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default ModalForm;\r\n","import { useRef, useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { Form, Input, App } from \"antd\";\r\nimport axios from \"@/utils/axios\";\r\nimport ModalForm, { type Ref as ModalFormRef } from \"@/components/ModalForm\";\r\nimport { Role } from \"@/api/role\";\r\n\r\nexport type Props = {\r\n  callback: (pageIndex?: number) => void;\r\n};\r\nexport type Ref = {\r\n  addStart: () => void;\r\n  editStart: (row: Role) => void;\r\n};\r\n\r\nconst AddOrEdit = forwardRef<Ref, Props>((props, ref) => {\r\n  const { message } = App.useApp();\r\n\r\n  const modalFormRef = useRef<ModalFormRef>(null);\r\n\r\n  const [id, setId] = useState(\"\");\r\n\r\n  const onSubmit = function (data: Pick<Role, \"roleName\" | \"description\">) {\r\n    const apiUrl = id ? \"/api/role/update\" : \"/api/role/add\";\r\n    const successMsg = id ? \"更新成功！\" : \"新增成功！\";\r\n    const params = id ? { id, ...data } : data;\r\n    const callback = () => props.callback?.(id ? undefined : 1);\r\n    return axios.post(apiUrl, params).then(() => {\r\n      message.success(successMsg);\r\n      callback();\r\n    });\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    addStart: () => modalFormRef.current?.open(),\r\n    editStart: (row) => {\r\n      setId(row.id);\r\n      modalFormRef.current?.formInstance.setFieldsValue(row);\r\n      modalFormRef.current?.open();\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <ModalForm\r\n      ref={modalFormRef}\r\n      title={id ? \"编辑\" : \"新增\"}\r\n      width={600}\r\n      afterClose={() => {\r\n        setId(\"\");\r\n        modalFormRef.current?.formInstance.resetFields();\r\n      }}\r\n      onFinish={onSubmit}\r\n    >\r\n      <Form.Item\r\n        name=\"roleName\"\r\n        label=\"角色名称\"\r\n        rules={[{ required: true, message: \"请填写角色名称\" }]}\r\n      >\r\n        <Input placeholder=\"请输入\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"description\" label=\"备注\">\r\n        <Input.TextArea placeholder=\"请输入\" />\r\n      </Form.Item>\r\n    </ModalForm>\r\n  );\r\n});\r\n\r\nexport default AddOrEdit;\r\n","/* eslint-disable import/prefer-default-export */\r\nimport axios from \"@/utils/axios\";\r\nimport { roleEnabledState } from \"@/utils/dict\";\r\n\r\nimport type { AxiosResultPromise } from \"@/utils/axios\";\r\n\r\nexport type Role = {\r\n  id: string;\r\n  roleName: string;\r\n  description: string;\r\n  status: (typeof roleEnabledState.options)[number][\"value\"];\r\n};\r\n\r\n/** 分页获取角色列表*/\r\nexport const getRoleList: (\r\n  params: any,\r\n  pageIndex: number,\r\n  pageSize: number\r\n) => AxiosResultPromise<{\r\n  records: Role[];\r\n  total: number;\r\n  pageIndex: number;\r\n}> = (params, pageIndex = 1, pageSize = 10) => {\r\n  return axios.post(\"/api/role/page\", { params, pageIndex, pageSize });\r\n};\r\n\r\n// 通过id更新角色状态\r\nexport const updateRoleStatusById: (\r\n  id: Role[\"id\"],\r\n  status: Role[\"status\"]\r\n) => AxiosResultPromise<any> = (id, status) => {\r\n  return axios.post(\"/api/role/status/update\", { id, status });\r\n};\r\n","import { useRef } from \"react\";\r\nimport { Button, Space, App } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport ProTable from \"@/components/ProTable\";\r\nimport OptimisticSwitch from \"@/components/OptimisticSwitch\";\r\nimport AddOrEdit from \"./AddOrEdit\";\r\nimport { roleEnabledState } from \"@/utils/dict\";\r\nimport { getRoleList, updateRoleStatusById } from \"@/api/role\";\r\n\r\nimport type { ProTableProps, Ref } from \"@/components/ProTable\";\r\nimport type { Role } from \"@/api/role\";\r\nimport type { Ref as AddOrEditRef } from \"./AddOrEdit\";\r\n\r\nexport default function Page() {\r\n  const { message } = App.useApp();\r\n\r\n  const tableRef = useRef<Ref>(null);\r\n  const addOrEditRef = useRef<AddOrEditRef>(null);\r\n\r\n  const columns: ProTableProps[\"columns\"] = [\r\n    {\r\n      title: \"角色名称\",\r\n      dataIndex: \"roleName\",\r\n    },\r\n    {\r\n      title: \"备注\",\r\n      dataIndex: \"description\",\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (status, row) => {\r\n        const { enabled, disabled } = roleEnabledState.enum;\r\n        return (\r\n          <OptimisticSwitch\r\n            defaultChecked={status === enabled}\r\n            onChange={(val) =>\r\n              updateRoleStatusById(\r\n                row.id,\r\n                val ? (enabled as Role[\"status\"]) : (disabled as Role[\"status\"])\r\n              ).then(() => {\r\n                // 如果觉得需要，也可以在此刷新表格\r\n                message.success(\"切换成功！\");\r\n              })\r\n            }\r\n          />\r\n        );\r\n      },\r\n      type: \"select\",\r\n      options: roleEnabledState.options,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (row) => (\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            ghost\r\n            size=\"small\"\r\n            onClick={() => addOrEditRef.current?.editStart(row)}\r\n          >\r\n            编辑\r\n          </Button>\r\n          <Button type=\"primary\" size=\"small\">\r\n            授权\r\n          </Button>\r\n          <Button type=\"primary\" danger size=\"small\">\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n      width: 100,\r\n      fixed: \"right\",\r\n      hideInSearch: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ProTable\r\n        ref={tableRef}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n        headerTitle=\"角色列表\"\r\n        request={(params, { current, pageSize }) =>\r\n          getRoleList(params, current, pageSize).then((value) => {\r\n            const { result: data } = value;\r\n            return {\r\n              list: data.records,\r\n              total: data.total,\r\n            };\r\n          })\r\n        }\r\n        toolBarRender={() => [\r\n          <Button\r\n            key=\"add\"\r\n            type=\"primary\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => addOrEditRef.current?.addStart()}\r\n          >\r\n            新增\r\n          </Button>,\r\n        ]}\r\n      />\r\n\r\n      <AddOrEdit\r\n        ref={addOrEditRef}\r\n        callback={(pageIndex) => tableRef.current?.refresh(pageIndex)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${unit(lineWidth)} solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${unit(lineWidth)} solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        // Fix https://github.com/ant-design/ant-design/issues/10914\n        margin: `${unit(token.dividerHorizontalGutterMargin)} 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${unit(token.dividerHorizontalWithTextGutterMargin)} 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${unit(lineWidth)} solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: `calc(${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(${orientationMargin} * 100%)`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${unit(lineWidth)} 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, prepareComponentToken, {\n  unitless: {\n    orientationMargin: true\n  }\n});","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst Divider = props => {\n  const {\n    getPrefixCls,\n    direction,\n    divider\n  } = React.useContext(ConfigContext);\n  const {\n      prefixCls: customizePrefixCls,\n      type = 'horizontal',\n      orientation = 'center',\n      orientationMargin,\n      className,\n      rootClassName,\n      children,\n      dashed,\n      plain,\n      style\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"rootClassName\", \"children\", \"dashed\", \"plain\", \"style\"]);\n  const prefixCls = getPrefixCls('divider', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n  const hasChildren = !!children;\n  const hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  const hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  const classString = classNames(prefixCls, divider === null || divider === void 0 ? void 0 : divider.className, hashId, cssVarCls, `${prefixCls}-${type}`, {\n    [`${prefixCls}-with-text`]: hasChildren,\n    [`${prefixCls}-with-text${orientationPrefix}`]: hasChildren,\n    [`${prefixCls}-dashed`]: !!dashed,\n    [`${prefixCls}-plain`]: !!plain,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-no-default-orientation-margin-left`]: hasCustomMarginLeft,\n    [`${prefixCls}-no-default-orientation-margin-right`]: hasCustomMarginRight\n  }, className, rootClassName);\n  const memoizedOrientationMargin = React.useMemo(() => {\n    if (typeof orientationMargin === 'number') {\n      return orientationMargin;\n    }\n    if (/^\\d+$/.test(orientationMargin)) {\n      return Number(orientationMargin);\n    }\n    return orientationMargin;\n  }, [orientationMargin]);\n  const innerStyle = Object.assign(Object.assign({}, hasCustomMarginLeft && {\n    marginLeft: memoizedOrientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: memoizedOrientationMargin\n  });\n  // Warning children not work in vertical mode\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Divider');\n    process.env.NODE_ENV !== \"production\" ? warning(!children || type !== 'vertical', 'usage', '`children` not working in `vertical` mode.') : void 0;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: Object.assign(Object.assign({}, divider === null || divider === void 0 ? void 0 : divider.style), style)\n  }, restProps, {\n    role: \"separator\"\n  }), children && type !== 'vertical' && ( /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-inner-text`,\n    style: innerStyle\n  }, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Divider.displayName = 'Divider';\n}\nexport default Divider;"],"names":["Input","item","_jsx","Form","label","title","name","dataIndex","formItemProps","children","AInput","placeholder","fieldProps","Select","ASelect","style","width","allowClear","options","map","value","color","Badge","text","Checkbox","ACheckbox","Radio","ARadio","Date","DatePicker","RangePicker","TreeSelect","ATreeSelect","treeData","FormItem","type","renderFormItem","rest","DateRange","toolsWidth","DropdownBox","styled","Tools","forwardRef","props","ref","form","visible","setTrue","setFalse","useBoolean","className","reset","resetFields","submit","useImperativeHandle","Card","styles","body","paddingTop","paddingBottom","_jsxs","layout","height","paddingRight","autoComplete","Space","Button","htmlType","onClick","padding","CaretUpOutlined","marginInlineStart","CaretDownOutlined","onChange","plainOptions","indeterminate","setIndeterminate","useState","checkAll","setCheckAll","onCheckChange","list","length","Popover","arrow","content","minWidth","display","justifyContent","e","target","checked","lineHeight","Divider","margin","keys","placement","trigger","initialTableSize","getRowkey","row","key","loading","columns","dataSource","pagination","propPagination","onRefresh","search","showSearch","batchBarRender","toolBarRender","headerTitle","tableRowSelection","formItems","useMemo","filter","hideInSearch","initialValues","Object","fromEntries","initialValue","params","setParams","searchFrom","useRef","tableColumns","hideInTable","requestData","usePagination","current","pageSize","Array","isArray","request","refreshDeps","defaultCurrent","defaultPageSize","loadingDelay","tableConfig","isDataSource","data","refresh","paginationConfig","showSizeChanger","showQuickJumper","showTotal","total","range","join","marginBottom","pageIndex","changeCurrent","configkeys","setConfigkeys","tableLoading","useLoadingDelayAndKeep","useEffect","tableSize","setTableSize","selectedRowKeys","setSelectedRowKeys","token","borderRadius","controlItemBgActive","colorText","theme","onSubmit","onReset","clearSelected","_Fragment","DropdownFrom","onFinish","values","marginTop","Tooltip","ReloadOutlined","Dropdown","overlayStyle","menu","items","selectable","defaultSelectedKeys","ColumnHeightOutlined","ColumnSetting","SettingOutlined","backgroundColor","Table","rowKey","includes","rowSelection","preserveSelectedRowKeys","undefined","size","bordered","scroll","x","OptimisticSwitch","defaultChecked","set","Switch","val","catch","finally","prefixCls","customizePrefixCls","closeIcon","closable","footer","restProps","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","getPrefixCls","rootPrefixCls","rootCls","useCSSVarCls","wrapCSSVar","hashId","cssVarCls","confirmPrefixCls","additionalProps","assign","modalWarn","useModal","info","success","error","warning","warn","confirm","destroyAll","destroyFns","close","config","_InternalPanelDoNotUseOrYouWillBeFired","submitText","cancelText","modalProps","formProps","afterClose","open","setOpen","setLoading","formInstance","Modal","onCancel","centered","wrapClassName","maskClosable","fnResult","Promise","then","message","App","modalFormRef","id","setId","addStart","editStart","setFieldsValue","ModalForm","apiUrl","successMsg","axios","callback","rules","required","getRoleList","updateRoleStatusById","status","Page","tableRef","addOrEditRef","render","enabled","disabled","roleEnabledState","ghost","danger","fixed","ProTable","result","records","icon","PlusOutlined","AddOrEdit","genSharedDividerStyle","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","textPaddingInline","orientationMargin","verticalMarginInline","borderBlockStart","position","top","marginInline","marginBlock","verticalAlign","borderTop","borderInlineStart","clear","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","paddingBlock","paddingInline","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","paddingInlineStart","paddingInlineEnd","dividerToken","marginLG","marginXS","unitless","direction","divider","orientation","rootClassName","dashed","plain","orientationPrefix","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","memoizedOrientationMargin","test","Number","innerStyle","marginLeft","marginRight","role"],"sourceRoot":""}