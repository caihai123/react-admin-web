{"version":3,"file":"static/js/674.0af07df5.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/api/system/menu.ts","webpack://react-admin-web/./src/api/system/role.ts","webpack://react-admin-web/./src/components/ModalForm.tsx","webpack://react-admin-web/./src/components/OptimisticSwitch.tsx","webpack://react-admin-web/./src/components/utils/createCompoundedComponent.ts","webpack://react-admin-web/./src/pages/system/role/AddOrEdit.tsx","webpack://react-admin-web/./src/pages/system/role/Accredit.tsx","webpack://react-admin-web/./src/pages/system/role/index.tsx"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport axios from \"@/utils/axios\";\r\nimport { menuType } from \"@/utils/dict\";\r\n\r\nimport type { AxiosResultPromise } from \"@/utils/axios\";\r\n\r\nexport type Menu = {\r\n  id: string;\r\n  title: string;\r\n  path: string;\r\n  type: (typeof menuType.options)[number][\"value\"];\r\n  icon: string;\r\n  children?: Menu[];\r\n  buttonList?: { id: string; name: string }[];\r\n};\r\n\r\n/**\r\n * 获取所有菜单\r\n */\r\nexport const getMenuAll: () => AxiosResultPromise<Array<Menu>> = () =>\r\n  axios.get(\"/api/menu/all\");\r\n\r\n/**\r\n * 删除菜单\r\n * @param id - id\r\n */\r\nexport const removeMenu: (id: string) => AxiosResultPromise<any> = (id) =>\r\n  axios.post(\"/api/menu/remove\", { id });\r\n","/* eslint-disable import/prefer-default-export */\r\nimport axios from \"@/utils/axios\";\r\nimport { roleEnabledState } from \"@/utils/dict\";\r\n\r\nimport type { AxiosResultPromise } from \"@/utils/axios\";\r\n\r\nexport type Role = {\r\n  id: string;\r\n  roleName: string;\r\n  description: string;\r\n  status: (typeof roleEnabledState.options)[number][\"value\"];\r\n  createTime: string;\r\n};\r\n\r\n/**\r\n * 分页获取角色列表\r\n * @param params - 查询参数\r\n * @param pageIndex - 页码 默认： 1\r\n * @param pageSize - 页大小 默认：10\r\n */\r\nexport const getRoleList: (\r\n  params: any,\r\n  pageIndex: number,\r\n  pageSize: number\r\n) => AxiosResultPromise<{\r\n  records: Role[];\r\n  total: number;\r\n  pageIndex: number;\r\n}> = (params, pageIndex = 1, pageSize = 10) => {\r\n  return axios.post(\"/api/role/page\", { params, pageIndex, pageSize });\r\n};\r\n\r\n/**\r\n * 通过id更新角色状态\r\n * @param id - id\r\n * @param status - 角色状态\r\n */\r\nexport const updateRoleStatusById: (\r\n  id: Role[\"id\"],\r\n  status: Role[\"status\"]\r\n) => AxiosResultPromise<any> = (id, status) => {\r\n  return axios.post(\"/api/role/status/update\", { id, status });\r\n};\r\n\r\n/**\r\n * 通过id删除角色\r\n * @param id - id\r\n */\r\nexport const removeRole: (id: string) => AxiosResultPromise<any> = (id) =>\r\n  axios.post(\"/api/role/remove\", { id });\r\n\r\n/**\r\n * 角色授权\r\n * @param params\r\n */\r\nexport const authRole: (params: any[]) => AxiosResultPromise<any> = (params) =>\r\n  axios.post(\"/api/role/auth\", params);\r\n\r\n/**\r\n * 获取角色选择器\r\n */\r\nexport const getRoleSelect: () => AxiosResultPromise<\r\n  { value: string; label: string }[]\r\n> = () => axios.get(\"/api/role/select\");\r\n","import { forwardRef, useImperativeHandle, useRef } from \"react\";\r\nimport { useBoolean } from \"ahooks\";\r\nimport { Modal, Form, Space, Button } from \"antd\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\nimport createCompoundedComponent from \"./utils/createCompoundedComponent\";\r\n\r\nimport type { ReactNode, RefObject, ReactElement } from \"react\";\r\nimport type { ModalProps, FormProps } from \"antd\";\r\n\r\nexport type Ref = {\r\n  /** 打开 Modal */\r\n  open: () => void;\r\n  /** 关闭 Modal */\r\n  close: () => void;\r\n};\r\n\r\nexport type Props = {\r\n  /** 表单内容 */\r\n  children?: ReactNode;\r\n  /** Drawer title */\r\n  title?: ModalProps[\"title\"];\r\n  /** Drawer width */\r\n  width?: ModalProps[\"width\"];\r\n  /** 确认按钮文字 默认：确定 */\r\n  submitText?: ReactNode;\r\n  /** 取消按钮文字 默认：取消 */\r\n  cancelText?: ReactNode;\r\n  /** 提交表单后触发的事件 */\r\n  onFinish?: ((values: any) => void | Promise<any>) | undefined;\r\n  /** Drawer 底部内容，当不需要默认底部按钮时，可以设为 footer={null} 默认：确定取消按钮 */\r\n  footer?: ModalProps[\"footer\"];\r\n  /** 表单默认值 */\r\n  initialValues?: FormProps[\"initialValues\"];\r\n  form: FormProps[\"form\"];\r\n  // Modal 完全关闭后的回调\r\n  afterClose?: ModalProps[\"afterClose\"];\r\n  /** Modal 其他属性 优先级较高，可能会覆盖title，width等属性 */\r\n  modalProps?: ModalProps;\r\n  /** Form 其他属性 优先级较高，可能会覆盖onFinish，initialValues等属性 */\r\n  formProps?: FormProps;\r\n};\r\n\r\n/**\r\n * Modal 和 Form 的组合，方便在 Modal 中快速创建表单\r\n */\r\nconst ModalForm = forwardRef<Ref, Props>(function (props, ref) {\r\n  const {\r\n    title,\r\n    width,\r\n    submitText = \"确定\",\r\n    cancelText = \"取消\",\r\n    children,\r\n    modalProps,\r\n    formProps,\r\n    onFinish,\r\n    footer,\r\n    initialValues,\r\n    afterClose,\r\n  } = props;\r\n\r\n  const [open, { set: setOpen }] = useBoolean(false);\r\n\r\n  const [loading, setLoading] = useLoadingDelayAndKeep(false);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    open: () => setOpen(true),\r\n    close: () => setOpen(false),\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      open={open}\r\n      onCancel={() => setOpen(false)}\r\n      width={width}\r\n      footer={\r\n        footer ? (\r\n          footer\r\n        ) : (\r\n          <Space>\r\n            <Button onClick={() => setOpen(false)}>{cancelText}</Button>\r\n            <Button\r\n              type=\"primary\"\r\n              loading={loading}\r\n              onClick={() => props.form?.submit()}\r\n            >\r\n              {submitText}\r\n            </Button>\r\n          </Space>\r\n        )\r\n      }\r\n      centered={true}\r\n      wrapClassName=\"custom-modal-style\"\r\n      maskClosable={false}\r\n      // style={{ marginTop: \"-20vh\" }}\r\n      afterClose={afterClose}\r\n      {...modalProps}\r\n    >\r\n      <Form\r\n        form={props.form}\r\n        autoComplete=\"off\"\r\n        onFinish={(values) => {\r\n          const fnResult = onFinish?.(values);\r\n          if (fnResult instanceof Promise) {\r\n            setLoading.setTrue();\r\n            fnResult\r\n              .then(() => setOpen(false))\r\n              .finally(() => setLoading.setFalse());\r\n          }\r\n        }}\r\n        layout=\"vertical\"\r\n        initialValues={initialValues}\r\n        {...formProps}\r\n      >\r\n        {children}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n});\r\n\r\n// 帮你创建 ref 和 form，可以稍微减少使用时的代码量\r\nconst useModal: (\r\n  props: Omit<Props, \"form\">\r\n) => [RefObject<Ref>, FormProps[\"form\"], ReactElement] = function (props) {\r\n  const ref = useRef<Ref>(null);\r\n  const [form] = Form.useForm();\r\n\r\n  return [ref, form, <ModalForm ref={ref} form={form} {...props} />];\r\n};\r\n\r\nexport default createCompoundedComponent(ModalForm, {\r\n  useModal,\r\n});\r\n","import { useBoolean } from \"ahooks\";\r\nimport { Switch } from \"antd\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\n\r\n// 切换失败时自动撤销的 Optimistic Updates 开关\r\n// 注意：暂时还没完全想清楚此组件要不要作为公共基础组件存在\r\n\r\ntype Props = {\r\n  defaultChecked: boolean;\r\n  onChange: (val: boolean) => Promise<any> | null | undefined;\r\n};\r\n\r\nexport default function OptimisticSwitch({\r\n  defaultChecked = false,\r\n  onChange = () => null,\r\n}: Props) {\r\n  const [checked, { set }] = useBoolean(defaultChecked);\r\n  const [loading, { setTrue, setFalse }] = useLoadingDelayAndKeep(false);\r\n\r\n  return (\r\n    <Switch\r\n      checked={checked}\r\n      loading={loading}\r\n      onChange={(val) => {\r\n        set(val);\r\n        setTrue();\r\n        onChange(val)\r\n          ?.catch(() => {\r\n            set(!val);\r\n          })\r\n          .finally(() => setFalse());\r\n      }}\r\n    ></Switch>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// 定义子组件的类型\r\ninterface SubComponents {\r\n  [key: string]: any;\r\n}\r\n\r\n// 主组件和子组件的组合类型\r\ntype CompoundedComponent<F, T> = F & T;\r\n\r\n/**\r\n * 创建组合组件\r\n */\r\nexport default function createCompoundedComponent<\r\n  F extends React.FC<any>,\r\n  T extends SubComponents\r\n>(mainComponent: F, subComponents: T): CompoundedComponent<F, T> {\r\n  // 将主组件转换为复合组件类型\r\n  const Component = mainComponent as CompoundedComponent<F, T>;\r\n\r\n  // 使用 Object.defineProperty 添加子组件到主组件上\r\n  Object.keys(subComponents).forEach((key) => {\r\n    Object.defineProperty(Component, key, {\r\n      value: subComponents[key],\r\n      writable: false, // 确保子组件不可变\r\n      enumerable: true,\r\n    });\r\n  });\r\n\r\n  return Component;\r\n}\r\n","import React from \"react\";\r\nimport { Form, Input, App } from \"antd\";\r\nimport axios from \"@/utils/axios\";\r\nimport ModalForm from \"@/components/ModalForm\";\r\nimport { Role } from \"@/api/system/role\";\r\nimport createCompoundedComponent from \"@/components/utils/createCompoundedComponent\";\r\n\r\nexport type Props = {\r\n  callback: (pageIndex?: number) => void;\r\n};\r\nexport type Ref = {\r\n  addStart: () => void;\r\n  editStart: (row: Role) => void;\r\n};\r\n\r\nconst AddOrEdit = React.forwardRef<Ref, Props>((props, ref) => {\r\n  const { message } = App.useApp();\r\n\r\n  const [id, setId] = React.useState(\"\");\r\n\r\n  const onSubmit = function (data: Pick<Role, \"roleName\" | \"description\">) {\r\n    const apiUrl = id ? \"/api/role/update\" : \"/api/role/add\";\r\n    const successMsg = id ? \"更新成功！\" : \"新增成功！\";\r\n    const params = id ? { id, ...data } : data;\r\n    const callback = () => props.callback(id ? undefined : 1);\r\n    return axios.post(apiUrl, params).then(() => {\r\n      message.success(successMsg);\r\n      callback();\r\n    });\r\n  };\r\n\r\n  const [modalFormRef, formInstance, contextHolder] = ModalForm.useModal({\r\n    title: id ? \"编辑\" : \"新增\",\r\n    width: 600,\r\n    afterClose: () => {\r\n      setId(\"\");\r\n      formInstance?.resetFields();\r\n    },\r\n    onFinish: onSubmit,\r\n    children: (\r\n      <>\r\n        <Form.Item\r\n          name=\"roleName\"\r\n          label=\"角色名称\"\r\n          rules={[{ required: true, message: \"请填写角色名称\" }]}\r\n        >\r\n          <Input placeholder=\"请输入\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"description\" label=\"备注\">\r\n          <Input.TextArea placeholder=\"请输入\" />\r\n        </Form.Item>\r\n      </>\r\n    ),\r\n  });\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    addStart: () => modalFormRef.current?.open(),\r\n    editStart: (row) => {\r\n      setId(row.id);\r\n      formInstance?.setFieldsValue(row);\r\n      modalFormRef.current?.open();\r\n    },\r\n  }));\r\n\r\n  return contextHolder;\r\n});\r\n\r\n// 可以稍微减少使用时的代码量\r\nconst useModal: (props: Props) => [React.RefObject<Ref>, React.ReactElement] =\r\n  function (props) {\r\n    const ref = React.useRef<Ref>(null);\r\n\r\n    return [ref, <AddOrEdit ref={ref} {...props} />];\r\n  };\r\n\r\nexport default createCompoundedComponent(AddOrEdit, { useModal });\r\n","import React from \"react\";\r\nimport { Modal, Table, Tag, Checkbox, App } from \"antd\";\r\nimport { useBoolean, useRequest } from \"ahooks\";\r\nimport { getMenuAll } from \"@/api/system/menu\";\r\nimport { authRole } from \"@/api/system/role\";\r\nimport { menuType } from \"@/utils/dict\";\r\nimport createCompoundedComponent from \"@/components/utils/createCompoundedComponent\";\r\nimport { deepCopy } from \"@/utils/utils\";\r\nimport { treeMap } from \"@/utils/tree\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\nimport Mock from \"mockjs\";\r\n\r\ntype AuthMenu = {\r\n  id: string;\r\n  parentId: string;\r\n  title: string;\r\n  path: string;\r\n  type: (typeof menuType.options)[number][\"value\"];\r\n  icon: string;\r\n  children?: AuthMenu[];\r\n  isAuth: boolean;\r\n  buttonList?: { id: string; name: string; isAuth: boolean }[];\r\n};\r\n\r\nexport type Ref = {\r\n  start: (roleId: string) => void;\r\n};\r\n\r\nexport type Props = {\r\n  callback: () => void;\r\n};\r\n\r\n// 将tree菜单转成一维数组，此函数主要是给 selectParentMenu 使用\r\nconst flattenDeepMenu = (array: AuthMenu[] = []) => {\r\n  const list: AuthMenu[] = [];\r\n\r\n  const deep = function (obj: AuthMenu, parentId: string) {\r\n    // 不要创建新对象，因为 selectParentMenu 中会改变源数据，简洁达到修改tableData的效果\r\n    list.push(obj);\r\n    (obj.children || []).forEach((item) => deep(item, obj.id));\r\n  };\r\n  array.forEach((item) => deep(item, \"\"));\r\n\r\n  return list;\r\n};\r\n\r\n/**\r\n * 角色授权弹窗\r\n */\r\nconst Accredit = React.forwardRef<Ref, Props>((props, ref) => {\r\n  const [open, { set: setOpen }] = useBoolean(false);\r\n  const { message } = App.useApp();\r\n\r\n  // 获取当前角色的菜单菜单授权情况，这里只是使用 getMenuAll 进行模拟，实际情况不可能使用这个接口\r\n  const {\r\n    data: tableData,\r\n    loading,\r\n    mutate: mutateTableData,\r\n    run: getTableData,\r\n  } = useRequest(\r\n    async (roleId: string) => {\r\n      // 真实情况下获取菜单时必须要传入 roleId\r\n      const response = await getMenuAll();\r\n      const data = treeMap(response.result, ({ children, ...item }) => ({\r\n        ...item,\r\n        isAuth: Mock.mock({ \"boolean|1-2\": false }).boolean, // mock 后后端返回的授权状态\r\n      }));\r\n      return data as AuthMenu[];\r\n    },\r\n    { manual: true }\r\n  );\r\n\r\n  const [checkAll, setCheckAll] = React.useState<boolean>(false); // 控制表头是否全选\r\n  const [indeterminate, setIndeterminate] = React.useState<boolean>(false); // 是否有选中，控制控制表头半选状态\r\n\r\n  React.useEffect(() => {\r\n    // tableData改变时计算全选checkbox的状态\r\n    const isAuthAllList: boolean[] = [];\r\n\r\n    const deep = function (arr: AuthMenu[] = []) {\r\n      arr.forEach((item) => {\r\n        isAuthAllList.push(item.isAuth);\r\n        item.buttonList?.forEach((but) => {\r\n          isAuthAllList.push(but.isAuth);\r\n        });\r\n        deep(item.children);\r\n      });\r\n    };\r\n    deep(tableData);\r\n\r\n    if (isAuthAllList.every((item) => item === true)) {\r\n      setCheckAll(true);\r\n      setIndeterminate(false);\r\n    } else if (isAuthAllList.every((item) => item !== true)) {\r\n      setCheckAll(false);\r\n      setIndeterminate(false);\r\n    } else {\r\n      setCheckAll(false);\r\n      setIndeterminate(true);\r\n    }\r\n  }, [tableData]);\r\n\r\n  // 全选checkbox改变时触发\r\n  const checkAllChange = React.useCallback(\r\n    function (val: boolean) {\r\n      const deep = function (arr: AuthMenu[] = []) {\r\n        arr.forEach((item) => {\r\n          item.isAuth = val;\r\n          item.buttonList?.forEach((but) => {\r\n            but.isAuth = val;\r\n          });\r\n          deep(item.children);\r\n        });\r\n      };\r\n      deep(tableData);\r\n      mutateTableData(deepCopy(tableData));\r\n    },\r\n    [tableData, mutateTableData]\r\n  );\r\n\r\n  // 勾选菜单或目录时自动勾选所有父级菜单\r\n  const selectParentMenu = React.useCallback(\r\n    function (childId: string) {\r\n      const menuList = flattenDeepMenu(tableData);\r\n      let currentItem = menuList.find((item) => item.id === childId);\r\n      while (currentItem?.parentId) {\r\n        currentItem = menuList.find(\r\n          // eslint-disable-next-line no-loop-func\r\n          (item) => item.id === currentItem?.parentId\r\n        );\r\n\r\n        if (currentItem) currentItem.isAuth = true;\r\n      }\r\n      mutateTableData(deepCopy(tableData));\r\n    },\r\n    [tableData, mutateTableData]\r\n  );\r\n\r\n  // 菜单或目录上的checkbox改变时触发\r\n  const chechMenuChange = React.useCallback(\r\n    function (val: boolean, row: AuthMenu) {\r\n      const deep = function (item: AuthMenu) {\r\n        item.isAuth = val;\r\n        item.buttonList?.forEach((but) => {\r\n          but.isAuth = val;\r\n        });\r\n        item.children?.forEach((menu) => {\r\n          deep(menu);\r\n        });\r\n      };\r\n\r\n      if (val) selectParentMenu(row.id);\r\n\r\n      deep(row);\r\n\r\n      mutateTableData(deepCopy(tableData));\r\n    },\r\n    [selectParentMenu, mutateTableData, tableData]\r\n  );\r\n\r\n  // 处理功能标签check改变时\r\n  const handleFunCheckChange = React.useCallback(\r\n    function (row: AuthMenu) {\r\n      if ((row.buttonList || []).some((item) => item.isAuth === true)) {\r\n        row.isAuth = true;\r\n        selectParentMenu(row.id);\r\n      }\r\n      mutateTableData(deepCopy(tableData));\r\n    },\r\n    [selectParentMenu, mutateTableData, tableData]\r\n  );\r\n\r\n  const [submitLoading, setSubmitLoading] = useLoadingDelayAndKeep(false);\r\n  const onSubmit = React.useCallback(\r\n    function () {\r\n      setSubmitLoading.setTrue();\r\n      const result = treeMap(tableData, (item) => ({\r\n        id: item.id,\r\n        isAuth: item.isAuth,\r\n      }));\r\n\r\n      return authRole(result)\r\n        .then(() => {\r\n          setOpen(false);\r\n          props.callback();\r\n          message.success(\"更新成功！\");\r\n        })\r\n        .finally(() => setSubmitLoading.setFalse());\r\n    },\r\n    [tableData, message, props, setOpen, setSubmitLoading]\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      title: \"名称\",\r\n      dataIndex: \"title\",\r\n    },\r\n    {\r\n      title: \"类型\",\r\n      dataIndex: \"type\",\r\n      render: (type: AuthMenu[\"type\"]) => {\r\n        const map = menuType.map[type];\r\n        return <Tag color={map.color}>{map.label}</Tag>;\r\n      },\r\n      type: \"select\",\r\n      options: menuType.options,\r\n    },\r\n    {\r\n      title: \"按钮\",\r\n      dataIndex: \"buttonList\",\r\n      render: (buttonList: AuthMenu[\"buttonList\"], row: AuthMenu) => {\r\n        return buttonList?.map((item) => (\r\n          <Checkbox\r\n            key={item.id}\r\n            checked={item.isAuth}\r\n            onChange={(e) => {\r\n              item.isAuth = e.target.checked;\r\n              handleFunCheckChange(row);\r\n            }}\r\n          >\r\n            {item.name}\r\n          </Checkbox>\r\n        ));\r\n      },\r\n    },\r\n    {\r\n      title: (\r\n        <Checkbox\r\n          checked={checkAll}\r\n          indeterminate={indeterminate}\r\n          onChange={(e) => checkAllChange(e.target.checked)}\r\n        />\r\n      ),\r\n      key: \"action\",\r\n      render: (row: AuthMenu) => (\r\n        <Checkbox\r\n          checked={row.isAuth}\r\n          onChange={(e) => chechMenuChange(e.target.checked, row)}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    start: (roleId) => {\r\n      getTableData(roleId);\r\n      setOpen(true);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      title=\"角色授权\"\r\n      width={800}\r\n      open={open}\r\n      centered={true}\r\n      wrapClassName=\"custom-modal-style\"\r\n      maskClosable={false}\r\n      onOk={() => onSubmit()}\r\n      onCancel={() => setOpen(false)}\r\n      confirmLoading={submitLoading}\r\n      okText=\"保存\"\r\n    >\r\n      <Table\r\n        rowKey=\"id\"\r\n        size=\"small\"\r\n        dataSource={tableData}\r\n        columns={columns}\r\n        loading={loading}\r\n        pagination={false}\r\n        bordered\r\n      ></Table>\r\n    </Modal>\r\n  );\r\n});\r\n\r\n// 可以稍微减少使用时的代码量\r\nconst useModal: (props: Props) => [React.RefObject<Ref>, React.ReactElement] =\r\n  function (props) {\r\n    const ref = React.useRef<Ref>(null);\r\n\r\n    return [ref, <Accredit ref={ref} {...props} />];\r\n  };\r\n\r\nexport default createCompoundedComponent(Accredit, { useModal });\r\n","import { useRef } from \"react\";\r\nimport { Button, Space, App } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport ProTable from \"@/components/ProTable\";\r\nimport OptimisticSwitch from \"@/components/OptimisticSwitch\";\r\nimport AddOrEdit from \"./AddOrEdit\";\r\nimport Accredit from \"./Accredit\";\r\nimport { roleEnabledState } from \"@/utils/dict\";\r\nimport {\r\n  getRoleList,\r\n  updateRoleStatusById,\r\n  removeRole,\r\n} from \"@/api/system/role\";\r\nimport PermissionControl, {\r\n  useFilterElementPermission,\r\n} from \"@/components/PermissionControl\";\r\n\r\nimport type { ProTableProps, Ref } from \"@/components/ProTable\";\r\nimport type { Role } from \"@/api/system/role\";\r\n\r\nexport default function Page() {\r\n  const { modal, message } = App.useApp();\r\n\r\n  const tableRef = useRef<Ref>(null);\r\n\r\n  const [addOrEditRef, addOrEditContext] = AddOrEdit.useModal({\r\n    callback: (pageIndex) => tableRef.current?.refresh(pageIndex),\r\n  });\r\n\r\n  const [accreditRef, accreditContext] = Accredit.useModal({\r\n    callback: () => tableRef.current?.refresh(),\r\n  });\r\n\r\n  // 表格的操作栏\r\n  const [actionRender, isShowAction] = useFilterElementPermission(\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          ghost\r\n          size=\"small\"\r\n          onClick={() => addOrEditRef.current?.editStart(row)}\r\n        >\r\n          编辑\r\n        </Button>\r\n      ),\r\n      permission: \"edit\",\r\n    },\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          style={{ background: \"#e6a23c\" }}\r\n          onClick={() => accreditRef.current?.start(row.id)}\r\n        >\r\n          授权\r\n        </Button>\r\n      ),\r\n      permission: \"accredit\",\r\n    },\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          danger\r\n          size=\"small\"\r\n          onClick={() =>\r\n            modal.confirm({\r\n              title: \"提示\",\r\n              content: \"确定要删除此角色吗？\",\r\n              okType: \"danger\",\r\n              onOk: () =>\r\n                removeRole(row.id).then(() => {\r\n                  message.success(\"删除成功！\");\r\n                  tableRef.current?.refresh();\r\n                }),\r\n              centered: true,\r\n            })\r\n          }\r\n        >\r\n          删除\r\n        </Button>\r\n      ),\r\n      permission: \"del\",\r\n    }\r\n  );\r\n\r\n  const columns: ProTableProps[\"columns\"] = [\r\n    {\r\n      title: \"角色名称\",\r\n      dataIndex: \"roleName\",\r\n    },\r\n    {\r\n      title: \"备注\",\r\n      dataIndex: \"description\",\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (status, row) => {\r\n        const { enabled, disabled } = roleEnabledState.enum;\r\n        return (\r\n          <OptimisticSwitch\r\n            defaultChecked={status === enabled}\r\n            onChange={(val) =>\r\n              updateRoleStatusById(\r\n                row.id,\r\n                val ? (enabled as Role[\"status\"]) : (disabled as Role[\"status\"])\r\n              ).then(() => {\r\n                // 如果觉得需要，也可以在此刷新表格\r\n                message.success(\"切换成功！\");\r\n              })\r\n            }\r\n          />\r\n        );\r\n      },\r\n      type: \"select\",\r\n      options: roleEnabledState.options,\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createTime\",\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (row) => <Space>{actionRender(row)}</Space>,\r\n      width: 100,\r\n      fixed: \"right\",\r\n      hideInSearch: true,\r\n      hideInTable: !isShowAction,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ProTable\r\n        ref={tableRef}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n        headerTitle=\"角色列表\"\r\n        request={(params, { current, pageSize }) =>\r\n          getRoleList(params, current, pageSize).then((value) => {\r\n            const { result: data } = value;\r\n            return {\r\n              list: data.records,\r\n              total: data.total,\r\n            };\r\n          })\r\n        }\r\n        toolBarRender={() => (\r\n          <PermissionControl permission=\"add\">\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusOutlined />}\r\n              onClick={() => addOrEditRef.current?.addStart()}\r\n            >\r\n              新增\r\n            </Button>\r\n          </PermissionControl>\r\n        )}\r\n      />\r\n\r\n      {addOrEditContext}\r\n      {accreditContext}\r\n    </>\r\n  );\r\n}\r\n"],"names":["getMenuAll","axios","removeMenu","id","getRoleList","params","pageIndex","pageSize","updateRoleStatusById","status","removeRole","authRole","getRoleSelect","ModalForm","forwardRef","props","ref","title","width","submitText","cancelText","children","modalProps","formProps","onFinish","footer","initialValues","afterClose","open","set","setOpen","useBoolean","loading","setLoading","useLoadingDelayAndKeep","useImperativeHandle","close","_jsx","Modal","onCancel","_jsxs","Space","Button","onClick","type","form","submit","centered","wrapClassName","maskClosable","Form","autoComplete","values","fnResult","Promise","setTrue","then","finally","setFalse","layout","createCompoundedComponent","useModal","useRef","OptimisticSwitch","defaultChecked","onChange","checked","Switch","val","catch","mainComponent","subComponents","Component","Object","keys","forEach","key","defineProperty","value","writable","enumerable","AddOrEdit","React","message","App","setId","modalFormRef","formInstance","contextHolder","resetFields","data","apiUrl","successMsg","success","callback","undefined","_Fragment","name","label","rules","required","Input","placeholder","addStart","current","editStart","row","setFieldsValue","Accredit","tableData","mutate","mutateTableData","run","getTableData","useRequest","async","response","treeMap","result","item","isAuth","Mock","boolean","manual","checkAll","setCheckAll","indeterminate","setIndeterminate","isAuthAllList","deep","arr","push","buttonList","but","every","checkAllChange","deepCopy","selectParentMenu","childId","menuList","flattenDeepMenu","array","list","obj","parentId","currentItem","find","chechMenuChange","menu","handleFunCheckChange","some","submitLoading","setSubmitLoading","onSubmit","columns","dataIndex","render","map","menuType","Tag","color","options","Checkbox","e","target","start","roleId","onOk","confirmLoading","okText","Table","rowKey","size","dataSource","pagination","bordered","Page","modal","tableRef","addOrEditRef","addOrEditContext","refresh","accreditRef","accreditContext","actionRender","isShowAction","useFilterElementPermission","ghost","permission","style","background","danger","confirm","content","okType","hideInSearch","enabled","disabled","roleEnabledState","fixed","hideInTable","ProTable","headerTitle","request","records","total","toolBarRender","PermissionControl","icon","PlusOutlined"],"sourceRoot":""}