{"version":3,"file":"static/js/499.7e938039.chunk.js","mappings":"wKAA6BA,E,4EAc7B,EAPa,CACXC,QAR2BD,EAQR,CACjB,CAAEE,MAAO,IAAKC,MAAO,EAAGC,MAAO,QAC/B,CAAEF,MAAO,IAAKC,MAAO,EAAGC,MAAO,UAT1B,CACLC,KAAMC,OAAOC,YAAYP,EAAKQ,KAAI,EAAGJ,QAAOD,WAAY,CAACC,EAAOD,MAChEM,QAAST,EAAKQ,KAAI,EAAGN,QAAOC,YAAY,CAAGD,QAAOC,e,UCGvC,SAASO,IACtB,MAAMC,GAAQC,EAAAA,EAAAA,KACRC,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,QAEb,CACED,MAAO,KACPC,UAAW,WAEb,CACED,MAAO,KACPC,UAAW,SACXC,OAASf,GACQ,IAAXA,GACKgB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,MAAM,UAASC,SAAC,MACR,IAAXnB,GACFgB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,MAAM,UAASC,SAAC,MAErBnB,EAGXoB,KAAM,SACNZ,QAAST,EAAAA,OAAAA,SAEX,CACEc,MAAO,MACPC,UAAW,SAEb,CACED,MAAO,KACPC,UAAW,SAEb,CACED,MAAO,KACPC,UAAW,SACXC,OAASM,IAAWL,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,QAAoB,IAAXF,IACrCD,KAAM,SACNZ,QAAS,CACP,CAAEP,MAAO,KAAMC,MAAO,GACtB,CAAED,MAAO,KAAMC,MAAO,KAG1B,CACEW,MAAO,KACPW,IAAK,SACLT,OAASU,IACPC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAR,SAAA,EACJH,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CAACR,KAAK,UAAUS,OAAK,EAACC,KAAK,QAAOX,SAAC,QAG1CH,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CAACR,KAAK,UAAUU,KAAK,QAAOX,SAAC,QAGpCH,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CAACR,KAAK,UAAUW,QAAM,EAACD,KAAK,QAAOX,SAAC,UAK/Ca,MAAO,IACPC,MAAO,QACPC,cAAc,IAIlB,OACElB,EAAAA,EAAAA,KAACmB,EAAAA,EAAQ,CACPvB,QAASA,EACTwB,OAAO,KACPC,YAAY,OACZC,QAASA,CAACC,GAAUC,UAASC,cACpB/B,EACJgC,KAAK,oBAAqB,CAAEH,SAAQI,UAAWH,EAASC,aACxDG,MAAM1C,IACL,MAAQ2C,OAAQC,GAAS5C,EACzB,MAAO,CACL6C,KAAMD,EAAKE,QACXC,MAAOH,EAAKG,MACb,IAGPC,eAAgB,EACdlC,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CACLR,KAAK,UAELW,QAAM,EACNoB,QAASA,IAAMC,EAAAA,GAAAA,QAAgB,QAAQjC,SACxC,QAHK,QAMNH,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CACLR,KAAK,UAEL+B,QAASA,IAAMC,EAAAA,GAAAA,QAAgB,QAAQjC,SACxC,QAFK,WAMRkC,eACErC,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CACLR,KAAK,UACLkC,MAAMtC,EAAAA,EAAAA,KAACuC,EAAAA,EAAY,IACnBJ,QAASA,IAAMC,EAAAA,GAAAA,QAAgB,QAAQjC,SACxC,QAMT,C","sources":["webpack://react-admin-web/./src/utils/dict.js","webpack://react-admin-web/./src/pages/permis/account/index.jsx"],"sourcesContent":["const createDict = function (dict) {\r\n  return {\r\n    enum: Object.fromEntries(dict.map(({ alias, value }) => [alias, value])),\r\n    options: dict.map(({ label, value }) => ({ label, value })),\r\n  };\r\n};\r\n\r\nconst dict = {\r\n  gender: createDict([\r\n    { label: \"男\", value: 1, alias: \"male\" },\r\n    { label: \"女\", value: 2, alias: \"woman\" },\r\n  ]),\r\n};\r\n\r\nexport default dict;\r\n","import { Button, message, Space, Switch, Tag } from \"antd\";\r\nimport useAxios from \"@/hooks/axios\";\r\nimport ProTable from \"@/components/ProTable\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport dict from \"@/utils/dict\";\r\n\r\nexport default function Page() {\r\n  const axios = useAxios();\r\n  const columns = [\r\n    {\r\n      title: \"真实姓名\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"account\",\r\n    },\r\n    {\r\n      title: \"性别\",\r\n      dataIndex: \"gender\",\r\n      render: (gender) => {\r\n        if (gender === 1) {\r\n          return <Tag color=\"#2db7f5\">男</Tag>;\r\n        } else if (gender === 2) {\r\n          return <Tag color=\"magenta\">女</Tag>;\r\n        } else {\r\n          return gender;\r\n        }\r\n      },\r\n      type: \"select\",\r\n      options: dict[\"gender\"].options,\r\n    },\r\n    {\r\n      title: \"手机号\",\r\n      dataIndex: \"phone\",\r\n    },\r\n    {\r\n      title: \"邮箱\",\r\n      dataIndex: \"email\",\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (status) => <Switch checked={status === 1} />,\r\n      type: \"select\",\r\n      options: [\r\n        { label: \"启用\", value: 1 },\r\n        { label: \"禁用\", value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (row) => (\r\n        <Space>\r\n          <Button type=\"primary\" ghost size=\"small\">\r\n            编辑\r\n          </Button>\r\n          <Button type=\"primary\" size=\"small\">\r\n            授权\r\n          </Button>\r\n          <Button type=\"primary\" danger size=\"small\">\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n      width: 100,\r\n      fixed: \"right\",\r\n      hideInSearch: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ProTable\r\n      columns={columns}\r\n      rowKey=\"id\"\r\n      headerTitle=\"用户列表\"\r\n      request={(params, { current, pageSize }) => {\r\n        return axios\r\n          .post(\"/api/account/page\", { params, pageIndex: current, pageSize })\r\n          .then((value) => {\r\n            const { result: data } = value;\r\n            return {\r\n              list: data.records,\r\n              total: data.total,\r\n            };\r\n          });\r\n      }}\r\n      batchBarRender={[\r\n        <Button\r\n          type=\"primary\"\r\n          key=\"del\"\r\n          danger\r\n          onClick={() => message.warning(\"演示功能\")}\r\n        >\r\n          批量删除\r\n        </Button>,\r\n        <Button\r\n          type=\"primary\"\r\n          key=\"export\"\r\n          onClick={() => message.warning(\"演示功能\")}\r\n        >\r\n          导出数据\r\n        </Button>,\r\n      ]}\r\n      toolBarRender={\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => message.warning(\"演示功能\")}\r\n        >\r\n          新增\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n"],"names":["dict","gender","label","value","alias","enum","Object","fromEntries","map","options","Page","axios","useAxios","columns","title","dataIndex","render","_jsx","Tag","color","children","type","status","Switch","checked","key","row","_jsxs","Space","Button","ghost","size","danger","width","fixed","hideInSearch","ProTable","rowKey","headerTitle","request","params","current","pageSize","post","pageIndex","then","result","data","list","records","total","batchBarRender","onClick","message","toolBarRender","icon","PlusOutlined"],"sourceRoot":""}