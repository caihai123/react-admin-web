{"version":3,"file":"static/js/770.dbab42c2.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/components/ProTable/style.module.css?1592","webpack://react-admin-web/./src/components/ProTable/FormItem/Input.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Select.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Checkbox.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Radio.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Date.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/DateRange.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/TreeSelect.tsx","webpack://react-admin-web/./src/components/ProTable/FormItem/index.tsx","webpack://react-admin-web/./src/components/DropdownFrom/index.tsx","webpack://react-admin-web/./src/components/ProTable/ColumnSetting.tsx","webpack://react-admin-web/./src/components/ProTable/index.tsx","webpack://react-admin-web/./src/pages/pro-table/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tools-bar\":\"ghwuoi3NE3Ry7s7fNzAi\",\"header-title\":\"mtRVkLbROTli4p1ohQ5i\",\"tool-right\":\"gpJXWmO55r2tH9Z_hXa6\",\"toolbar-setting\":\"whG6r6ufswl2doZWNUEI\",\"toolbar-setting-item\":\"te8gfQS8fuVGrAEe5Wko\",\"batch-bar\":\"dDNrcy2mCFFeBtzOHKWq\"};","import { Input as AInput, Form } from \"antd\";\r\n\r\nimport type { GetProps } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: GetProps<typeof AInput>;\r\n};\r\n\r\nexport default function Input({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <AInput placeholder={`请输入${item.title}`} {...item.fieldProps} />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { Select as ASelect, Form, Badge } from \"antd\";\r\n\r\nimport type { GetProps, GetProp } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  options: GetProp<typeof ASelect, \"options\">;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: Omit<GetProps<typeof ASelect>, \"options\">;\r\n};\r\n\r\nexport default function Select({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ASelect\r\n        placeholder={`请选择${item.title}`}\r\n        style={{ width: 183 }}\r\n        allowClear\r\n        {...item.fieldProps}\r\n      >\r\n        {item.options.map((item) => (\r\n          <ASelect.Option key={item.value} value={item.value}>\r\n            {item.color ? (\r\n              <Badge color={item.color} text={item.label} />\r\n            ) : (\r\n              item.label\r\n            )}\r\n          </ASelect.Option>\r\n        ))}\r\n      </ASelect>\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { Checkbox as ACheckbox, Form } from \"antd\";\r\n\r\nimport type { GetProp, GetProps } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  options: GetProp<typeof ACheckbox.Group, \"options\">;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: Omit<GetProps<typeof ACheckbox.Group>, \"options\">;\r\n};\r\n\r\nexport default function Checkbox({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ACheckbox.Group\r\n        options={item.options}\r\n        {...item.fieldProps}\r\n      ></ACheckbox.Group>\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { Radio as ARadio, Form } from \"antd\";\r\n\r\nimport type { GetProps, GetProp } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  options: GetProp<typeof ARadio.Group, \"options\">;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: Omit<GetProps<typeof ARadio.Group>, \"options\">;\r\n};\r\n\r\nexport default function Radio({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ARadio.Group options={item.options} {...item.fieldProps}></ARadio.Group>\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { DatePicker, Form } from \"antd\";\r\n\r\nimport type { GetProps } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: GetProps<typeof DatePicker>;\r\n};\r\n\r\nexport default function Date({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <DatePicker {...item.fieldProps} />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { DatePicker, Form } from \"antd\";\r\n\r\nimport type { GetProps } from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: GetProps<typeof RangePicker>;\r\n};\r\n\r\nexport default function Date({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <RangePicker style={{ width: 250 }} {...item.fieldProps} />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { TreeSelect as ATreeSelect, Form } from \"antd\";\r\n\r\nimport type { GetProps, GetProp } from \"antd\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  dataIndex?: string;\r\n  options: GetProp<typeof ATreeSelect, \"treeData\">;\r\n  formItemProps?: Omit<GetProps<typeof Form.Item>, \"label\" | \"name\">;\r\n  fieldProps?: Omit<GetProps<typeof ATreeSelect>, \"options\">;\r\n};\r\n\r\nexport default function TreeSelect({ item }: { item: Item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ATreeSelect\r\n        placeholder={`请选择${item.title}`}\r\n        treeData={item.options}\r\n        style={{ width: 183 }}\r\n        allowClear\r\n        {...item.fieldProps}\r\n      />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { ReactNode } from \"react\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport Radio from \"./Radio\";\r\nimport Date from \"./Date\";\r\nimport DateRange from \"./DateRange\";\r\nimport TreeSelect from \"./TreeSelect\";\r\n\r\nimport type { GetProp } from \"antd\";\r\n\r\nexport type BaseItem = {\r\n  type?:\r\n    | \"input\"\r\n    | \"select\"\r\n    | \"checkbox\"\r\n    | \"radio\"\r\n    | \"date\"\r\n    | \"dateRange\"\r\n    | \"treeSelect\";\r\n  renderFormItem?: ReactNode | (() => ReactNode);\r\n};\r\n\r\ntype SelectItem = BaseItem & GetProp<typeof Select, \"item\">;\r\ntype CheckboxItem = BaseItem & GetProp<typeof Checkbox, \"item\">;\r\ntype RadioItem = BaseItem & GetProp<typeof Radio, \"item\">;\r\ntype DateItem = BaseItem & GetProp<typeof Date, \"item\">;\r\ntype DateRangeItem = BaseItem & GetProp<typeof DateRange, \"item\">;\r\ntype TreeSelectItem = BaseItem & GetProp<typeof TreeSelect, \"item\">;\r\ntype InputItem = BaseItem & GetProp<typeof Input, \"item\">;\r\n\r\nexport type Item =\r\n  | (BaseItem & SelectItem)\r\n  | (BaseItem & CheckboxItem)\r\n  | (BaseItem & RadioItem)\r\n  | (BaseItem & DateItem)\r\n  | (BaseItem & DateRangeItem)\r\n  | (BaseItem & TreeSelectItem)\r\n  | (BaseItem & InputItem);\r\n\r\nexport default function FormItem({ item }: { item: Item }) {\r\n  const { type = \"input\", renderFormItem, ...rest } = item;\r\n  if (renderFormItem) {\r\n    return typeof renderFormItem === \"function\"\r\n      ? renderFormItem()\r\n      : renderFormItem;\r\n  } else {\r\n    switch (type) {\r\n      case \"select\":\r\n        return <Select item={rest as SelectItem} />;\r\n      case \"checkbox\":\r\n        return <Checkbox item={rest as CheckboxItem} />;\r\n      case \"radio\":\r\n        return <Radio item={rest as RadioItem} />;\r\n      case \"date\":\r\n        return <Date item={rest as DateItem} />;\r\n      case \"dateRange\":\r\n        return <DateRange item={rest as DateRangeItem} />;\r\n      case \"treeSelect\":\r\n        return <TreeSelect item={rest as TreeSelectItem} />;\r\n      case \"input\":\r\n        return <Input item={rest as InputItem} />;\r\n      default:\r\n        return <Input item={rest as InputItem} />;\r\n    }\r\n  }\r\n}\r\n","import { ReactNode, forwardRef, useImperativeHandle } from \"react\";\r\nimport { Card, Form, Button, Space } from \"antd\";\r\nimport { CaretUpOutlined, CaretDownOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport { useBoolean } from \"ahooks\";\r\n\r\nimport type { FormProps } from \"antd\";\r\n\r\nconst toolsWidth = \"188px\";\r\n\r\nconst DropdownBox = styled(Form)`\r\n  position: relative;\r\n  overflow-y: hidden;\r\n  padding-top: 16px;\r\n  &:after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    width: ${toolsWidth};\r\n    height: 32px;\r\n    vertical-align: top;\r\n    margin-bottom: 16px;\r\n  }\r\n  & .ant-form-item {\r\n    margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst Tools = styled(Form.Item)`\r\n  position: absolute;\r\n  right: -16px;\r\n  bottom: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nexport type Props = FormProps & { children: ReactNode };\r\nexport type Ref = { submit: () => void; reset: () => void };\r\n\r\nconst DropdownForm = forwardRef<Ref, Props>(function (props, ref) {\r\n  const [form] = Form.useForm();\r\n  const [visible, { setTrue, setFalse }] = useBoolean(false);\r\n\r\n  const { children, style, className, ...rest } = props;\r\n\r\n  const reset = function () {\r\n    form.resetFields();\r\n    form.submit();\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    submit: form.submit,\r\n    reset,\r\n  }));\r\n\r\n  return (\r\n    <Card\r\n      styles={{ body: { paddingTop: 0, paddingBottom: 0 } }}\r\n      style={style}\r\n      className={className}\r\n    >\r\n      <DropdownBox\r\n        layout=\"inline\"\r\n        style={{\r\n          height: visible ? \"auto\" : \"64px\",\r\n          paddingRight: visible ? \"0\" : toolsWidth,\r\n        }}\r\n        form={form}\r\n        autoComplete=\"off\"\r\n        {...rest}\r\n      >\r\n        {children}\r\n        <Tools>\r\n          <Space>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              查询\r\n            </Button>\r\n            <Button onClick={() => reset()}>重置</Button>\r\n            {visible ? (\r\n              <Button\r\n                type=\"link\"\r\n                style={{ padding: 0 }}\r\n                onClick={() => setFalse()}\r\n              >\r\n                收起\r\n                <CaretUpOutlined style={{ marginInlineStart: 0 }} />\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                type=\"link\"\r\n                style={{ padding: 0 }}\r\n                onClick={() => setTrue()}\r\n              >\r\n                展开\r\n                <CaretDownOutlined style={{ marginInlineStart: 0 }} />\r\n              </Button>\r\n            )}\r\n          </Space>\r\n        </Tools>\r\n      </DropdownBox>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DropdownForm;\r\n","import { useState, ReactNode } from \"react\";\r\nimport { Popover, Checkbox, Divider, Button } from \"antd\";\r\n\r\nimport type { GetProp } from \"antd\";\r\n\r\ntype Keys = Array<any>;\r\n\r\ntype Props = {\r\n  /** 指定选中的选项 */\r\n  value: Keys;\r\n  /** 指定可选项 */\r\n  options: Array<{ label: string; value: any }>;\r\n  /** 显示的内容 */\r\n  children: ReactNode;\r\n  /** 变化时的回调函数 */\r\n  onChange: (keys: Keys) => void;\r\n};\r\n\r\nconst ColumnSetting = function (props: Props) {\r\n  const { children, value, onChange, options } = props;\r\n\r\n  const plainOptions = options.map((item) => item.value);\r\n\r\n  const [indeterminate, setIndeterminate] = useState(false);\r\n  const [checkAll, setCheckAll] = useState(true);\r\n\r\n  const onCheckAllChange: GetProp<typeof Checkbox, \"onChange\"> = (e) => {\r\n    onChange(e.target.checked ? plainOptions : []);\r\n    setIndeterminate(false);\r\n    setCheckAll(e.target.checked);\r\n  };\r\n\r\n  const onCheckChange = (list: Keys) => {\r\n    onChange(list);\r\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\r\n    setCheckAll(list.length === plainOptions.length);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      arrow={false}\r\n      content={\r\n        <div style={{ minWidth: 176 }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Checkbox\r\n              indeterminate={indeterminate}\r\n              onChange={onCheckAllChange}\r\n              checked={checkAll}\r\n            >\r\n              列展示\r\n            </Checkbox>\r\n            <Button\r\n              type=\"link\"\r\n              style={{ height: 22, lineHeight: 1, padding: 0 }}\r\n              onClick={() => onCheckChange(plainOptions)}\r\n            >\r\n              重置\r\n            </Button>\r\n          </div>\r\n          <Divider style={{ margin: \"4px 0\" }} />\r\n          <Checkbox.Group\r\n            value={value}\r\n            onChange={(keys) => onCheckChange(keys)}\r\n            style={{ display: \"block\" }}\r\n          >\r\n            {options.map((item) => (\r\n              <Checkbox\r\n                style={{ display: \"flex\", margin: 0 }}\r\n                value={item.value}\r\n                key={item.value}\r\n              >\r\n                {item.label}\r\n              </Checkbox>\r\n            ))}\r\n          </Checkbox.Group>\r\n        </div>\r\n      }\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n    >\r\n      {children}\r\n    </Popover>\r\n  );\r\n};\r\nexport default ColumnSetting;\r\n","import {\r\n  forwardRef,\r\n  useState,\r\n  useMemo,\r\n  useRef,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  ReactNode,\r\n  Key as ReactKey,\r\n} from \"react\";\r\nimport { Card, Table, theme, Space, Tooltip, Dropdown, Button } from \"antd\";\r\nimport { usePagination } from \"ahooks\";\r\nimport styles from \"./style.module.css\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\nimport FormItem from \"./FormItem\";\r\nimport DropdownFrom from \"@/components/DropdownFrom\";\r\nimport ColumnSetting from \"./ColumnSetting\";\r\nimport {\r\n  ReloadOutlined,\r\n  ColumnHeightOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport type { TableProps, TableColumnType } from \"antd\";\r\nimport type { Item as FormItemType } from \"./FormItem/index\";\r\nimport type { Ref as DropdownFromRefType } from \"@/components/DropdownFrom\";\r\n\r\nexport type Ref = {\r\n  /** 手动触发刷新，可传入页码刷新到指定页 */\r\n  refresh: (pageIndex?: number) => void;\r\n  /** 手动触发查询操作 */\r\n  search: () => void;\r\n  /** 手动触发重置操作 */\r\n  reset: () => void;\r\n  /** 手动清空多选 */\r\n  clearSelected: () => void;\r\n};\r\n\r\nexport type ProTableColumnType<RecordType = any> =\r\n  TableColumnType<RecordType> & {\r\n    /** 查询表单初始值 */\r\n    initialValue?: any;\r\n    /** 是否在筛选表单中隐藏该项 默认：false */\r\n    hideInSearch?: boolean;\r\n    /** 是否在表格中隐藏该项 默认：false */\r\n    hideInTable?: boolean;\r\n  } & FormItemType;\r\n\r\nexport type ProTableProps<RecordType = any> = {\r\n  /** 表格行 key 的取值，可以是字符串或一个函数 */\r\n  rowKey: TableProps<RecordType>[\"rowKey\"];\r\n  /** Table 的数据，protable 推荐使用 request 来加载 */\r\n  dataSource?: TableProps<RecordType>[\"dataSource\"];\r\n  /** 获取 dataSource 的方法 */\r\n  request?: (\r\n    /** 查询表单的 params */\r\n    params: any,\r\n    /** 分页参数 */\r\n    pagination: { current: number; pageSize: number }\r\n  ) => Promise<{ list: any[]; total?: number }>;\r\n  /** 表格列及查询表单的配置描述 */\r\n  columns: ProTableColumnType<RecordType>[];\r\n  /** 表格分页配置项 为 false 时不显示*/\r\n  pagination?: TableProps<RecordType>[\"pagination\"];\r\n  /** 自定义表格 loading 默认：不显示 */\r\n  loading?: TableProps<RecordType>[\"loading\"];\r\n  /** 是否显示搜索表单 默认：true */\r\n  search?: boolean;\r\n  /** 批量操作节点 */\r\n  batchBarRender?: ReactNode | ((keys: any[]) => ReactNode);\r\n  /** 工具栏节点 */\r\n  toolBarRender?: ReactNode | ((params: any) => ReactNode);\r\n  /** table 标题 */\r\n  headerTitle?: ReactNode | (() => ReactNode);\r\n  /** Table rowSelection 配置 */\r\n  tableRowSelection?: TableProps<RecordType>[\"rowSelection\"];\r\n  /** 刷新页面时触发 */\r\n  onRefresh?: (params: any) => void;\r\n  /** 提交表单时触发 */\r\n  onSubmit?: (params: any) => void;\r\n  /** 重置表单时触发 */\r\n  onReset?: (params: any) => void;\r\n\r\n  footer?: TableProps[\"footer\"];\r\n};\r\n\r\nexport type TableSize = TableProps[\"size\"];\r\n\r\nconst initialTableSize = \"large\"; // 表格尺寸默认值\r\n\r\nconst getRowkey = function (row: ProTableColumnType) {\r\n  return row.key || row.dataIndex;\r\n};\r\n\r\nconst ProTable = forwardRef<Ref, ProTableProps>(function (props, ref) {\r\n  const {\r\n    loading,\r\n    columns,\r\n    dataSource,\r\n    pagination: propPagination = true,\r\n    onRefresh,\r\n    search: showSearch = true,\r\n    batchBarRender,\r\n    toolBarRender,\r\n    headerTitle,\r\n    tableRowSelection,\r\n  } = props;\r\n\r\n  // 搜索表单项\r\n  const formItems = useMemo(() => {\r\n    return columns\r\n      .filter((item) => item.hideInSearch !== true)\r\n      .map((item) => <FormItem item={item} key={getRowkey(item)} />);\r\n  }, [columns]);\r\n\r\n  // 表单的默认值\r\n  const initialValues = useMemo(\r\n    () =>\r\n      Object.fromEntries(\r\n        columns\r\n          .filter((item) => typeof item.initialValue !== \"undefined\")\r\n          .map(({ dataIndex, initialValue }) => [dataIndex, initialValue])\r\n      ),\r\n    [columns]\r\n  );\r\n\r\n  // 查询表单参数缓存\r\n  const [params, setParams] = useState(initialValues);\r\n\r\n  // 查询表单实例\r\n  const searchFrom = useRef<DropdownFromRefType>(null);\r\n\r\n  // 表格上使用的columns\r\n  const tableColumns = useMemo(\r\n    () => columns.filter((item) => item.hideInTable !== true),\r\n    [columns]\r\n  );\r\n\r\n  // request加载数据对象\r\n  const requestData = usePagination(\r\n    ({ current, pageSize }) =>\r\n      // @ts-ignore\r\n      !Array.isArray(dataSource) &&\r\n      props.request?.(params, { current, pageSize }),\r\n    {\r\n      refreshDeps: [params],\r\n      // @ts-ignore\r\n      defaultCurrent: propPagination?.current || 1,\r\n      // @ts-ignore\r\n      defaultPageSize: propPagination?.pageSize || 10,\r\n      loadingDelay: 0,\r\n    }\r\n  );\r\n\r\n  // 表格的可变配置项\r\n  const tableConfig = useMemo(() => {\r\n    const isDataSource = Array.isArray(dataSource);\r\n    const { data, pagination, refresh } = requestData;\r\n    const paginationConfig: TableProps[\"pagination\"] = {\r\n      // table pagination 的默认配置，允许props.pagination 覆盖它\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: (total, range) => `第 ${range.join(\"-\")} 条/共 ${total} 条`,\r\n      style: { marginBottom: -8 },\r\n      // @ts-ignore 我知道它可能为 boolean ,就算放进去也不会出现错误\r\n      ...propPagination,\r\n    };\r\n    return {\r\n      list: isDataSource ? dataSource : data?.list,\r\n      // eslint-disable-next-line no-nested-ternary\r\n      pagination: propPagination\r\n        ? isDataSource\r\n          ? paginationConfig\r\n          : {\r\n              current: pagination.current,\r\n              pageSize: pagination.pageSize,\r\n              total: pagination.total,\r\n              onChange: pagination.onChange,\r\n              ...paginationConfig,\r\n            }\r\n        : false,\r\n      refresh(pageIndex?: number) {\r\n        if (!isDataSource) {\r\n          pageIndex && pageIndex !== pagination.current\r\n            ? pagination.changeCurrent(pageIndex)\r\n            : refresh();\r\n        }\r\n        onRefresh?.(params);\r\n      },\r\n    };\r\n  }, [dataSource, requestData, propPagination, params, onRefresh]);\r\n\r\n  // 表格设置栏\r\n  const [configkeys, setConfigkeys] = useState(\r\n    tableColumns.map((item) => getRowkey(item))\r\n  );\r\n\r\n  // loadingDelay 和 loadingKeep，具体可参考：useLoadingDelayAndKeep\r\n  const [tableLoading, { setTrue, setFalse }] = useLoadingDelayAndKeep(\r\n    typeof loading === \"boolean\" ? loading : false\r\n  );\r\n  useEffect(() => {\r\n    const tableLoading =\r\n      typeof loading === \"boolean\" ? loading : requestData.loading;\r\n    tableLoading ? setTrue() : setFalse();\r\n  }, [loading, requestData.loading, setTrue, setFalse]);\r\n\r\n  // 表格size\r\n  const [tableSize, setTableSize] = useState<TableSize>(initialTableSize);\r\n\r\n  // 当前选中的keys\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState<ReactKey[]>([]);\r\n\r\n  const {\r\n    token: { borderRadius, controlItemBgActive, colorText },\r\n  } = theme.useToken();\r\n\r\n  // 暴露出去的函数\r\n  useImperativeHandle(ref, () => ({\r\n    refresh: tableConfig.refresh,\r\n\r\n    // 触发搜索表单的搜索事件\r\n    search: () => {\r\n      const submit = searchFrom.current?.submit;\r\n      submit ? submit() : setParams(null);\r\n      props.onSubmit?.(params);\r\n    },\r\n\r\n    // 触发搜索表单的重置事件\r\n    reset: () => {\r\n      const reset = searchFrom.current?.reset;\r\n      reset ? reset() : setParams(null);\r\n      props.onReset?.(params);\r\n    },\r\n\r\n    // 清空选中项\r\n    clearSelected: () => setSelectedRowKeys([]),\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      {showSearch && (\r\n        <DropdownFrom\r\n          ref={searchFrom}\r\n          onFinish={(values) => setParams(values)}\r\n          initialValues={initialValues}\r\n        >\r\n          {formItems}\r\n        </DropdownFrom>\r\n      )}\r\n\r\n      <Card\r\n        style={{ marginTop: showSearch ? 16 : 0 }}\r\n        styles={{\r\n          body: { paddingTop: 16, paddingBottom: 24 },\r\n        }}\r\n      >\r\n        {\r\n          <div\r\n            className={styles[\"tools-bar\"]}\r\n            style={{\r\n              display: selectedRowKeys.length > 0 ? \"none\" : \"\",\r\n              color: colorText,\r\n            }}\r\n          >\r\n            <div className={styles[\"header-title\"]}>\r\n              {typeof headerTitle === \"function\" ? headerTitle() : headerTitle}\r\n            </div>\r\n            <div className={styles[\"tool-right\"]}>\r\n              {toolBarRender && (\r\n                <Space>\r\n                  {typeof toolBarRender === \"function\"\r\n                    ? toolBarRender(params)\r\n                    : toolBarRender}\r\n                </Space>\r\n              )}\r\n              <div className={styles[\"toolbar-setting\"]}>\r\n                <div\r\n                  className={styles[\"toolbar-setting-item\"]}\r\n                  onClick={() => tableConfig.refresh()}\r\n                >\r\n                  <Tooltip title=\"刷新\">\r\n                    <ReloadOutlined />\r\n                  </Tooltip>\r\n                </div>\r\n                <Dropdown\r\n                  overlayStyle={{ width: 80 }}\r\n                  menu={{\r\n                    items: [\r\n                      { key: \"large\", label: \"默认\" },\r\n                      { key: \"middle\", label: \"中等\" },\r\n                      { key: \"small\", label: \"紧凑\" },\r\n                    ],\r\n                    selectable: true,\r\n                    defaultSelectedKeys: [initialTableSize],\r\n                    onClick: ({ key }) => setTableSize(key as TableSize),\r\n                  }}\r\n                  trigger={[\"click\"]}\r\n                >\r\n                  <div className={styles[\"toolbar-setting-item\"]}>\r\n                    <Tooltip title=\"密度\">\r\n                      <ColumnHeightOutlined />\r\n                    </Tooltip>\r\n                  </div>\r\n                </Dropdown>\r\n\r\n                <ColumnSetting\r\n                  value={configkeys}\r\n                  options={tableColumns.map((item) => ({\r\n                    label: item.title,\r\n                    value: getRowkey(item),\r\n                  }))}\r\n                  onChange={(keys) => setConfigkeys(keys)}\r\n                >\r\n                  <div className={styles[\"toolbar-setting-item\"]}>\r\n                    <Tooltip title=\"列设置\">\r\n                      <SettingOutlined />\r\n                    </Tooltip>\r\n                  </div>\r\n                </ColumnSetting>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {batchBarRender && (\r\n          <div\r\n            className={styles[\"batch-bar\"]}\r\n            style={{\r\n              display: selectedRowKeys.length > 0 ? \"\" : \"none\",\r\n              color: colorText,\r\n              backgroundColor: controlItemBgActive,\r\n              borderRadius,\r\n            }}\r\n          >\r\n            <div>\r\n              <span>已选 {selectedRowKeys.length} 项</span>\r\n              <Button type=\"link\" onClick={() => setSelectedRowKeys([])}>\r\n                取消选择\r\n              </Button>\r\n            </div>\r\n            <Space>\r\n              {typeof batchBarRender === \"function\"\r\n                ? batchBarRender(selectedRowKeys)\r\n                : batchBarRender}\r\n            </Space>\r\n          </div>\r\n        )}\r\n        <div className={styles[\"main\"]}>\r\n          <Table\r\n            rowKey={props.rowKey}\r\n            dataSource={tableConfig.list}\r\n            columns={tableColumns.filter((item) => {\r\n              const key = getRowkey(item);\r\n              return configkeys.includes(key);\r\n            })}\r\n            loading={tableLoading}\r\n            pagination={tableConfig.pagination}\r\n            rowSelection={\r\n              batchBarRender\r\n                ? {\r\n                    type: \"checkbox\",\r\n                    selectedRowKeys,\r\n                    onChange: (keys) => setSelectedRowKeys(keys),\r\n                    preserveSelectedRowKeys: true,\r\n                    ...tableRowSelection,\r\n                  }\r\n                : undefined\r\n            }\r\n            size={tableSize}\r\n            bordered\r\n            scroll={{ x: \"max-content\" }}\r\n            footer={props.footer}\r\n          ></Table>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ProTable;\r\n","import Mock from \"mockjs\";\r\nimport ProTable from \"@/components/ProTable\";\r\nimport { Alert, Button, Form, Slider, message, Space } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function ProTableDemo() {\r\n  const columns = [\r\n    {\r\n      title: \"text\",\r\n      dataIndex: \"text\",\r\n      initialValue: \"initial text\",\r\n    },\r\n    {\r\n      title: \"select\",\r\n      dataIndex: \"select\",\r\n      type: \"select\",\r\n      options: [\r\n        { label: \"选项一\", value: 1 },\r\n        { label: \"选项二\", value: 2 },\r\n        { label: \"选项三\", value: 3 },\r\n      ],\r\n      initialValue: 1,\r\n    },\r\n    {\r\n      title: \"checkbox\",\r\n      dataIndex: \"checkbox\",\r\n      type: \"checkbox\",\r\n      options: [\r\n        { label: \"选项一\", value: 1 },\r\n        { label: \"选项二\", value: 2 },\r\n        { label: \"选项三\", value: 3 },\r\n      ],\r\n      initialValue: [1, 2],\r\n    },\r\n    {\r\n      title: \"radio\",\r\n      dataIndex: \"radio\",\r\n      type: \"radio\",\r\n      options: [\r\n        { label: \"选项一\", value: 1 },\r\n        { label: \"选项二\", value: 2 },\r\n        { label: \"选项三\", value: 3 },\r\n      ],\r\n      initialValue: 1,\r\n    },\r\n    {\r\n      title: \"date\",\r\n      dataIndex: \"date\",\r\n      type: \"date\",\r\n    },\r\n    {\r\n      title: \"dateTime\",\r\n      dataIndex: \"dateTime\",\r\n      type: \"date\",\r\n      fieldProps: { showTime: true },\r\n    },\r\n    {\r\n      title: \"week\",\r\n      dataIndex: \"week\",\r\n      type: \"date\",\r\n      fieldProps: { picker: \"week\" },\r\n    },\r\n    {\r\n      title: \"month\",\r\n      dataIndex: \"month\",\r\n      type: \"date\",\r\n      fieldProps: { picker: \"month\" },\r\n    },\r\n    {\r\n      title: \"quarter\",\r\n      dataIndex: \"quarter\",\r\n      type: \"date\",\r\n      fieldProps: { picker: \"quarter\" },\r\n    },\r\n    {\r\n      title: \"year\",\r\n      dataIndex: \"year\",\r\n      type: \"date\",\r\n      fieldProps: { picker: \"year\" },\r\n    },\r\n    {\r\n      title: \"dateRange\",\r\n      dataIndex: \"dateRange\",\r\n      type: \"dateRange\",\r\n    },\r\n    {\r\n      title: \"dateTimeRange\",\r\n      dataIndex: \"dateTimeRange\",\r\n      type: \"dateRange\",\r\n      fieldProps: { showTime: true },\r\n    },\r\n    {\r\n      title: \"weekRange\",\r\n      dataIndex: \"weekRange\",\r\n      type: \"dateRange\",\r\n      fieldProps: { picker: \"week\" },\r\n    },\r\n    {\r\n      title: \"monthRange\",\r\n      dataIndex: \"monthRange\",\r\n      type: \"dateRange\",\r\n      fieldProps: { picker: \"month\" },\r\n    },\r\n    {\r\n      title: \"quarterRange\",\r\n      dataIndex: \"quarterRange\",\r\n      type: \"dateRange\",\r\n      fieldProps: { picker: \"quarter\" },\r\n    },\r\n    {\r\n      title: \"yearRange\",\r\n      dataIndex: \"yearRange\",\r\n      type: \"dateRange\",\r\n      fieldProps: { picker: \"year\" },\r\n    },\r\n    {\r\n      title: \"custom\",\r\n      dataIndex: \"custom\",\r\n      renderFormItem: () => {\r\n        return (\r\n          <Form.Item label=\"custom\" name=\"custom\">\r\n            <Slider style={{ width: 200 }} />\r\n          </Form.Item>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (row) => (\r\n        <Space>\r\n          <Button type=\"primary\" ghost size=\"small\">\r\n            编辑\r\n          </Button>\r\n          <Button type=\"primary\" danger size=\"small\">\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n      fixed: \"right\",\r\n      hideInSearch: true,\r\n    },\r\n  ];\r\n\r\n  const tableData = [...Array(15)].map(() =>\r\n    Mock.mock({\r\n      id: \"@guid\",\r\n      text: \"@ctitle\",\r\n      \"select|1\": [1, 2, 3],\r\n      \"checkbox|1\": [1, 2, 3],\r\n      \"radio|1\": [1, 2, 3],\r\n      date: \"@date\",\r\n      dateTime: \"@datetime\",\r\n      week: \"2023-31周\",\r\n      month: \"2023-02\",\r\n      \"quarter|1\": [\"1季度\", \"2季度\", \"3季度\", \"4季度\"],\r\n      year: \"2023\",\r\n      dateRange: \"@date\",\r\n      dateTimeRange: \"@datetime\",\r\n      weekRange: \"2023-31周\",\r\n      monthRange: \"2023-02\",\r\n      \"quarterRange|1\": [\"1季度\", \"2季度\", \"3季度\", \"4季度\"],\r\n      yearRange: \"2023\",\r\n      \"custom|0-100\": 1,\r\n    })\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        message=\"此页面主要演示搜索表单栏的配置项\"\r\n        type=\"info\"\r\n        showIcon\r\n        closable\r\n      />\r\n      <ProTable\r\n        rowKey=\"id\"\r\n        headerTitle=\"数据列表\"\r\n        columns={columns}\r\n        dataSource={tableData}\r\n        batchBarRender={[\r\n          <Button\r\n            type=\"primary\"\r\n            key=\"del\"\r\n            danger\r\n            onClick={() => message.warning(\"演示功能\")}\r\n          >\r\n            批量删除\r\n          </Button>,\r\n          <Button key=\"export\" onClick={() => message.warning(\"演示功能\")}>\r\n            导出数据\r\n          </Button>,\r\n        ]}\r\n        toolBarRender={(params) => [\r\n          <Button\r\n            key=\"add\"\r\n            type=\"primary\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => message.warning(\"演示功能\")}\r\n          >\r\n            新增\r\n          </Button>,\r\n          <Button key=\"export\" onClick={() => message.warning(\"演示功能\")}>\r\n            导出\r\n          </Button>,\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["Input","item","_jsx","Form","label","title","name","dataIndex","formItemProps","children","AInput","placeholder","fieldProps","Select","ASelect","style","width","allowClear","options","map","value","color","Badge","text","Checkbox","ACheckbox","Radio","ARadio","Date","DatePicker","RangePicker","TreeSelect","ATreeSelect","treeData","FormItem","type","renderFormItem","rest","DateRange","toolsWidth","DropdownBox","styled","Tools","forwardRef","props","ref","form","visible","setTrue","setFalse","useBoolean","className","reset","resetFields","submit","useImperativeHandle","Card","styles","body","paddingTop","paddingBottom","_jsxs","layout","height","paddingRight","autoComplete","Space","Button","htmlType","onClick","padding","CaretUpOutlined","marginInlineStart","CaretDownOutlined","onChange","plainOptions","indeterminate","setIndeterminate","useState","checkAll","setCheckAll","onCheckChange","list","length","Popover","arrow","content","minWidth","display","justifyContent","e","target","checked","lineHeight","Divider","margin","keys","placement","trigger","initialTableSize","getRowkey","row","key","loading","columns","dataSource","pagination","propPagination","onRefresh","search","showSearch","batchBarRender","toolBarRender","headerTitle","tableRowSelection","formItems","useMemo","filter","hideInSearch","initialValues","Object","fromEntries","initialValue","params","setParams","searchFrom","useRef","tableColumns","hideInTable","requestData","usePagination","current","pageSize","Array","isArray","request","refreshDeps","defaultCurrent","defaultPageSize","loadingDelay","tableConfig","isDataSource","data","refresh","paginationConfig","showSizeChanger","showQuickJumper","showTotal","total","range","join","marginBottom","pageIndex","changeCurrent","configkeys","setConfigkeys","tableLoading","useLoadingDelayAndKeep","useEffect","tableSize","setTableSize","selectedRowKeys","setSelectedRowKeys","token","borderRadius","controlItemBgActive","colorText","theme","onSubmit","onReset","clearSelected","_Fragment","DropdownFrom","onFinish","values","marginTop","Tooltip","ReloadOutlined","Dropdown","overlayStyle","menu","items","selectable","defaultSelectedKeys","ColumnHeightOutlined","ColumnSetting","SettingOutlined","backgroundColor","Table","rowKey","includes","rowSelection","preserveSelectedRowKeys","undefined","size","bordered","scroll","x","footer","ProTableDemo","showTime","picker","Slider","render","ghost","danger","fixed","tableData","Mock","id","date","dateTime","week","month","year","dateRange","dateTimeRange","weekRange","monthRange","yearRange","Alert","message","showIcon","closable","ProTable","icon","PlusOutlined"],"sourceRoot":""}