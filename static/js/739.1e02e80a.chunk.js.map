{"version":3,"file":"static/js/739.1e02e80a.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/components/DictSelect.jsx","webpack://react-admin-web/./src/pages/account/index.jsx","webpack://react-admin-web/./src/store/apiSlice/dept.js","webpack://react-admin-web/./node_modules/antd/es/col/index.js","webpack://react-admin-web/./node_modules/antd/es/row/index.js"],"sourcesContent":["import { Select, Badge } from \"antd\";\r\nimport dict from \"@/utils/dict\";\r\n\r\nconst DictSelect = function (props) {\r\n  const { dictName, placeholder = \"请选择\", ...rest } = props;\r\n\r\n  const { options } = dict[dictName];\r\n\r\n  return (\r\n    <Select {...rest} placeholder={placeholder}>\r\n      {options.map((item) => (\r\n        <Select.Option key={item.value} value={item.value}>\r\n          {item.color ? (\r\n            <Badge color={item.color} text={item.label} />\r\n          ) : (\r\n            item.label\r\n          )}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\nexport default DictSelect;\r\n","import {\r\n  Card,\r\n  Form,\r\n  Avatar,\r\n  Space,\r\n  Button,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  TreeSelect,\r\n} from \"antd\";\r\nimport DictSelect from \"@/components/DictSelect\";\r\nimport { useGetDeptSelectQuery } from \"@/store/apiSlice/dept\";\r\n\r\nexport default function Page() {\r\n  const { data: depeOptions } = useGetDeptSelectQuery();\r\n\r\n  return (\r\n    <Card title=\"基础信息\">\r\n      <Form\r\n        layout=\"vertical\"\r\n        autoComplete=\"off\"\r\n        initialValues={{\r\n          account: \"admin\",\r\n          name: \"Cai Hai\",\r\n          gender: \"1\",\r\n          phone: \"18888888888\",\r\n          email: \"12345678@email.com\",\r\n          deptId: [\"1\", \"2\"],\r\n          description: \"阁下身为真灵，不知能接下韩某几招。\",\r\n        }}\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={24} xxl={8}>\r\n            <Form.Item name=\"avatar\">\r\n              <Space>\r\n                <Avatar\r\n                  size={166}\r\n                  src=\"https://avatars.githubusercontent.com/u/47770861?v=4\"\r\n                />\r\n                <Button>上传</Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24} xxl={16}>\r\n            <Form.Item label=\"个人简介\" name=\"description\">\r\n              <Input.TextArea showCount maxLength={100} placeholder=\"请输入\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12} xxl={8}>\r\n            <Form.Item\r\n              label=\"用户名/账号\"\r\n              name=\"account\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12} xxl={8}>\r\n            <Form.Item\r\n              label=\"真实姓名\"\r\n              name=\"name\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12} xxl={8}>\r\n            <Form.Item\r\n              label=\"所属部门\"\r\n              name=\"deptId\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <TreeSelect treeData={depeOptions} disabled multiple></TreeSelect>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12} xxl={8}>\r\n            <Form.Item label=\"性别\" name=\"gender\" rules={[{ required: true }]}>\r\n              <DictSelect dictName=\"gender\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12} xxl={8}>\r\n            <Form.Item label=\"手机号\" name=\"phone\" rules={[{ required: true }]}>\r\n              <Input placeholder=\"请输入\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12} xxl={8}>\r\n            <Form.Item\r\n              label=\"电子邮件\"\r\n              name=\"email\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input placeholder=\"请输入\" />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          保存更改\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n}\r\n","import apiSlice from \"./index\";\r\n\r\nexport const deptSlice = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // 获取所有部门\r\n    getDeptAll: builder.query({\r\n      query: () => \"/api/dept/list\",\r\n      providesTags: [\"deptList\"],\r\n    }),\r\n    // 获取部门选择器\r\n    getDeptSelect: builder.query({\r\n      query: () => \"/api/dept/select\",\r\n      providesTags: [\"DeptSelect\"],\r\n    }),\r\n    // 新增单个部门\r\n    addDeptItem: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"/api/dept/add\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"deptList\", \"DeptSelect\"],\r\n    }),\r\n    // 更新单个部门\r\n    updateDeptItem: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"/api/dept/update\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"deptList\", \"DeptSelect\"],\r\n    }),\r\n    // 删除单个部门\r\n    deleteDeptItem: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"/api/dept/delete\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"deptList\", \"DeptSelect\"],\r\n      async onQueryStarted({ id }, { dispatch, queryFulfilled }) {\r\n        const patchResult = dispatch(\r\n          apiSlice.util.updateQueryData(\"getDeptAll\", undefined, (draft) => {\r\n            return draft.filter((dept) => dept.id !== id);\r\n          })\r\n        );\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n        }\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetDeptAllQuery,\r\n  useGetDeptSelectQuery,\r\n  useAddDeptItemMutation,\r\n  useUpdateDeptItemMutation,\r\n  useDeleteDeptItemMutation,\r\n} = deptSlice;\r\n","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["props","dictName","placeholder","rest","options","dict","_jsx","Select","children","map","item","value","color","Badge","text","label","Page","data","depeOptions","useGetDeptSelectQuery","Card","title","_jsxs","Form","layout","autoComplete","initialValues","account","name","gender","phone","email","deptId","description","Row","gutter","Col","span","xxl","Space","Avatar","size","src","Button","Input","showCount","maxLength","rules","required","TreeSelect","treeData","disabled","multiple","DictSelect","type","htmlType","deptSlice","apiSlice","endpoints","builder","getDeptAll","query","providesTags","getDeptSelect","addDeptItem","mutation","body","url","method","invalidatesTags","updateDeptItem","deleteDeptItem","async","id","dispatch","queryFulfilled","patchResult","undefined","draft","filter","dept","undo","useGetDeptAllQuery","useAddDeptItemMutation","useUpdateDeptItemMutation","useDeleteDeptItemMutation"],"sourceRoot":""}