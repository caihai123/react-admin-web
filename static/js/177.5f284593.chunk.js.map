{"version":3,"file":"static/js/177.5f284593.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/api/system/role.ts","webpack://react-admin-web/./src/components/ModalForm.tsx","webpack://react-admin-web/./src/components/OptimisticSwitch.tsx","webpack://react-admin-web/./src/components/utils/createCompoundedComponent.ts","webpack://react-admin-web/./src/api/system/account.ts","webpack://react-admin-web/./src/components/RoleSelect.tsx","webpack://react-admin-web/./src/pages/system/account/AddOrEdit.tsx","webpack://react-admin-web/./src/pages/system/account/index.tsx","webpack://react-admin-web/./src/store/api-slice/dept.ts"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport axios from \"@/utils/axios\";\r\nimport { roleEnabledState } from \"@/utils/dict\";\r\n\r\nimport type { AxiosResultPromise } from \"@/utils/axios\";\r\n\r\nexport type Role = {\r\n  id: string;\r\n  roleName: string;\r\n  description: string;\r\n  status: (typeof roleEnabledState.options)[number][\"value\"];\r\n  createTime: string;\r\n};\r\n\r\n/**\r\n * 分页获取角色列表\r\n * @param params - 查询参数\r\n * @param pageIndex - 页码 默认： 1\r\n * @param pageSize - 页大小 默认：10\r\n */\r\nexport const getRoleList: (\r\n  params: any,\r\n  pageIndex: number,\r\n  pageSize: number\r\n) => AxiosResultPromise<{\r\n  records: Role[];\r\n  total: number;\r\n  pageIndex: number;\r\n}> = (params, pageIndex = 1, pageSize = 10) => {\r\n  return axios.post(\"/api/role/page\", { params, pageIndex, pageSize });\r\n};\r\n\r\n/**\r\n * 通过id更新角色状态\r\n * @param id - id\r\n * @param status - 角色状态\r\n */\r\nexport const updateRoleStatusById: (\r\n  id: Role[\"id\"],\r\n  status: Role[\"status\"]\r\n) => AxiosResultPromise<any> = (id, status) => {\r\n  return axios.post(\"/api/role/status/update\", { id, status });\r\n};\r\n\r\n/**\r\n * 通过id删除角色\r\n * @param id - id\r\n */\r\nexport const removeRole: (id: string) => AxiosResultPromise<any> = (id) =>\r\n  axios.post(\"/api/role/remove\", { id });\r\n\r\n/**\r\n * 角色授权\r\n * @param params\r\n */\r\nexport const authRole: (params: any[]) => AxiosResultPromise<any> = (params) =>\r\n  axios.post(\"/api/role/auth\", params);\r\n\r\n/**\r\n * 获取角色选择器\r\n */\r\nexport const getRoleSelect: () => AxiosResultPromise<\r\n  { value: string; label: string }[]\r\n> = () => axios.get(\"/api/role/select\");\r\n","import { forwardRef, useImperativeHandle, useRef } from \"react\";\r\nimport { useBoolean } from \"ahooks\";\r\nimport { Modal, Form, Space, Button } from \"antd\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\nimport createCompoundedComponent from \"./utils/createCompoundedComponent\";\r\n\r\nimport type { ReactNode, RefObject, ReactElement } from \"react\";\r\nimport type { ModalProps, FormProps } from \"antd\";\r\n\r\nexport type Ref = {\r\n  /** 打开 Modal */\r\n  open: () => void;\r\n  /** 关闭 Modal */\r\n  close: () => void;\r\n};\r\n\r\nexport type Props = {\r\n  /** 表单内容 */\r\n  children?: ReactNode;\r\n  /** Drawer title */\r\n  title?: ModalProps[\"title\"];\r\n  /** Drawer width */\r\n  width?: ModalProps[\"width\"];\r\n  /** 确认按钮文字 默认：确定 */\r\n  submitText?: ReactNode;\r\n  /** 取消按钮文字 默认：取消 */\r\n  cancelText?: ReactNode;\r\n  /** 提交表单后触发的事件 */\r\n  onFinish?: ((values: any) => void | Promise<any>) | undefined;\r\n  /** Drawer 底部内容，当不需要默认底部按钮时，可以设为 footer={null} 默认：确定取消按钮 */\r\n  footer?: ModalProps[\"footer\"];\r\n  /** 表单默认值 */\r\n  initialValues?: FormProps[\"initialValues\"];\r\n  form: FormProps[\"form\"];\r\n  // Modal 完全关闭后的回调\r\n  afterClose?: ModalProps[\"afterClose\"];\r\n  /** Modal 其他属性 优先级较高，可能会覆盖title，width等属性 */\r\n  modalProps?: ModalProps;\r\n  /** Form 其他属性 优先级较高，可能会覆盖onFinish，initialValues等属性 */\r\n  formProps?: FormProps;\r\n};\r\n\r\n/**\r\n * Modal 和 Form 的组合，方便在 Modal 中快速创建表单\r\n */\r\nconst ModalForm = forwardRef<Ref, Props>(function (props, ref) {\r\n  const {\r\n    title,\r\n    width,\r\n    submitText = \"确定\",\r\n    cancelText = \"取消\",\r\n    children,\r\n    modalProps,\r\n    formProps,\r\n    onFinish,\r\n    footer,\r\n    initialValues,\r\n    afterClose,\r\n  } = props;\r\n\r\n  const [open, { set: setOpen }] = useBoolean(false);\r\n\r\n  const [loading, setLoading] = useLoadingDelayAndKeep(false);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    open: () => setOpen(true),\r\n    close: () => setOpen(false),\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      open={open}\r\n      onCancel={() => setOpen(false)}\r\n      width={width}\r\n      footer={\r\n        footer ? (\r\n          footer\r\n        ) : (\r\n          <Space>\r\n            <Button onClick={() => setOpen(false)}>{cancelText}</Button>\r\n            <Button\r\n              type=\"primary\"\r\n              loading={loading}\r\n              onClick={() => props.form?.submit()}\r\n            >\r\n              {submitText}\r\n            </Button>\r\n          </Space>\r\n        )\r\n      }\r\n      centered={true}\r\n      wrapClassName=\"custom-modal-style\"\r\n      maskClosable={false}\r\n      // style={{ marginTop: \"-20vh\" }}\r\n      afterClose={afterClose}\r\n      {...modalProps}\r\n    >\r\n      <Form\r\n        form={props.form}\r\n        autoComplete=\"off\"\r\n        onFinish={(values) => {\r\n          const fnResult = onFinish?.(values);\r\n          if (fnResult instanceof Promise) {\r\n            setLoading.setTrue();\r\n            fnResult\r\n              .then(() => setOpen(false))\r\n              .finally(() => setLoading.setFalse());\r\n          }\r\n        }}\r\n        layout=\"vertical\"\r\n        initialValues={initialValues}\r\n        {...formProps}\r\n      >\r\n        {children}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n});\r\n\r\n// 帮你创建 ref 和 form，可以稍微减少使用时的代码量\r\nconst useModal: (\r\n  props: Omit<Props, \"form\">\r\n) => [RefObject<Ref>, FormProps[\"form\"], ReactElement] = function (props) {\r\n  const ref = useRef<Ref>(null);\r\n  const [form] = Form.useForm();\r\n\r\n  return [ref, form, <ModalForm ref={ref} form={form} {...props} />];\r\n};\r\n\r\nexport default createCompoundedComponent(ModalForm, {\r\n  useModal,\r\n});\r\n","import { useBoolean } from \"ahooks\";\r\nimport { Switch } from \"antd\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\n\r\n// 切换失败时自动撤销的 Optimistic Updates 开关\r\n// 注意：暂时还没完全想清楚此组件要不要作为公共基础组件存在\r\n\r\ntype Props = {\r\n  defaultChecked: boolean;\r\n  onChange: (val: boolean) => Promise<any> | null | undefined;\r\n};\r\n\r\nexport default function OptimisticSwitch({\r\n  defaultChecked = false,\r\n  onChange = () => null,\r\n}: Props) {\r\n  const [checked, { set }] = useBoolean(defaultChecked);\r\n  const [loading, { setTrue, setFalse }] = useLoadingDelayAndKeep(false);\r\n\r\n  return (\r\n    <Switch\r\n      checked={checked}\r\n      loading={loading}\r\n      onChange={(val) => {\r\n        set(val);\r\n        setTrue();\r\n        onChange(val)\r\n          ?.catch(() => {\r\n            set(!val);\r\n          })\r\n          .finally(() => setFalse());\r\n      }}\r\n    ></Switch>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// 定义子组件的类型\r\ninterface SubComponents {\r\n  [key: string]: any;\r\n}\r\n\r\n// 主组件和子组件的组合类型\r\ntype CompoundedComponent<F, T> = F & T;\r\n\r\n/**\r\n * 创建组合组件\r\n */\r\nexport default function createCompoundedComponent<\r\n  F extends React.FC<any>,\r\n  T extends SubComponents\r\n>(mainComponent: F, subComponents: T): CompoundedComponent<F, T> {\r\n  // 将主组件转换为复合组件类型\r\n  const Component = mainComponent as CompoundedComponent<F, T>;\r\n\r\n  // 使用 Object.defineProperty 添加子组件到主组件上\r\n  Object.keys(subComponents).forEach((key) => {\r\n    Object.defineProperty(Component, key, {\r\n      value: subComponents[key],\r\n      writable: false, // 确保子组件不可变\r\n      enumerable: true,\r\n    });\r\n  });\r\n\r\n  return Component;\r\n}\r\n","import axios, { type AxiosResultPromise } from \"@/utils/axios\";\r\nimport { gender, accountEnabledState } from \"@/utils/dict\";\r\n\r\nexport type Account = {\r\n  id: string;\r\n  account: string;\r\n  name: string;\r\n  avatar: string;\r\n  gender: (typeof gender.options)[number][\"value\"];\r\n  phone: string;\r\n  email: string;\r\n  deptId: string;\r\n  deptName: string;\r\n  role?: { name: string; id: string }[];\r\n  status: (typeof accountEnabledState.options)[number][\"value\"];\r\n  description: string;\r\n};\r\n\r\n/**\r\n * 分页获取用户列表\r\n * @param params - 查询参数\r\n * @param pageIndex - 页码 默认： 1\r\n * @param pageSize - 页大小 默认：10\r\n */\r\nexport const getAccountList: (\r\n  params: any,\r\n  pageIndex: number,\r\n  pageSize: number\r\n) => AxiosResultPromise<{\r\n  records: Account[];\r\n  total: number;\r\n  pageIndex: number;\r\n}> = (params, pageIndex = 1, pageSize = 10) => {\r\n  return axios.post(\"/api/account/page\", { params, pageIndex, pageSize });\r\n};\r\n\r\n/**\r\n * 通过id更新用户状态\r\n * @param id - id\r\n * @param status - 角色状态\r\n */\r\nexport const updateAccountStatusById: (\r\n  id: Account[\"id\"],\r\n  status: Account[\"status\"]\r\n) => AxiosResultPromise<any> = (id, status) => {\r\n  return axios.post(\"/api/account/status/update\", { id, status });\r\n};\r\n\r\n/**\r\n * 通过id删除用户\r\n * @param id - id\r\n */\r\nexport const removeAccount: (id: string) => AxiosResultPromise<any> = (id) =>\r\n  axios.post(\"/api/account/remove\", { id });\r\n","import { Select, type SelectProps } from \"antd\";\r\nimport { useRequest } from \"ahooks\";\r\nimport { getRoleSelect } from \"@/api/system/role\";\r\n\r\n/**\r\n * 角色选择器\r\n * @param props SelectProps\r\n */\r\nexport default function RoleSelect(props: Omit<SelectProps, \"options\">) {\r\n  const { data, loading } = useRequest(() =>\r\n    getRoleSelect().then((response) => {\r\n      return response.result;\r\n    })\r\n  );\r\n\r\n  return (\r\n    <Select\r\n      options={data}\r\n      placeholder=\"请选择角色\"\r\n      loading={loading}\r\n      filterOption={(inputValue, option) => {\r\n        const label = option?.label as string;\r\n        return label.toLowerCase().includes(inputValue.toLowerCase());\r\n      }}\r\n      {...props}\r\n    ></Select>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form, Input, App, TreeSelect } from \"antd\";\r\nimport axios from \"@/utils/axios\";\r\nimport ModalForm from \"@/components/ModalForm\";\r\nimport { Account } from \"@/api/system/account\";\r\nimport createCompoundedComponent from \"@/components/utils/createCompoundedComponent\";\r\nimport { useGetDeptSelectQuery } from \"@/store/api-slice/dept\";\r\nimport RoleSelect from \"@/components/RoleSelect\";\r\n\r\nexport type Props = {\r\n  callback: (pageIndex?: number) => void;\r\n};\r\nexport type Ref = {\r\n  addStart: () => void;\r\n  editStart: (row: Account) => void;\r\n};\r\n\r\nconst AddOrEdit = React.forwardRef<Ref, Props>((props, ref) => {\r\n  const { message } = App.useApp();\r\n\r\n  const [id, setId] = React.useState(\"\");\r\n\r\n  const { data: depeOptions } = useGetDeptSelectQuery();\r\n\r\n  const onSubmit = function (data: {\r\n    account: string;\r\n    password: string;\r\n    deptId: string;\r\n    role: string[];\r\n  }) {\r\n    const apiUrl = id ? \"/api/account/update\" : \"/api/account/add\";\r\n    const successMsg = id ? \"更新成功！\" : \"新增成功！\";\r\n    const params = id ? { id, ...data } : data;\r\n    const callback = () => props.callback(id ? undefined : 1);\r\n    return axios.post(apiUrl, params).then(() => {\r\n      message.success(successMsg);\r\n      callback();\r\n    });\r\n  };\r\n\r\n  const [title, setTitle] = React.useState(\"\");\r\n\r\n  const [modalFormRef, formInstance, contextHolder] = ModalForm.useModal({\r\n    title,\r\n    width: 600,\r\n    afterClose: () => {\r\n      setId(\"\");\r\n      formInstance?.resetFields();\r\n    },\r\n    onFinish: onSubmit,\r\n    children: (\r\n      <>\r\n        <Form.Item name=\"account\" label=\"账号\" rules={[{ required: true }]}>\r\n          <Input placeholder=\"请输入\" allowClear />\r\n        </Form.Item>\r\n        {!id && (\r\n          <Form.Item name=\"password\" label=\"密码\" rules={[{ required: true }]}>\r\n            <Input.Password placeholder=\"请输入\" allowClear />\r\n          </Form.Item>\r\n        )}\r\n        <Form.Item name=\"deptId\" label=\"部门\" rules={[{ required: true }]}>\r\n          <TreeSelect treeData={depeOptions} placeholder=\"请选择\" allowClear />\r\n        </Form.Item>\r\n        <Form.Item name=\"role\" label=\"角色\" rules={[{ required: true }]}>\r\n          <RoleSelect mode=\"multiple\" allowClear maxTagCount={3} />\r\n        </Form.Item>\r\n      </>\r\n    ),\r\n  });\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    addStart: () => {\r\n      setTitle(`新增用户`);\r\n      modalFormRef.current?.open();\r\n    },\r\n    editStart: (row) => {\r\n      setTitle(`更新【${row.name}】的信息`);\r\n      setId(row.id);\r\n      const initialValues = {\r\n        account: row.account,\r\n        deptId: row.deptId,\r\n        role: row.role?.map((item) => item.id),\r\n      };\r\n      formInstance?.setFieldsValue(initialValues);\r\n      modalFormRef.current?.open();\r\n    },\r\n  }));\r\n\r\n  return contextHolder;\r\n});\r\n\r\n// 可以稍微减少使用时的代码量\r\nconst useModal: (props: Props) => [React.RefObject<Ref>, React.ReactElement] =\r\n  function (props) {\r\n    const ref = React.useRef<Ref>(null);\r\n\r\n    return [ref, <AddOrEdit ref={ref} {...props} />];\r\n  };\r\n\r\nexport default createCompoundedComponent(AddOrEdit, { useModal });\r\n","import { useRef } from \"react\";\r\nimport { Button, App, Space, Tag, Avatar, theme } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProTable from \"@/components/ProTable\";\r\nimport { PlusOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { gender as genderDict, accountEnabledState } from \"@/utils/dict\";\r\nimport { useGetDeptSelectQuery } from \"@/store/api-slice/dept\";\r\nimport { useFilterElementPermission } from \"@/components/PermissionControl\";\r\nimport {\r\n  getAccountList,\r\n  updateAccountStatusById,\r\n  removeAccount,\r\n} from \"@/api/system/account\";\r\nimport OptimisticSwitch from \"@/components/OptimisticSwitch\";\r\nimport AddOrEdit from \"./AddOrEdit\";\r\n\r\nimport type { ProTableProps, Ref } from \"@/components/ProTable\";\r\nimport type { Account } from \"@/api/system/account\";\r\n\r\nexport default function Page() {\r\n  const { modal, message } = App.useApp();\r\n\r\n  const tableRef = useRef<Ref>(null);\r\n\r\n  const { data: depeOptions } = useGetDeptSelectQuery();\r\n  const navigate = useNavigate();\r\n\r\n  const [addOrEditRef, addOrEditContext] = AddOrEdit.useModal({\r\n    callback: (pageIndex) => tableRef.current?.refresh(pageIndex),\r\n  });\r\n\r\n  const {\r\n    token: { colorTextDescription },\r\n  } = theme.useToken();\r\n\r\n  // 表格的操作栏\r\n  const [actionRender, isShowAction] = useFilterElementPermission(\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => navigate(\"/permis/account/detail\")}\r\n        >\r\n          详情\r\n        </Button>\r\n      ),\r\n      permission: \"details\",\r\n    },\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          ghost\r\n          size=\"small\"\r\n          onClick={() => addOrEditRef.current?.editStart(row)}\r\n        >\r\n          编辑\r\n        </Button>\r\n      ),\r\n      permission: \"edit\",\r\n    },\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          danger\r\n          size=\"small\"\r\n          onClick={() =>\r\n            modal.confirm({\r\n              title: \"提示\",\r\n              content: \"确定要删除此用户吗？\",\r\n              okType: \"danger\",\r\n              onOk: () =>\r\n                removeAccount(row.id).then(() => {\r\n                  message.success(\"删除成功！\");\r\n                  tableRef.current?.refresh();\r\n                }),\r\n              centered: true,\r\n            })\r\n          }\r\n        >\r\n          删除\r\n        </Button>\r\n      ),\r\n      permission: \"del\",\r\n    }\r\n  );\r\n\r\n  // 表格的批量操作栏\r\n  const [batchRender, isShowBatch] = useFilterElementPermission(\r\n    {\r\n      render: () => (\r\n        <Button\r\n          type=\"primary\"\r\n          danger\r\n          onClick={() => message.warning(\"演示功能\")}\r\n        >\r\n          批量删除\r\n        </Button>\r\n      ),\r\n      permission: \"del\",\r\n    },\r\n    {\r\n      render: () => (\r\n        <Button onClick={() => message.warning(\"演示功能\")}>导出数据</Button>\r\n      ),\r\n      permission: \"export\",\r\n    }\r\n  );\r\n\r\n  // 表格工具栏\r\n  const [toolRender] = useFilterElementPermission(\r\n    {\r\n      render: () => (\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => addOrEditRef.current?.addStart()}\r\n        >\r\n          新增\r\n        </Button>\r\n      ),\r\n      permission: \"add\",\r\n    },\r\n    {\r\n      render: () => (\r\n        <Button onClick={() => message.warning(\"演示功能\")}>导出</Button>\r\n      ),\r\n      permission: \"export\",\r\n    }\r\n  );\r\n\r\n  const columns: ProTableProps[\"columns\"] = [\r\n    {\r\n      title: \"真实姓名\",\r\n      dataIndex: \"name\",\r\n      hideInTable: true,\r\n    },\r\n    {\r\n      title: \"用户信息\",\r\n      key: \"userinfo\",\r\n      render(_, row) {\r\n        return (\r\n          <div style={{ display: \"flex\", flex: 1, alignItems: \"flex-start\" }}>\r\n            <Avatar\r\n              size={40}\r\n              src={row.avatar}\r\n              icon={<UserOutlined />}\r\n              style={{ marginRight: 16 }}\r\n            />\r\n            <div>\r\n              <h4 style={{ margin: 0, fontWeight: 700 }}>{row.name}</h4>\r\n              <div style={{ color: colorTextDescription }}>\r\n                {row.description}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"account\",\r\n    },\r\n    {\r\n      title: \"性别\",\r\n      dataIndex: \"gender\",\r\n      render: (gender) => {\r\n        const map = genderDict.map[gender];\r\n        const tag = {\r\n          color: map?.color || \"rgba(0,0,0,.25)\",\r\n          label: map?.label || \"未知\",\r\n        };\r\n        return <Tag color={tag.color}>{tag.label}</Tag>;\r\n      },\r\n      type: \"select\",\r\n      options: genderDict.options,\r\n    },\r\n    // {\r\n    //   title: \"手机号\",\r\n    //   dataIndex: \"phone\",\r\n    //   hideInTable: true,\r\n    // },\r\n    // {\r\n    //   title: \"邮箱\",\r\n    //   dataIndex: \"email\",\r\n    //   hideInTable: true,\r\n    // },\r\n    {\r\n      title: \"部门\",\r\n      dataIndex: \"deptId\",\r\n      type: \"treeSelect\",\r\n      options: depeOptions,\r\n      render: (_, row) => row.deptName,\r\n    },\r\n    {\r\n      title: \"角色\",\r\n      dataIndex: \"role\",\r\n      render: (role: Account[\"role\"]) => {\r\n        return role?.map((item) => (\r\n          <Tag key={item.id} color=\"green\">\r\n            {item.name}\r\n          </Tag>\r\n        ));\r\n      },\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (status, row) => {\r\n        const { enabled, disabled } = accountEnabledState.enum;\r\n        return (\r\n          <OptimisticSwitch\r\n            defaultChecked={status === enabled}\r\n            onChange={(val) =>\r\n              updateAccountStatusById(\r\n                row.id,\r\n                val\r\n                  ? (enabled as Account[\"status\"])\r\n                  : (disabled as Account[\"status\"])\r\n              ).then(() => {\r\n                // 如果觉得需要，也可以在此刷新表格\r\n                message.success(\"切换成功！\");\r\n              })\r\n            }\r\n          />\r\n        );\r\n      },\r\n      type: \"select\",\r\n      options: accountEnabledState.options,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (row) => <Space>{actionRender(row)}</Space>,\r\n      width: 100,\r\n      fixed: \"right\",\r\n      hideInSearch: true,\r\n      hideInTable: !isShowAction,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ProTable\r\n        ref={tableRef}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n        headerTitle=\"用户列表\"\r\n        request={(params, { current, pageSize }) => {\r\n          return getAccountList(params, current, pageSize).then((value) => {\r\n            const { result: data } = value;\r\n            return {\r\n              list: data.records,\r\n              total: data.total,\r\n            };\r\n          });\r\n        }}\r\n        toolBarRender={toolRender()}\r\n        batchBarRender={isShowBatch ? batchRender() : undefined}\r\n      />\r\n      {addOrEditContext}\r\n    </>\r\n  );\r\n}\r\n","import apiSlice from \"./index\";\r\nimport type { Dept, DeptSelectItem } from \"@/api/system/dept\";\r\n\r\nconst apiWithTag = apiSlice.enhanceEndpoints({\r\n  addTagTypes: [\"deptList\", \"deptSelect\"],\r\n});\r\n\r\nconst deleteDeptByid = (deptTreeList: Dept[] = [], id: string): Dept[] => {\r\n  return deptTreeList\r\n    .filter((dept) => dept.id !== id)\r\n    .map(({ children = [], ...rest }) => ({\r\n      ...rest,\r\n      children: children.length ? deleteDeptByid(children, id) : undefined,\r\n    }));\r\n};\r\n\r\nexport const deptSlice = apiWithTag.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // 获取所有部门\r\n    getDeptAll: builder.query<Dept[], void>({\r\n      query: () => \"/api/dept/all\",\r\n      providesTags: [\"deptList\"],\r\n    }),\r\n    // 获取部门选择器\r\n    getDeptSelect: builder.query<DeptSelectItem[], void>({\r\n      query: () => \"/api/dept/select\",\r\n      providesTags: [\"deptSelect\"],\r\n    }),\r\n    // 新增单个部门\r\n    addDeptItem: builder.mutation<any, Omit<Dept, \"id\">>({\r\n      query: (body) => ({\r\n        url: \"/api/dept/add\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"deptList\", \"deptSelect\"],\r\n    }),\r\n    // 更新单个部门\r\n    updateDeptItem: builder.mutation<any, Dept>({\r\n      query: (body) => ({\r\n        url: \"/api/dept/update\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"deptList\", \"deptSelect\"],\r\n    }),\r\n    // 删除单个部门\r\n    deleteDeptItem: builder.mutation<any, Pick<Dept, \"id\">>({\r\n      query: (body) => ({\r\n        url: \"/api/dept/delete\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"deptList\", \"deptSelect\"],\r\n      async onQueryStarted({ id }, { dispatch, queryFulfilled }) {\r\n        // 乐观更新\r\n        const patchResult = dispatch(\r\n          deptSlice.util.updateQueryData(\r\n            \"getDeptAll\",\r\n            undefined,\r\n            (deptTreeData) => deleteDeptByid(deptTreeData, id)\r\n          )\r\n        );\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n        }\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetDeptAllQuery,\r\n  useGetDeptSelectQuery,\r\n  useAddDeptItemMutation,\r\n  useUpdateDeptItemMutation,\r\n  useDeleteDeptItemMutation,\r\n} = deptSlice;\r\n"],"names":["getRoleList","params","pageIndex","pageSize","axios","updateRoleStatusById","id","status","removeRole","authRole","getRoleSelect","ModalForm","forwardRef","props","ref","title","width","submitText","cancelText","children","modalProps","formProps","onFinish","footer","initialValues","afterClose","open","set","setOpen","useBoolean","loading","setLoading","useLoadingDelayAndKeep","useImperativeHandle","close","_jsx","Modal","onCancel","_jsxs","Space","Button","onClick","type","form","submit","centered","wrapClassName","maskClosable","Form","autoComplete","values","fnResult","Promise","setTrue","then","finally","setFalse","layout","createCompoundedComponent","useModal","useRef","OptimisticSwitch","defaultChecked","onChange","checked","Switch","val","catch","mainComponent","subComponents","Component","Object","keys","forEach","key","defineProperty","value","writable","enumerable","getAccountList","updateAccountStatusById","removeAccount","RoleSelect","data","useRequest","response","result","Select","options","placeholder","filterOption","inputValue","option","label","toLowerCase","includes","AddOrEdit","React","message","App","setId","depeOptions","useGetDeptSelectQuery","setTitle","modalFormRef","formInstance","contextHolder","resetFields","apiUrl","successMsg","success","callback","undefined","_Fragment","name","rules","required","Input","allowClear","TreeSelect","treeData","mode","maxTagCount","addStart","current","editStart","row","account","deptId","role","map","item","setFieldsValue","Page","modal","tableRef","navigate","useNavigate","addOrEditRef","addOrEditContext","refresh","token","colorTextDescription","theme","actionRender","isShowAction","useFilterElementPermission","render","size","permission","ghost","danger","confirm","content","okType","onOk","batchRender","isShowBatch","warning","toolRender","icon","PlusOutlined","columns","dataIndex","hideInTable","_","style","display","flex","alignItems","Avatar","src","avatar","UserOutlined","marginRight","margin","fontWeight","color","description","hideInSearch","gender","genderDict","tag","Tag","deptName","enabled","disabled","accountEnabledState","fixed","ProTable","rowKey","headerTitle","request","list","records","total","toolBarRender","batchBarRender","apiWithTag","apiSlice","addTagTypes","deleteDeptByid","deptTreeList","filter","dept","rest","length","deptSlice","injectEndpoints","endpoints","builder","getDeptAll","query","providesTags","getDeptSelect","addDeptItem","mutation","body","url","method","invalidatesTags","updateDeptItem","deleteDeptItem","async","dispatch","queryFulfilled","patchResult","util","updateQueryData","deptTreeData","undo","useGetDeptAllQuery","useAddDeptItemMutation","useUpdateDeptItemMutation","useDeleteDeptItemMutation"],"sourceRoot":""}