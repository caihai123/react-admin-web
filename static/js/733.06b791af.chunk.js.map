{"version":3,"file":"static/js/733.06b791af.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/components/DictSelect.jsx","webpack://react-admin-web/./src/utils/rules.js","webpack://react-admin-web/./src/pages/permis/menu/add.jsx","webpack://react-admin-web/./node_modules/antd/es/col/index.js","webpack://react-admin-web/./node_modules/antd/es/divider/style/index.js","webpack://react-admin-web/./node_modules/antd/es/divider/index.js","webpack://react-admin-web/./node_modules/antd/es/row/index.js"],"sourcesContent":["import { Select, Badge } from \"antd\";\r\nimport dict from \"@/utils/dict\";\r\n\r\nconst DictSelect = function (props) {\r\n  const { dictName, placeholder = \"请选择\", ...rest } = props;\r\n\r\n  const { options } = dict[dictName];\r\n\r\n  return (\r\n    <Select {...rest} placeholder={placeholder}>\r\n      {options.map((item) => (\r\n        <Select.Option key={item.value} value={item.value}>\r\n          {item.color ? (\r\n            <Badge color={item.color} text={item.label} />\r\n          ) : (\r\n            item.label\r\n          )}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\nexport default DictSelect;\r\n","export const path = {\r\n  pattern: /^\\/[\\w-/]*$/,\r\n  message: \"必须以斜杠开头，后跟字母、数字、下划线、中划线或斜杠\",\r\n};\r\n\r\nexport const chinese = {\r\n  // 正则来源：https://any86.github.io/any-rule/\r\n  pattern:\r\n    /^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/,\r\n  message: \"只能是中文/汉字\",\r\n};\r\n\r\nexport const id = {\r\n  pattern: /^[a-z][a-z0-9-]*$/,\r\n  message: \"只能是小写字母、中划线和数字组成，且必须以字母开头\",\r\n};\r\n","import { useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  App,\r\n  Card,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  TreeSelect,\r\n  Input,\r\n  Space,\r\n  Button,\r\n  Divider,\r\n} from \"antd\";\r\nimport axios from \"@/utils/axios\";\r\nimport { CloseOutlined, ExclamationCircleFilled } from \"@ant-design/icons\";\r\nimport { useMount, useRequest } from \"ahooks\";\r\nimport DictSelect from \"@/components/DictSelect\";\r\nimport { menuType } from \"@/utils/dict\";\r\nimport { path as pathRule, id as idRule } from \"@/utils/rules\";\r\n\r\nexport default function AddMenu() {\r\n  const { modal } = App.useApp();\r\n  const navigate = useNavigate();\r\n\r\n  const { data: menuTreeAll } = useRequest(() =>\r\n    axios.get(\"/api/get-menu-all\").then((value) => {\r\n      const { result: data } = value;\r\n      return data;\r\n    })\r\n  );\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const setParentId = () =>\r\n    form.setFieldValue(\"parentId\", searchParams.get(\"parentId\"));\r\n  useMount(setParentId);\r\n\r\n  const typeValue = Form.useWatch(\"type\", form);\r\n\r\n  const submitAxios = useRequest(\r\n    (values) => axios.post(\"/api/menu/add\", values),\r\n    {\r\n      manual: true,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <h1>新增菜单 ✨</h1>\r\n      <Divider></Divider>\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        initialValues={{ type: menuType.enum.menu }}\r\n        onFinish={(values) =>\r\n          submitAxios.runAsync(values).then(() => {\r\n            modal.confirm({\r\n              title: \"提示\",\r\n              icon: <ExclamationCircleFilled />,\r\n              content: \"菜单新增成功！\",\r\n              okText: \"返回列表页\",\r\n              onOk: () => navigate(\"/permis/menu\"),\r\n              cancelText: \"继续新增\",\r\n              onCancel: () => {\r\n                form.resetFields();\r\n                setParentId();\r\n              },\r\n              centered: true,\r\n            });\r\n          })\r\n        }\r\n        autoComplete=\"off\"\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={24}>\r\n            <Form.Item label=\"父节点\" name=\"parentId\" required>\r\n              <TreeSelect\r\n                treeData={menuTreeAll}\r\n                fieldNames={{ label: \"title\", value: \"id\" }}\r\n                placeholder=\"根节点\"\r\n                disabled\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xxl={6} lg={12} span={24}>\r\n            <Form.Item\r\n              label=\"名称\"\r\n              name=\"title\"\r\n              rules={[\r\n                { required: true },\r\n                {\r\n                  type: \"string\",\r\n                  min: 2,\r\n                  max: 10,\r\n                  message: \"长度在 2 到 10 个字符！\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"菜单名称\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xxl={6} lg={12} span={24}>\r\n            <Form.Item label=\"类型\" name=\"type\" rules={[{ required: true }]}>\r\n              <DictSelect placeholder=\"菜单类型\" dictName=\"menuType\" />\r\n            </Form.Item>\r\n          </Col>\r\n          {typeValue === menuType.enum.menu && (\r\n            <Col xxl={6} lg={12} span={24}>\r\n              <Form.Item\r\n                label=\"路径\"\r\n                name=\"path\"\r\n                rules={[{ required: true }, pathRule]}\r\n              >\r\n                <Input placeholder=\"菜单路径\" />\r\n              </Form.Item>\r\n            </Col>\r\n          )}\r\n          <Col xxl={6} lg={12} span={24}>\r\n            <Form.Item label=\"图标\" name=\"icon\">\r\n              <Input placeholder=\"图标名称\" />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={16}>\r\n          {typeValue === menuType.enum.menu && (\r\n            <Col xxl={6} lg={12} span={24}>\r\n              <Form.Item label=\"按钮\">\r\n                <Form.List name=\"buttonList\">\r\n                  {(buttonList, subOpt) => (\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                      }}\r\n                    >\r\n                      {buttonList.map(({ key, name }) => (\r\n                        <Space key={key} align=\"baseline\">\r\n                          <Form.Item\r\n                            name={[name, \"name\"]}\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"按钮名称是必选字段\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input placeholder=\"按钮名称\" />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name={[name, \"id\"]}\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"按钮标识是必选字段\",\r\n                              },\r\n                              idRule,\r\n                            ]}\r\n                          >\r\n                            <Input placeholder=\"按钮标识\" />\r\n                          </Form.Item>\r\n                          <CloseOutlined onClick={() => subOpt.remove(name)} />\r\n                        </Space>\r\n                      ))}\r\n                      <Button type=\"dashed\" onClick={() => subOpt.add()} block>\r\n                        + 新增按钮\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Form.List>\r\n              </Form.Item>\r\n            </Col>\r\n          )}\r\n          <Col span={24}>\r\n            <Form.Item>\r\n              <Space>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  loading={submitAxios.loading}\r\n                >\r\n                  新增\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    form.resetFields();\r\n                    setParentId();\r\n                  }}\r\n                >\r\n                  重置\r\n                </Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Card>\r\n  );\r\n}\r\n","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${unit(lineWidth)} solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${unit(lineWidth)} solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        // Fix https://github.com/ant-design/ant-design/issues/10914\n        margin: `${unit(token.dividerHorizontalGutterMargin)} 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${unit(token.dividerHorizontalWithTextGutterMargin)} 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${unit(lineWidth)} solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: `calc(${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(${orientationMargin} * 100%)`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${unit(lineWidth)} 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, prepareComponentToken, {\n  unitless: {\n    orientationMargin: true\n  }\n});","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst Divider = props => {\n  const {\n    getPrefixCls,\n    direction,\n    divider\n  } = React.useContext(ConfigContext);\n  const {\n      prefixCls: customizePrefixCls,\n      type = 'horizontal',\n      orientation = 'center',\n      orientationMargin,\n      className,\n      rootClassName,\n      children,\n      dashed,\n      plain,\n      style\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"rootClassName\", \"children\", \"dashed\", \"plain\", \"style\"]);\n  const prefixCls = getPrefixCls('divider', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n  const hasChildren = !!children;\n  const hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  const hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  const classString = classNames(prefixCls, divider === null || divider === void 0 ? void 0 : divider.className, hashId, cssVarCls, `${prefixCls}-${type}`, {\n    [`${prefixCls}-with-text`]: hasChildren,\n    [`${prefixCls}-with-text${orientationPrefix}`]: hasChildren,\n    [`${prefixCls}-dashed`]: !!dashed,\n    [`${prefixCls}-plain`]: !!plain,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-no-default-orientation-margin-left`]: hasCustomMarginLeft,\n    [`${prefixCls}-no-default-orientation-margin-right`]: hasCustomMarginRight\n  }, className, rootClassName);\n  const memoizedOrientationMargin = React.useMemo(() => {\n    if (typeof orientationMargin === 'number') {\n      return orientationMargin;\n    }\n    if (/^\\d+$/.test(orientationMargin)) {\n      return Number(orientationMargin);\n    }\n    return orientationMargin;\n  }, [orientationMargin]);\n  const innerStyle = Object.assign(Object.assign({}, hasCustomMarginLeft && {\n    marginLeft: memoizedOrientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: memoizedOrientationMargin\n  });\n  // Warning children not work in vertical mode\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Divider');\n    process.env.NODE_ENV !== \"production\" ? warning(!children || type !== 'vertical', 'usage', '`children` not working in `vertical` mode.') : void 0;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: Object.assign(Object.assign({}, divider === null || divider === void 0 ? void 0 : divider.style), style)\n  }, restProps, {\n    role: \"separator\"\n  }), children && type !== 'vertical' && ( /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-inner-text`,\n    style: innerStyle\n  }, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Divider.displayName = 'Divider';\n}\nexport default Divider;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["props","dictName","placeholder","rest","options","dict","_jsx","Select","children","map","item","value","color","Badge","text","label","path","pattern","message","id","AddMenu","modal","App","navigate","useNavigate","data","menuTreeAll","useRequest","axios","then","result","form","Form","searchParams","useSearchParams","setParentId","setFieldValue","get","useMount","typeValue","submitAxios","values","manual","_jsxs","Card","Divider","layout","initialValues","type","menuType","onFinish","runAsync","confirm","title","icon","ExclamationCircleFilled","content","okText","onOk","cancelText","onCancel","resetFields","centered","autoComplete","Row","gutter","Col","span","name","required","TreeSelect","treeData","fieldNames","disabled","xxl","lg","rules","min","max","Input","DictSelect","pathRule","buttonList","subOpt","style","display","flexDirection","key","Space","align","idRule","CloseOutlined","onClick","remove","Button","add","block","htmlType","loading","genSharedDividerStyle","token","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","textPaddingInline","orientationMargin","verticalMarginInline","Object","assign","borderBlockStart","position","top","height","marginInline","marginBlock","verticalAlign","borderTop","borderInlineStart","clear","width","minWidth","margin","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","paddingBlock","paddingInline","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","dividerToken","marginLG","marginXS","unitless","getPrefixCls","direction","divider","prefixCls","customizePrefixCls","orientation","className","rootClassName","dashed","plain","restProps","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","wrapCSSVar","hashId","cssVarCls","orientationPrefix","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","memoizedOrientationMargin","test","Number","innerStyle","marginLeft","marginRight","role"],"sourceRoot":""}