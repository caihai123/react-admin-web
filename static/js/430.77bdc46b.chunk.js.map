{"version":3,"file":"static/js/430.77bdc46b.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/components/DropdownFrom/index.jsx","webpack://react-admin-web/./src/components/ProTable/style.module.css?1592","webpack://react-admin-web/./src/components/ProTable/ColumnSetting.jsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Input.jsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Select.jsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Checkbox.jsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Radio.jsx","webpack://react-admin-web/./src/components/ProTable/FormItem/Date.jsx","webpack://react-admin-web/./src/components/ProTable/FormItem/DateRange.jsx","webpack://react-admin-web/./src/components/ProTable/FormItem/TreeSelect.jsx","webpack://react-admin-web/./src/components/ProTable/FormItem/index.jsx","webpack://react-admin-web/./src/components/ProTable/index.jsx","webpack://react-admin-web/./src/hooks/useLoadingDelayAndKeep.js"],"sourcesContent":["import { forwardRef, useImperativeHandle } from \"react\";\r\nimport { Card, Form, Button, Space } from \"antd\";\r\nimport { CaretUpOutlined, CaretDownOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport { useBoolean } from \"ahooks\";\r\n\r\nconst toolsWidth = \"188px\";\r\n\r\nconst DropdownBox = styled(Form)`\r\n  position: relative;\r\n  overflow-y: hidden;\r\n  padding-top: 16px;\r\n  &:after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    width: ${toolsWidth};\r\n    height: 32px;\r\n    vertical-align: top;\r\n    margin-bottom: 16px;\r\n  }\r\n  & .ant-form-item {\r\n    margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst ToolsItem = styled(Form.Item)`\r\n  position: absolute;\r\n  right: -16px;\r\n  bottom: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst DropdownForm = forwardRef(function (props, ref) {\r\n  const [form] = Form.useForm();\r\n  const [visible, { setTrue, setFalse }] = useBoolean(false);\r\n\r\n  const { children, style, className, ...rest } = props;\r\n\r\n  const reset = function () {\r\n    form.resetFields();\r\n    form.submit();\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    submit: form.submit,\r\n    reset,\r\n  }));\r\n\r\n  return (\r\n    <Card\r\n      bodyStyle={{ paddingTop: 0, paddingBottom: 0 }}\r\n      style={style}\r\n      className={className}\r\n    >\r\n      <DropdownBox\r\n        layout=\"inline\"\r\n        style={{\r\n          height: visible ? \"auto\" : \"64px\",\r\n          paddingRight: visible ? \"0\" : toolsWidth,\r\n        }}\r\n        form={form}\r\n        {...rest}\r\n      >\r\n        {children}\r\n        <ToolsItem>\r\n          <Space>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              查询\r\n            </Button>\r\n            <Button onClick={() => reset()}>重置</Button>\r\n            {visible ? (\r\n              <Button\r\n                type=\"link\"\r\n                style={{ padding: 0 }}\r\n                onClick={() => setFalse()}\r\n              >\r\n                收起\r\n                <CaretUpOutlined style={{ marginInlineStart: 0 }} />\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                type=\"link\"\r\n                style={{ padding: 0 }}\r\n                onClick={() => setTrue()}\r\n              >\r\n                展开\r\n                <CaretDownOutlined style={{ marginInlineStart: 0 }} />\r\n              </Button>\r\n            )}\r\n          </Space>\r\n        </ToolsItem>\r\n      </DropdownBox>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DropdownForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tools-bar\":\"ghwuoi3NE3Ry7s7fNzAi\",\"header-title\":\"mtRVkLbROTli4p1ohQ5i\",\"tool-right\":\"gpJXWmO55r2tH9Z_hXa6\",\"toolbar-setting\":\"whG6r6ufswl2doZWNUEI\",\"toolbar-setting-item\":\"te8gfQS8fuVGrAEe5Wko\",\"batch-bar\":\"dDNrcy2mCFFeBtzOHKWq\"};","import { useState } from \"react\";\r\nimport { Popover, Checkbox, Divider, Button } from \"antd\";\r\n\r\nconst ColumnSetting = function (props) {\r\n  const { children, value, onChange, options } = props;\r\n\r\n  const plainOptions = options.map((item) => item.value);\r\n\r\n  const [indeterminate, setIndeterminate] = useState(false);\r\n  const [checkAll, setCheckAll] = useState(true);\r\n\r\n  const onCheckAllChange = (e) => {\r\n    onChange(e.target.checked ? plainOptions : []);\r\n    setIndeterminate(false);\r\n    setCheckAll(e.target.checked);\r\n  };\r\n\r\n  const onCheckChange = (list) => {\r\n    onChange(list);\r\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\r\n    setCheckAll(list.length === plainOptions.length);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      arrow={false}\r\n      content={\r\n        <div style={{ minWidth: 176 }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Checkbox\r\n              indeterminate={indeterminate}\r\n              onChange={onCheckAllChange}\r\n              checked={checkAll}\r\n            >\r\n              列展示\r\n            </Checkbox>\r\n            <Button\r\n              type=\"link\"\r\n              style={{ height: 22, lineHeight: 1, padding: 0 }}\r\n              onClick={() => onCheckChange(plainOptions)}\r\n            >\r\n              重置\r\n            </Button>\r\n          </div>\r\n          <Divider style={{ margin: \"4px 0\" }} />\r\n          <Checkbox.Group\r\n            value={value}\r\n            onChange={(keys) => onCheckChange(keys)}\r\n            style={{ display: \"block\" }}\r\n          >\r\n            {options.map((item) => (\r\n              <Checkbox\r\n                style={{ display: \"flex\", margin: 0 }}\r\n                value={item.value}\r\n                key={item.value}\r\n              >\r\n                {item.label}\r\n              </Checkbox>\r\n            ))}\r\n          </Checkbox.Group>\r\n        </div>\r\n      }\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n    >\r\n      {children}\r\n    </Popover>\r\n  );\r\n};\r\nexport default ColumnSetting;\r\n","import { Input as AInput, Form } from \"antd\";\r\n\r\nexport default function Input({ item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <AInput placeholder={`请输入${item.title}`} {...item.fieldProps} />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { Select as ASelect, Form } from \"antd\";\r\n\r\nexport default function Select({ item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ASelect\r\n        placeholder={`请选择${item.title}`}\r\n        options={item.options}\r\n        style={{ width: 183 }}\r\n        allowClear\r\n        {...item.fieldProps}\r\n      />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { Checkbox as ACheckbox, Form } from \"antd\";\r\n\r\nexport default function Checkbox({ item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ACheckbox.Group\r\n        options={item.options}\r\n        {...item.fieldProps}\r\n      ></ACheckbox.Group>\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { Radio as ARadio, Form } from \"antd\";\r\n\r\nexport default function Radio({ item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ARadio.Group options={item.options} {...item.fieldProps}></ARadio.Group>\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { DatePicker, Form } from \"antd\";\r\n\r\nexport default function Date({ item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <DatePicker {...item.fieldProps} />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { DatePicker, Form } from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function Date({ item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <RangePicker style={{ width: 250 }} {...item.fieldProps} />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import { TreeSelect as ATreeSelect, Form } from \"antd\";\r\n\r\nexport default function TreeSelect({ item }) {\r\n  return (\r\n    <Form.Item label={item.title} name={item.dataIndex} {...item.formItemProps}>\r\n      <ATreeSelect\r\n        placeholder={`请选择${item.title}`}\r\n        treeData={item.options}\r\n        style={{ width: 183 }}\r\n        allowClear\r\n        {...item.fieldProps}\r\n      />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import Input from \"./Input\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport Radio from \"./Radio\";\r\nimport Date from \"./Date\";\r\nimport DateRange from \"./DateRange\";\r\nimport TreeSelect from \"./TreeSelect\";\r\n\r\nexport default function FormItem({ item }) {\r\n  if (item.renderFormItem) {\r\n    return item.renderFormItem();\r\n  } else {\r\n    switch (item.type) {\r\n      case \"select\":\r\n        return <Select item={item} />;\r\n      case \"checkbox\":\r\n        return <Checkbox item={item} />;\r\n      case \"radio\":\r\n        return <Radio item={item} />;\r\n      case \"date\":\r\n        return <Date item={item} />;\r\n      case \"dateRange\":\r\n        return <DateRange item={item} />;\r\n      case \"treeSelect\":\r\n        return <TreeSelect item={item} />;\r\n      default:\r\n        return <Input item={item} />;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useMemo,\r\n  useEffect,\r\n} from \"react\";\r\nimport DropdownFrom from \"@/components/DropdownFrom\";\r\nimport { Table, Space, Button, theme, Card, Tooltip, Dropdown } from \"antd\";\r\nimport styles from \"./style.module.css\";\r\nimport { usePagination } from \"ahooks\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ReloadOutlined,\r\n  ColumnHeightOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport ColumnSetting from \"./ColumnSetting\";\r\nimport FormItem from \"./FormItem\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\n\r\nconst getRowkey = function (row) {\r\n  return row.key || row.dataIndex;\r\n};\r\n\r\nconst initialTableSize = \"large\"; // 表格尺寸默认值\r\n\r\nconst ProTable = forwardRef(function (props, ref) {\r\n  const {\r\n    // Table 的数据，protable 推荐使用 request 来加载\r\n    dataSource,\r\n\r\n    // 表格列配置\r\n    columns = [],\r\n\r\n    // 是否显示搜索表单\r\n    search = true,\r\n\r\n    // 工具栏渲染函数\r\n    toolBarRender = null,\r\n\r\n    // 列表标题区渲染函数\r\n    headerTitle,\r\n\r\n    // 批量操作功能的渲染函数，不为空时会自动配置checkbox\r\n    batchBarRender = null,\r\n\r\n    // 表格的rowSelection配置项，优先级最高，可能会覆盖掉默认配置\r\n    tableRowSelection = {},\r\n\r\n    // 分页配置项，为对象时可能会覆盖掉默认值\r\n    pagination: paginationConfig = true,\r\n\r\n    // 自定义表格loading\r\n    loading,\r\n\r\n    // 处理刷新表格刷新\r\n    onRefresh,\r\n\r\n    // 提交表单时触发\r\n    onSubmit,\r\n\r\n    // 重置表单时触发\r\n    onReset,\r\n  } = props;\r\n\r\n  // 表单的默认值\r\n  const initialValues = useMemo(\r\n    () =>\r\n      Object.fromEntries(\r\n        columns\r\n          .filter((item) => typeof item.initialValue !== \"undefined\")\r\n          .map(({ dataIndex, initialValue }) => [dataIndex, initialValue])\r\n      ),\r\n    [columns]\r\n  );\r\n\r\n  // 搜索表单项\r\n  const formItems = useMemo(() => {\r\n    return columns\r\n      .filter((item) => item.hideInSearch !== true)\r\n      .map((item) => <FormItem item={item} key={getRowkey(item)} />);\r\n  }, [columns]);\r\n\r\n  // 表格上使用的columns\r\n  const tableColumns = useMemo(\r\n    () => columns.filter((item) => item.hideInTable !== true),\r\n    [columns]\r\n  );\r\n\r\n  // 表格设置栏\r\n  const [configkeys, setConfigkeys] = useState(\r\n    tableColumns.map((item) => getRowkey(item))\r\n  );\r\n\r\n  // 查询表单参数缓存\r\n  const [params, setParams] = useState(initialValues);\r\n\r\n  // 查询表单实例\r\n  const searchFrom = useRef(null);\r\n\r\n  // request加载数据对象\r\n  const requestData = usePagination(\r\n    ({ current, pageSize }) =>\r\n      !Array.isArray(dataSource) &&\r\n      props.request?.(params, { current, pageSize }),\r\n    {\r\n      refreshDeps: [params],\r\n      defaultCurrent: paginationConfig?.current || 1,\r\n      defaultPageSize: paginationConfig?.pageSize || 10,\r\n      loadingDelay: 0,\r\n    }\r\n  );\r\n\r\n  // 表格的可变配置项\r\n  const tableConfig = useMemo(() => {\r\n    const isDataSource = Array.isArray(dataSource);\r\n    const paginationBaseConfig = {\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: (total, range) => `第 ${range.join(\"-\")} 条/共 ${total} 条`,\r\n      style: { marginBottom: -8 },\r\n      ...paginationConfig,\r\n    };\r\n    const { data, pagination, refresh } = requestData;\r\n    return {\r\n      list: isDataSource ? dataSource : data?.list,\r\n      // eslint-disable-next-line no-nested-ternary\r\n      pagination: paginationConfig\r\n        ? isDataSource\r\n          ? paginationBaseConfig\r\n          : {\r\n              current: pagination.current,\r\n              pageSize: pagination.pageSize,\r\n              total: pagination.total,\r\n              onChange: pagination.onChange,\r\n              ...paginationBaseConfig,\r\n            }\r\n        : false,\r\n      refresh: (pageIndex) => {\r\n        if (!isDataSource) {\r\n          pageIndex && pageIndex !== pagination.current\r\n            ? pagination.changeCurrent(pageIndex)\r\n            : refresh();\r\n        }\r\n        onRefresh?.(params);\r\n      },\r\n    };\r\n  }, [dataSource, requestData, paginationConfig, params, onRefresh]);\r\n\r\n  // loadingDelay 和 loadingKeep，具体可参考：useLoadingDelayAndKeep\r\n  const [tableLoading, { setTrue, setFalse }] = useLoadingDelayAndKeep(\r\n    typeof loading === \"boolean\" ? loading : false\r\n  );\r\n  useEffect(() => {\r\n    const isDataSource = Array.isArray(dataSource);\r\n    const tableLoading =\r\n      // eslint-disable-next-line no-nested-ternary\r\n      loading === \"boolean\"\r\n        ? loading\r\n        : isDataSource\r\n        ? false\r\n        : requestData.loading;\r\n    tableLoading ? setTrue() : setFalse();\r\n  }, [dataSource, loading, requestData.loading, setTrue, setFalse]);\r\n\r\n  // 表格size\r\n  const [tableSize, setTableSize] = useState(initialTableSize);\r\n\r\n  // 当前选中的keys\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n  // 暴露出去的函数\r\n  useImperativeHandle(ref, () => ({\r\n    refresh: tableConfig.refresh,\r\n\r\n    // 触发搜索表单的搜索事件\r\n    search: () => {\r\n      const submit = searchFrom?.current?.submit;\r\n      submit ? submit() : setParams(null);\r\n      onSubmit?.(params);\r\n    },\r\n\r\n    // 触发搜索表单的重置事件\r\n    reset: () => {\r\n      const reset = searchFrom?.current?.reset;\r\n      reset ? reset() : setParams(null);\r\n      onReset?.(params);\r\n    },\r\n\r\n    // 清空选中项\r\n    clearSelected: () => setSelectedRowKeys([]),\r\n  }));\r\n\r\n  const {\r\n    token: { borderRadius, controlItemBgActive, colorText },\r\n  } = theme.useToken();\r\n\r\n  return (\r\n    <>\r\n      {search && (\r\n        <DropdownFrom\r\n          ref={searchFrom}\r\n          onFinish={(values) => setParams(values)}\r\n          initialValues={initialValues}\r\n        >\r\n          {formItems}\r\n        </DropdownFrom>\r\n      )}\r\n\r\n      <Card\r\n        style={{ marginTop: search ? 16 : 0 }}\r\n        bodyStyle={{ paddingTop: 16, paddingBottom: 24 }}\r\n      >\r\n        {\r\n          <div\r\n            className={styles[\"tools-bar\"]}\r\n            style={{\r\n              display: selectedRowKeys.length > 0 ? \"none\" : \"\",\r\n              color: colorText,\r\n            }}\r\n          >\r\n            <div className={styles[\"header-title\"]}>\r\n              {typeof headerTitle === \"function\" ? headerTitle() : headerTitle}\r\n            </div>\r\n            <div className={styles[\"tool-right\"]}>\r\n              {toolBarRender && (\r\n                <Space>\r\n                  {typeof toolBarRender === \"function\"\r\n                    ? toolBarRender(params)\r\n                    : toolBarRender}\r\n                </Space>\r\n              )}\r\n              <div className={styles[\"toolbar-setting\"]}>\r\n                <div\r\n                  className={styles[\"toolbar-setting-item\"]}\r\n                  onClick={tableConfig.refresh}\r\n                >\r\n                  <Tooltip title=\"刷新\">\r\n                    <ReloadOutlined />\r\n                  </Tooltip>\r\n                </div>\r\n                <Dropdown\r\n                  overlayStyle={{ width: 80 }}\r\n                  menu={{\r\n                    items: [\r\n                      { key: \"large\", label: \"默认\" },\r\n                      { key: \"middle\", label: \"中等\" },\r\n                      { key: \"small\", label: \"紧凑\" },\r\n                    ],\r\n                    selectable: true,\r\n                    defaultSelectedKeys: [initialTableSize],\r\n                    onClick: ({ key }) => setTableSize(key),\r\n                  }}\r\n                  trigger={[\"click\"]}\r\n                >\r\n                  <div className={styles[\"toolbar-setting-item\"]}>\r\n                    <Tooltip title=\"密度\">\r\n                      <ColumnHeightOutlined />\r\n                    </Tooltip>\r\n                  </div>\r\n                </Dropdown>\r\n\r\n                <ColumnSetting\r\n                  value={configkeys}\r\n                  options={tableColumns.map((item) => ({\r\n                    label: item.title,\r\n                    value: getRowkey(item),\r\n                  }))}\r\n                  onChange={(keys) => setConfigkeys(keys)}\r\n                >\r\n                  <div className={styles[\"toolbar-setting-item\"]}>\r\n                    <Tooltip title=\"列设置\">\r\n                      <SettingOutlined />\r\n                    </Tooltip>\r\n                  </div>\r\n                </ColumnSetting>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {batchBarRender && (\r\n          <div\r\n            className={styles[\"batch-bar\"]}\r\n            style={{\r\n              display: selectedRowKeys.length > 0 ? \"\" : \"none\",\r\n              color: colorText,\r\n              backgroundColor: controlItemBgActive,\r\n              borderRadius,\r\n            }}\r\n          >\r\n            <div>\r\n              <span>已选 {selectedRowKeys.length} 项</span>\r\n              <Button type=\"link\" onClick={() => setSelectedRowKeys([])}>\r\n                取消选择\r\n              </Button>\r\n            </div>\r\n            <Space>\r\n              {typeof batchBarRender === \"function\"\r\n                ? batchBarRender(selectedRowKeys)\r\n                : batchBarRender}\r\n            </Space>\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles[\"main\"]}>\r\n          <Table\r\n            rowKey={props.rowKey}\r\n            dataSource={tableConfig.list}\r\n            columns={tableColumns.filter((item) => {\r\n              const key = getRowkey(item);\r\n              return configkeys.includes(key);\r\n            })}\r\n            pagination={tableConfig.pagination}\r\n            loading={tableLoading}\r\n            rowSelection={\r\n              batchBarRender\r\n                ? {\r\n                    type: \"checkbox\",\r\n                    selectedRowKeys,\r\n                    onChange: (keys) => setSelectedRowKeys(keys),\r\n                    preserveSelectedRowKeys: true,\r\n                    ...tableRowSelection,\r\n                  }\r\n                : undefined\r\n            }\r\n            bordered\r\n            size={tableSize}\r\n            scroll={{ x: \"max-content\" }}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n});\r\n\r\nProTable.propTypes = {\r\n  rowKey: PropTypes.string.isRequired,\r\n  dataSource: PropTypes.array,\r\n  request: PropTypes.func,\r\n  onRefresh: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  onReset: PropTypes.func,\r\n  columns: PropTypes.array.isRequired,\r\n  search: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  toolBarRender: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.array,\r\n    PropTypes.func,\r\n  ]),\r\n  headerTitle: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.array,\r\n    PropTypes.func,\r\n    PropTypes.string,\r\n  ]),\r\n  batchBarRender: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.array,\r\n    PropTypes.func,\r\n  ]),\r\n  tableRowSelection: PropTypes.object,\r\n  pagination: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\r\n};\r\n\r\nexport default ProTable;\r\n","import { useState, useRef } from \"react\";\r\nimport { useBoolean } from \"ahooks\";\r\n\r\n// 使用场景：有些时候，当请求返回足够快的情况下，loading 可能会在短时间内完成 false -> true -> false 状态的切换，\r\n// 这时候，加载动画可能会出现闪烁的情况（特别是占满一整屏的动画），这给会用户带来糟糕的体验。\r\n\r\nconst getTime = () => new Date().getTime(); // 获取当前时间戳\r\n\r\n// 延迟 loading变成 true,如果在 delay时间内调用 setFalse，则 loading不会变成 true，有效防止闪烁。\r\n// 处理逻辑：如果请求返回过快，则直接不显示loading\r\nexport const useLoadingDelay = function (val, delay = 500) {\r\n  const [loading, { set }] = useBoolean(val);\r\n  const timerRef = useRef(null);\r\n\r\n  const setTrue = () => {\r\n    if (timerRef.current) return; // 感觉没必要重复设置\r\n    timerRef.current = setTimeout(() => set(true), delay || 0);\r\n  };\r\n\r\n  const setFalse = () => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n    set(false);\r\n  };\r\n\r\n  return [loading, { setTrue, setFalse }];\r\n};\r\n\r\n// 让 loading 持续指定的时间以上\r\n// 处理逻辑：如果请求时间少于指定的时间，则最终时间为指定的时间，如果请求时间大于指定的时间，则最终时间为请求的时间\r\nexport const useLoadingKeep = function (val, delay = 500) {\r\n  const [loading, { set }] = useBoolean(val);\r\n  const timerRef = useRef(null);\r\n  const [timer, setTimer] = useState();\r\n\r\n  const setTrue = () => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n    set(true);\r\n    setTimer(getTime());\r\n  };\r\n\r\n  const setFalse = () => {\r\n    if (timerRef.current) return; // 感觉没必要重复设置\r\n\r\n    const currentTime = getTime();\r\n    const formerTime = timer || currentTime;\r\n    const runTime = currentTime - formerTime; // loading已经运行的时间\r\n    timerRef.current = setTimeout(\r\n      () => set(false),\r\n      runTime > delay ? 0 : delay - runTime\r\n    );\r\n    setTimer(undefined); // 清除timer，避免重复setFalse\r\n  };\r\n\r\n  return [loading, { setTrue, setFalse }];\r\n};\r\n\r\n// 不管是单独使用useLoadingDelay还是单独使用useLoadingKeep，效果都不是最好\r\n// 所以他们两个可以中和一下，最终的表现是：\r\n//  如果在指定的时间内完成了请求，那就不展示 loading 动画，超过指定时间后才进行展示\r\n//  如果展示了 loading 动画，那至少要展示足够长的时间，不能一闪而过\r\nexport default function useLoadingDelayAndKeep(val = false, options) {\r\n  const [loading, { set }] = useBoolean(val);\r\n  const timerRef = useRef(null);\r\n  const [timer, setTimer] = useState();\r\n\r\n  const _options = { delay: 300, keep: 500, ...options };\r\n\r\n  const setTrue = () => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n    timerRef.current = setTimeout(() => {\r\n      set(true);\r\n      setTimer(getTime());\r\n    }, _options.delay || 0);\r\n  };\r\n\r\n  const setFalse = () => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n    const { keep = 0 } = _options;\r\n    const currentTime = getTime();\r\n    const formerTime = timer || currentTime;\r\n    const runTime = currentTime - formerTime; // loading已经运行的时间\r\n    timerRef.current = setTimeout(\r\n      () => set(false),\r\n      runTime > keep ? 0 : keep - runTime\r\n    );\r\n    setTimer(undefined); // 清除timer，避免重复setFalse\r\n  };\r\n\r\n  return [loading, { setTrue, setFalse }];\r\n}\r\n"],"names":["toolsWidth","DropdownBox","styled","Form","ToolsItem","forwardRef","props","ref","form","visible","setTrue","setFalse","useBoolean","children","style","className","rest","reset","resetFields","submit","useImperativeHandle","_jsx","Card","bodyStyle","paddingTop","paddingBottom","_jsxs","layout","height","paddingRight","Space","Button","type","htmlType","onClick","padding","CaretUpOutlined","marginInlineStart","CaretDownOutlined","value","onChange","options","plainOptions","map","item","indeterminate","setIndeterminate","useState","checkAll","setCheckAll","onCheckChange","list","length","Popover","arrow","content","minWidth","display","justifyContent","Checkbox","e","target","checked","lineHeight","Divider","margin","keys","label","placement","trigger","Input","title","name","dataIndex","formItemProps","AInput","placeholder","fieldProps","Select","ASelect","width","allowClear","ACheckbox","Radio","ARadio","Date","DatePicker","RangePicker","TreeSelect","ATreeSelect","treeData","FormItem","renderFormItem","DateRange","getRowkey","row","key","initialTableSize","ProTable","dataSource","columns","search","toolBarRender","headerTitle","batchBarRender","tableRowSelection","pagination","paginationConfig","loading","onRefresh","onSubmit","onReset","initialValues","useMemo","Object","fromEntries","filter","initialValue","formItems","hideInSearch","tableColumns","hideInTable","configkeys","setConfigkeys","params","setParams","searchFrom","useRef","requestData","usePagination","current","pageSize","Array","isArray","request","refreshDeps","defaultCurrent","defaultPageSize","loadingDelay","tableConfig","isDataSource","paginationBaseConfig","showSizeChanger","showQuickJumper","showTotal","total","range","join","marginBottom","data","refresh","pageIndex","changeCurrent","tableLoading","useLoadingDelayAndKeep","useEffect","tableSize","setTableSize","selectedRowKeys","setSelectedRowKeys","clearSelected","token","borderRadius","controlItemBgActive","colorText","theme","_Fragment","DropdownFrom","onFinish","values","marginTop","styles","color","Tooltip","ReloadOutlined","Dropdown","overlayStyle","menu","items","selectable","defaultSelectedKeys","ColumnHeightOutlined","ColumnSetting","SettingOutlined","backgroundColor","Table","rowKey","includes","rowSelection","preserveSelectedRowKeys","undefined","bordered","size","scroll","x","propTypes","PropTypes","getTime","val","set","timerRef","timer","setTimer","_options","delay","keep","clearTimeout","setTimeout","currentTime","runTime"],"sourceRoot":""}