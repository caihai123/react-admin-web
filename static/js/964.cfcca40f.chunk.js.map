{"version":3,"file":"static/js/964.cfcca40f.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/pages/hooks/use-loading-delay-and-keep.jsx"],"sourcesContent":["import {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Spin,\r\n  InputNumber,\r\n  theme,\r\n  Input,\r\n  Space,\r\n} from \"antd\";\r\nimport { useBoolean } from \"ahooks\";\r\nimport useLoadingDelayAndKeep, {\r\n  useLoadingDelay,\r\n  useLoadingKeep,\r\n} from \"@/hooks/useLoadingDelayAndKeep\";\r\nimport { useState } from \"react\";\r\n\r\nconst LoadingDemo = function ({ options }) {\r\n  const { title, loading, setTrue, setFalse, duration, describe, extra } =\r\n    options;\r\n  return (\r\n    <Card title={title} style={{ marginTop: 20 }} extra={extra}>\r\n      <Spin spinning={loading} tip=\"拼命加载中...\">\r\n        <div\r\n          style={{\r\n            height: 150,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                setTrue();\r\n                setTimeout(setFalse, duration);\r\n              }}\r\n            >\r\n              点击模拟请求\r\n            </Button>\r\n            <div style={{ margin: \"16px 0\", textAlign: \"center\" }}>\r\n              {describe}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Spin>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst OrdinaryLoading = function ({ duration }) {\r\n  const [loading, { setTrue, setFalse }] = useBoolean(false);\r\n  return (\r\n    <LoadingDemo\r\n      options={{\r\n        title: \"普通loading\",\r\n        loading,\r\n        setTrue,\r\n        setFalse,\r\n        duration,\r\n        describe: \"当加载时长比较短的时候，loading就会一闪而过。\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst DelayLoading = function ({ duration }) {\r\n  const [loading, { setTrue, setFalse }] = useLoadingDelay(false);\r\n\r\n  return (\r\n    <LoadingDemo\r\n      options={{\r\n        title: \"延时loading（useLoadingDelay）\",\r\n        loading,\r\n        setTrue,\r\n        setFalse,\r\n        duration,\r\n        describe:\r\n          \"如果加载时间小于500ms，则不会出现loading；如果加载时间大于500ms时，则在500ms后出现loading。\",\r\n        extra: (\r\n          <Input\r\n            style={{ width: 150 }}\r\n            addonBefore=\"delay\"\r\n            defaultValue=\"500ms\"\r\n            disabled\r\n          />\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst KeepLoading = function ({ duration }) {\r\n  const [loading, { setTrue, setFalse }] = useLoadingKeep(false);\r\n  return (\r\n    <LoadingDemo\r\n      options={{\r\n        title: \"持续loading（useLoadingKeep）\",\r\n        loading,\r\n        setTrue,\r\n        setFalse,\r\n        duration,\r\n        describe:\r\n          \"不管加载时间多长都一定会出现loading；如果加载时间小于500ms，则会出现持续时间500ms的loading，反之则持续实际时长。\",\r\n        extra: (\r\n          <Input\r\n            style={{ width: 150 }}\r\n            addonBefore=\"keep\"\r\n            defaultValue=\"500ms\"\r\n            disabled\r\n          />\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst DelayAndKeepLoading = function ({ duration }) {\r\n  const [loading, { setTrue, setFalse }] = useLoadingDelayAndKeep(false);\r\n  return (\r\n    <LoadingDemo\r\n      options={{\r\n        title: \"即延时又持续loading（useLoadingDelayAndKeep）\",\r\n        loading,\r\n        setTrue,\r\n        setFalse,\r\n        duration,\r\n        describe:\r\n          \"这属于是上面两个的中和，如果加载时长小于500ms,则不会出现loading，如果出现了loading，则一定会持续500ms以上。\",\r\n        extra: (\r\n          <Space>\r\n            <Input\r\n              style={{ width: 150 }}\r\n              addonBefore=\"delay\"\r\n              defaultValue=\"500ms\"\r\n              disabled\r\n            />\r\n            <Input\r\n              style={{ width: 150 }}\r\n              addonBefore=\"keep\"\r\n              defaultValue=\"500ms\"\r\n              disabled\r\n            />\r\n          </Space>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default function Index() {\r\n  const {\r\n    token: { colorBgContainer },\r\n  } = theme.useToken();\r\n  const [apiDuration, setApiDuration] = useState(50);\r\n\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <Alert message=\"使用场景：有些时候，当请求返回足够快的情况下，loading 可能会在短时间内完成 false -> true -> false 状态的切换，这时候，加载动画可能会出现闪烁的情况（特别是占满一整屏的动画），这给会用户带来糟糕的体验。\" />\r\n\r\n      <div\r\n        style={{\r\n          marginTop: 20,\r\n          padding: 16,\r\n          backgroundColor: colorBgContainer,\r\n        }}\r\n      >\r\n        <InputNumber\r\n          min={0}\r\n          value={apiDuration}\r\n          onChange={(val) => setApiDuration(val)}\r\n          addonBefore=\"加载时长\"\r\n          addonAfter=\"单位：ms\"\r\n        />\r\n        <div style={{ marginTop: 12 }}>\r\n          设置加载时长后在下面模拟各种loading的效果\r\n        </div>\r\n      </div>\r\n\r\n      <OrdinaryLoading duration={apiDuration} />\r\n\r\n      <DelayLoading duration={apiDuration} />\r\n\r\n      <KeepLoading duration={apiDuration} />\r\n\r\n      <DelayAndKeepLoading duration={apiDuration} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["LoadingDemo","options","title","loading","setTrue","setFalse","duration","describe","extra","_jsx","Card","style","marginTop","children","Spin","spinning","tip","height","display","alignItems","_jsxs","width","textAlign","Button","type","onClick","setTimeout","margin","OrdinaryLoading","useBoolean","DelayLoading","useLoadingDelay","Input","addonBefore","defaultValue","disabled","KeepLoading","useLoadingKeep","DelayAndKeepLoading","useLoadingDelayAndKeep","Space","Index","token","colorBgContainer","theme","apiDuration","setApiDuration","useState","Alert","message","padding","backgroundColor","InputNumber","min","value","onChange","val","addonAfter"],"sourceRoot":""}