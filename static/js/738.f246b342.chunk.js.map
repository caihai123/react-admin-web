{"version":3,"file":"static/js/738.f246b342.chunk.js","mappings":"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","sources":["webpack://react-admin-web/./src/api/system/menu.ts","webpack://react-admin-web/./src/components/DictSelect.tsx","webpack://react-admin-web/./src/components/ModalForm.tsx","webpack://react-admin-web/./src/utils/rules.js","webpack://react-admin-web/./src/pages/system/menu/AddOrEdit.tsx","webpack://react-admin-web/./src/pages/system/menu/index.tsx","webpack://react-admin-web/./node_modules/antd/es/col/index.js","webpack://react-admin-web/./node_modules/antd/es/row/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport axios from \"@/utils/axios\";\r\nimport { menuType } from \"@/utils/dict\";\r\n\r\nimport type { AxiosResultPromise } from \"@/utils/axios\";\r\n\r\nexport type Menu = {\r\n  id: string;\r\n  title: string;\r\n  path: string;\r\n  type: (typeof menuType.options)[number][\"value\"];\r\n  icon: string;\r\n  children?: Menu[];\r\n  buttonList?: { id: string; name: string }[];\r\n};\r\n\r\n/**\r\n * 获取所有菜单\r\n */\r\nexport const getMenuAll: () => AxiosResultPromise<Array<Menu>> = () =>\r\n  axios.get(\"/api/menu/all\");\r\n\r\n/**\r\n * 删除菜单\r\n * @param id - id\r\n */\r\nexport const removeMenu: (id: string) => AxiosResultPromise<any> = (id) =>\r\n  axios.post(\"/api/menu/remove\", { id });\r\n","import { Select, Badge } from \"antd\";\r\nimport * as dicts from \"@/utils/dict\";\r\n\r\nimport type { SelectProps } from \"antd\";\r\n\r\nconst allDict: { [key: string]: any } = dicts;\r\n\r\nexport interface PropsType extends SelectProps {\r\n  dictName: string;\r\n}\r\n\r\nconst DictSelect = function (props: PropsType) {\r\n  const { dictName, placeholder = \"请选择\", ...rest } = props;\r\n\r\n  const { options } = allDict[dictName];\r\n\r\n  return (\r\n    <Select {...rest} placeholder={placeholder}>\r\n      {options.map((item: any) => (\r\n        <Select.Option key={item.value} value={item.value}>\r\n          {item.color ? (\r\n            <Badge color={item.color} text={item.label} />\r\n          ) : (\r\n            item.label\r\n          )}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default DictSelect;\r\n","import { forwardRef, useImperativeHandle, useRef } from \"react\";\r\nimport { useBoolean } from \"ahooks\";\r\nimport { Modal, Form, Space, Button } from \"antd\";\r\nimport useLoadingDelayAndKeep from \"@/hooks/useLoadingDelayAndKeep\";\r\nimport createCompoundedComponent from \"./utils/createCompoundedComponent\";\r\n\r\nimport type { ReactNode, RefObject, ReactElement } from \"react\";\r\nimport type { ModalProps, FormProps } from \"antd\";\r\n\r\nexport type Ref = {\r\n  /** 打开 Modal */\r\n  open: () => void;\r\n  /** 关闭 Modal */\r\n  close: () => void;\r\n};\r\n\r\nexport type Props = {\r\n  /** 表单内容 */\r\n  children?: ReactNode;\r\n  /** Drawer title */\r\n  title?: ModalProps[\"title\"];\r\n  /** Drawer width */\r\n  width?: ModalProps[\"width\"];\r\n  /** 确认按钮文字 默认：确定 */\r\n  submitText?: ReactNode;\r\n  /** 取消按钮文字 默认：取消 */\r\n  cancelText?: ReactNode;\r\n  /** 提交表单后触发的事件 */\r\n  onFinish?: ((values: any) => void | Promise<any>) | undefined;\r\n  /** Drawer 底部内容，当不需要默认底部按钮时，可以设为 footer={null} 默认：确定取消按钮 */\r\n  footer?: ModalProps[\"footer\"];\r\n  /** 表单默认值 */\r\n  initialValues?: FormProps[\"initialValues\"];\r\n  form: FormProps[\"form\"];\r\n  // Modal 完全关闭后的回调\r\n  afterClose?: ModalProps[\"afterClose\"];\r\n  /** Modal 其他属性 优先级较高，可能会覆盖title，width等属性 */\r\n  modalProps?: ModalProps;\r\n  /** Form 其他属性 优先级较高，可能会覆盖onFinish，initialValues等属性 */\r\n  formProps?: FormProps;\r\n};\r\n\r\n/**\r\n * Modal 和 Form 的组合，方便在 Modal 中快速创建表单\r\n */\r\nconst ModalForm = forwardRef<Ref, Props>(function (props, ref) {\r\n  const {\r\n    title,\r\n    width,\r\n    submitText = \"确定\",\r\n    cancelText = \"取消\",\r\n    children,\r\n    modalProps,\r\n    formProps,\r\n    onFinish,\r\n    footer,\r\n    initialValues,\r\n    afterClose,\r\n  } = props;\r\n\r\n  const [open, { set: setOpen }] = useBoolean(false);\r\n\r\n  const [loading, setLoading] = useLoadingDelayAndKeep(false);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    open: () => setOpen(true),\r\n    close: () => setOpen(false),\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      open={open}\r\n      onCancel={() => setOpen(false)}\r\n      width={width}\r\n      footer={\r\n        footer ? (\r\n          footer\r\n        ) : (\r\n          <Space>\r\n            <Button onClick={() => setOpen(false)}>{cancelText}</Button>\r\n            <Button\r\n              type=\"primary\"\r\n              loading={loading}\r\n              onClick={() => props.form?.submit()}\r\n            >\r\n              {submitText}\r\n            </Button>\r\n          </Space>\r\n        )\r\n      }\r\n      centered={true}\r\n      wrapClassName=\"custom-modal-style\"\r\n      maskClosable={false}\r\n      // style={{ marginTop: \"-20vh\" }}\r\n      afterClose={afterClose}\r\n      {...modalProps}\r\n    >\r\n      <Form\r\n        form={props.form}\r\n        autoComplete=\"off\"\r\n        onFinish={(values) => {\r\n          const fnResult = onFinish?.(values);\r\n          if (fnResult instanceof Promise) {\r\n            setLoading.setTrue();\r\n            fnResult\r\n              .then(() => setOpen(false))\r\n              .finally(() => setLoading.setFalse());\r\n          }\r\n        }}\r\n        layout=\"vertical\"\r\n        initialValues={initialValues}\r\n        {...formProps}\r\n      >\r\n        {children}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n});\r\n\r\n// 帮你创建 ref 和 form，可以稍微减少使用时的代码量\r\nconst useModal: (\r\n  props: Omit<Props, \"form\">\r\n) => [RefObject<Ref>, FormProps[\"form\"], ReactElement] = function (props) {\r\n  const ref = useRef<Ref>(null);\r\n  const [form] = Form.useForm();\r\n\r\n  return [ref, form, <ModalForm ref={ref} form={form} {...props} />];\r\n};\r\n\r\nexport default createCompoundedComponent(ModalForm, {\r\n  useModal,\r\n});\r\n","export const path = {\r\n  pattern: /^\\/[\\w-/]*$/,\r\n  message: \"必须以斜杠开头，后跟字母、数字、下划线、中划线或斜杠\",\r\n};\r\n\r\nexport const chinese = {\r\n  // 正则来源：https://any86.github.io/any-rule/\r\n  pattern:\r\n    /^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/,\r\n  message: \"只能是中文/汉字\",\r\n};\r\n\r\nexport const id = {\r\n  pattern: /^[a-z][a-z0-9-]*$/,\r\n  message: \"只能是小写字母、中划线和数字组成，且必须以字母开头\",\r\n};\r\n","import React from \"react\";\r\nimport { Form, Input, App, TreeSelect, Space, Button, Row, Col } from \"antd\";\r\nimport axios from \"@/utils/axios\";\r\nimport ModalForm, { type Ref as ModalFormRef } from \"@/components/ModalForm\";\r\nimport DictSelect from \"@/components/DictSelect\";\r\nimport createCompoundedComponent from \"@/components/utils/createCompoundedComponent\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { path as pathRule, id as idRule } from \"@/utils/rules\";\r\nimport { menuType } from \"@/utils/dict\";\r\n\r\nimport type { Menu } from \"@/api/system/menu\";\r\n\r\nexport type Props = {\r\n  callback: (isAdd: boolean) => void;\r\n  menuTreeAll: Menu[];\r\n};\r\nexport type Ref = {\r\n  addStart: (parentId?: string) => void;\r\n  editStart: (row: Menu) => void;\r\n};\r\n\r\nconst AddOrEdit = React.forwardRef<Ref, Props>((props, ref) => {\r\n  const { message } = App.useApp();\r\n\r\n  const [id, setId] = React.useState(\"\");\r\n\r\n  const modalFormRef = React.useRef<ModalFormRef>(null);\r\n  const [form] = Form.useForm();\r\n\r\n  const typeValue = Form.useWatch(\"type\", form);\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    addStart: (parentId) => {\r\n      form.setFieldValue(\"parentId\", parentId);\r\n      modalFormRef.current?.open();\r\n    },\r\n    editStart: (row) => {\r\n      setId(row.id);\r\n      form.setFieldsValue(row);\r\n      modalFormRef.current?.open();\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <ModalForm\r\n      ref={modalFormRef}\r\n      form={form}\r\n      title={id ? \"编辑\" : \"新增\"}\r\n      width={800}\r\n      afterClose={() => {\r\n        setId(\"\");\r\n        form.resetFields();\r\n      }}\r\n      initialValues={{ type: menuType.enum.menu }}\r\n      onFinish={(values) => {\r\n        const apiUrl = id ? \"/api/menu/update\" : \"/api/menu/add\";\r\n        const successMsg = id ? \"更新成功！\" : \"新增成功！\";\r\n        const params = id ? { id, ...values } : values;\r\n        return axios.post(apiUrl, params).then(() => {\r\n          message.success(successMsg);\r\n          props.callback(!id);\r\n        });\r\n      }}\r\n    >\r\n      <Row gutter={16}>\r\n        <Col span={12}>\r\n          <Form.Item label=\"父节点\" name=\"parentId\" required>\r\n            <TreeSelect\r\n              treeData={props.menuTreeAll}\r\n              fieldNames={{ label: \"title\", value: \"id\" }}\r\n              placeholder=\"根节点\"\r\n              disabled\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label=\"名称\"\r\n            name=\"title\"\r\n            rules={[\r\n              { required: true },\r\n              {\r\n                type: \"string\",\r\n                min: 2,\r\n                max: 10,\r\n                message: \"长度在 2 到 10 个字符！\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"菜单名称\" />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item label=\"类型\" name=\"type\" rules={[{ required: true }]}>\r\n            <DictSelect placeholder=\"菜单类型\" dictName=\"menuType\" />\r\n          </Form.Item>\r\n        </Col>\r\n        {typeValue === menuType.enum.menu && (\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"路径\"\r\n              name=\"path\"\r\n              rules={[{ required: true }, pathRule]}\r\n            >\r\n              <Input placeholder=\"菜单路径\" />\r\n            </Form.Item>\r\n          </Col>\r\n        )}\r\n        <Col span={12}>\r\n          <Form.Item label=\"图标\" name=\"icon\">\r\n            <Input placeholder=\"图标名称\" />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      {typeValue === menuType.enum.menu && (\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item label=\"按钮\">\r\n              <Form.List name=\"buttonList\">\r\n                {(buttonList, subOpt) => (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                    }}\r\n                  >\r\n                    {buttonList.map(({ key, name }) => (\r\n                      <Space key={key} align=\"baseline\">\r\n                        <Form.Item\r\n                          name={[name, \"name\"]}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"按钮名称是必选字段\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input placeholder=\"按钮名称\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name={[name, \"id\"]}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"按钮标识是必选字段\",\r\n                            },\r\n                            idRule,\r\n                          ]}\r\n                        >\r\n                          <Input placeholder=\"按钮标识\" />\r\n                        </Form.Item>\r\n                        <CloseOutlined onClick={() => subOpt.remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Button type=\"dashed\" onClick={() => subOpt.add()} block>\r\n                      + 新增按钮\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </ModalForm>\r\n  );\r\n});\r\n\r\n// 可以稍微减少使用时的代码量\r\nconst useModal: (props: Props) => [React.RefObject<Ref>, React.ReactElement] =\r\n  function (props) {\r\n    const ref = React.useRef<Ref>(null);\r\n\r\n    return [ref, <AddOrEdit ref={ref} {...props} />];\r\n  };\r\n\r\nexport default createCompoundedComponent(AddOrEdit, { useModal });\r\n","import React from \"react\";\r\nimport { Button, Space, Tag, App, Input, theme } from \"antd\";\r\nimport ProTable from \"@/components/ProTable\";\r\nimport { PlusOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport { menuType } from \"@/utils/dict\";\r\nimport { getMenuAll, removeMenu } from \"@/api/system/menu\";\r\nimport PermissionControl, {\r\n  useFilterElementPermission,\r\n} from \"@/components/PermissionControl\";\r\nimport AddOrEdit from \"./AddOrEdit\";\r\nimport { useRequest } from \"ahooks\";\r\nimport { treeFilter } from \"@/utils/tree\";\r\n\r\nimport type { ProTableProps } from \"@/components/ProTable\";\r\nimport type { Menu } from \"@/api/system/menu\";\r\n\r\nexport default function Page() {\r\n  const { modal, message } = App.useApp();\r\n\r\n  const {\r\n    data: tableData,\r\n    loading,\r\n    refresh,\r\n  } = useRequest(async () => {\r\n    const response = await getMenuAll();\r\n    return response.result;\r\n  });\r\n\r\n  // 根据菜单名称过滤列表 Start\r\n  const [realVal, setRealVal] = React.useState<string>(); // 输入框实时value\r\n  const [filterVal, setFilterVal] = React.useState<string>(); // 按下回车后保存realVal\r\n  const filteredTableData = React.useMemo(() => {\r\n    if (!filterVal) return tableData;\r\n    return treeFilter(tableData, (item) =>\r\n      item.title.toLowerCase().includes(filterVal.toLowerCase())\r\n    );\r\n  }, [tableData, filterVal]);\r\n  // 根据菜单名称过滤列表 end\r\n\r\n  // 新增或者编辑弹窗\r\n  const [addOrEditRef, contextHolder] = AddOrEdit.useModal({\r\n    menuTreeAll: tableData as Menu[],\r\n    callback: (isAdd) => {\r\n      refresh();\r\n      if (isAdd) {\r\n        // 新增后清除搜索条件\r\n        setFilterVal(undefined);\r\n        setRealVal(undefined);\r\n      }\r\n    },\r\n  });\r\n\r\n  // 表格的操作栏\r\n  const [actionRender, isShowAction] = useFilterElementPermission(\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          ghost\r\n          size=\"small\"\r\n          onClick={() => addOrEditRef.current?.editStart(row)}\r\n        >\r\n          编辑\r\n        </Button>\r\n      ),\r\n      permission: \"edit\",\r\n    },\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => addOrEditRef.current?.addStart(row.id)}\r\n        >\r\n          新增下级\r\n        </Button>\r\n      ),\r\n      permission: \"add\",\r\n    },\r\n    {\r\n      render: (row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          danger\r\n          size=\"small\"\r\n          onClick={() =>\r\n            modal.confirm({\r\n              title: \"提示\",\r\n              content: \"确定要删除此菜单及其子菜单吗？\",\r\n              okType: \"danger\",\r\n              onOk: () =>\r\n                removeMenu(row.id).then(() => {\r\n                  message.success(\"删除成功！\");\r\n                  refresh();\r\n                }),\r\n              centered: true,\r\n            })\r\n          }\r\n        >\r\n          删除\r\n        </Button>\r\n      ),\r\n      permission: \"del\",\r\n    }\r\n  );\r\n\r\n  const {\r\n    token: { colorError },\r\n  } = theme.useToken();\r\n\r\n  const highlightSubstring = React.useCallback(\r\n    function (text: string, keyword: string): string {\r\n      if (!keyword) {\r\n        return text; // 如果 keyword 为空，直接返回原字符串\r\n      }\r\n\r\n      // 使用正则表达式查找所有匹配的子字符串，并用 <span> 标签包裹\r\n      const regex = new RegExp(`(${keyword})`, \"gi\"); // 'gi' 表示全局和不区分大小写\r\n      return text.replace(regex, `<span style=\"color:${colorError}\">$1</span>`);\r\n    },\r\n    [colorError]\r\n  );\r\n\r\n  const columns: ProTableProps<Menu>[\"columns\"] = [\r\n    {\r\n      title: \"名称\",\r\n      dataIndex: \"title\",\r\n      render: (title) => (\r\n        <div\r\n          dangerouslySetInnerHTML={{\r\n            __html: highlightSubstring(title, filterVal || \"\"),\r\n          }}\r\n        />\r\n      ),\r\n      width: 300,\r\n    },\r\n    {\r\n      title: \"路径\",\r\n      dataIndex: \"path\",\r\n    },\r\n    {\r\n      title: \"图标\",\r\n      dataIndex: \"icon\",\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: \"类型\",\r\n      dataIndex: \"type\",\r\n      render: (type: Menu[\"type\"]) => {\r\n        const map = menuType.map[type];\r\n        return <Tag color={map.color}>{map.label}</Tag>;\r\n      },\r\n      type: \"select\",\r\n      options: menuType.options,\r\n    },\r\n    {\r\n      title: \"按钮\",\r\n      dataIndex: \"buttonList\",\r\n      render: (buttonList: Menu[\"buttonList\"]) => {\r\n        return buttonList?.map((item) => (\r\n          <Tag key={item.id} color=\"#2db7f5\">\r\n            {item.name}\r\n          </Tag>\r\n        ));\r\n      },\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (row) => <Space>{actionRender(row)}</Space>,\r\n      width: 100,\r\n      fixed: \"right\",\r\n      hideInSearch: true,\r\n      hideInTable: !isShowAction,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ProTable\r\n        rowKey=\"id\"\r\n        dataSource={filteredTableData}\r\n        search={false}\r\n        columns={columns}\r\n        headerTitle=\"菜单列表\"\r\n        toolBarRender={\r\n          <Space>\r\n            <Input\r\n              value={realVal}\r\n              prefix={<SearchOutlined />}\r\n              placeholder=\"输入菜单名称查询\"\r\n              style={{ width: 200 }}\r\n              onChange={(e) => setRealVal(e.target.value)}\r\n              onPressEnter={() => setFilterVal(realVal)}\r\n            ></Input>\r\n            <PermissionControl permission=\"add\">\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={() => addOrEditRef.current?.addStart()}\r\n              >\r\n                新增\r\n              </Button>\r\n            </PermissionControl>\r\n          </Space>\r\n        }\r\n        pagination={false}\r\n        loading={loading}\r\n        onRefresh={() => refresh()}\r\n      ></ProTable>\r\n      {contextHolder}\r\n    </>\r\n  );\r\n}\r\n","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["getMenuAll","axios","removeMenu","id","allDict","dicts","props","dictName","placeholder","rest","options","_jsx","Select","children","map","item","value","color","Badge","text","label","ModalForm","forwardRef","ref","title","width","submitText","cancelText","modalProps","formProps","onFinish","footer","initialValues","afterClose","open","set","setOpen","useBoolean","loading","setLoading","useLoadingDelayAndKeep","useImperativeHandle","close","Modal","onCancel","_jsxs","Space","Button","onClick","type","form","submit","centered","wrapClassName","maskClosable","Form","autoComplete","values","fnResult","Promise","setTrue","then","finally","setFalse","layout","createCompoundedComponent","useModal","useRef","path","pattern","message","AddOrEdit","React","App","setId","modalFormRef","typeValue","addStart","parentId","setFieldValue","current","editStart","row","setFieldsValue","resetFields","menuType","apiUrl","successMsg","params","success","callback","Row","gutter","Col","span","name","required","TreeSelect","treeData","menuTreeAll","fieldNames","disabled","rules","min","max","Input","DictSelect","pathRule","buttonList","subOpt","style","display","flexDirection","key","align","idRule","CloseOutlined","remove","add","block","Page","modal","data","tableData","refresh","useRequest","async","result","realVal","setRealVal","filterVal","setFilterVal","filteredTableData","treeFilter","toLowerCase","includes","addOrEditRef","contextHolder","isAdd","undefined","actionRender","isShowAction","useFilterElementPermission","render","ghost","size","permission","danger","confirm","content","okType","onOk","token","colorError","theme","highlightSubstring","keyword","regex","RegExp","replace","columns","dataIndex","dangerouslySetInnerHTML","__html","hideInSearch","Tag","fixed","hideInTable","_Fragment","ProTable","rowKey","dataSource","search","headerTitle","toolBarRender","prefix","SearchOutlined","onChange","e","target","onPressEnter","PermissionControl","icon","PlusOutlined","pagination","onRefresh"],"sourceRoot":""}